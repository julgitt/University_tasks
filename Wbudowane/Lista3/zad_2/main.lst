
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00000a38  00000acc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a38  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800126  00800126  00000af2  2**0
                  ALLOC
  3 .stab         000007ec  00000000  00000000  00000af4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000eb7  00000000  00000000  000012e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00002197  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000021a8  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  000021e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  000027dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  00002d7e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00002d98  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e3       	ldi	r30, 0x38	; 56
  7c:	fa e0       	ldi	r31, 0x0A	; 10
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 32       	cpi	r26, 0x26	; 38
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e2       	ldi	r26, 0x26	; 38
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 33       	cpi	r26, 0x3A	; 58
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 7f 00 	call	0xfe	; 0xfe <main>
  9e:	0c 94 1a 05 	jmp	0xa34	; 0xa34 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <uart_transmit>:

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
  a6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  aa:	95 ff       	sbrs	r25, 5
  ac:	fc cf       	rjmp	.-8      	; 0xa6 <uart_transmit>
  UDR0 = data;
  ae:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
  return 0;
}
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	08 95       	ret

000000b8 <uart_receive>:

// odczyt jednego znaku
int uart_receive(FILE *stream)
{
  // czekaj aż znak dostępny
  while (!(UCSR0A & _BV(RXC0)));
  b8:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  bc:	87 ff       	sbrs	r24, 7
  be:	fc cf       	rjmp	.-8      	; 0xb8 <uart_receive>
  return UDR0;
  c0:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	08 95       	ret

000000c8 <uart_init>:

// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
  c8:	87 e6       	ldi	r24, 0x67	; 103
  ca:	90 e0       	ldi	r25, 0x00	; 0
  cc:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
  d0:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
  d4:	88 e1       	ldi	r24, 0x18	; 24
  d6:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
  da:	86 e0       	ldi	r24, 0x06	; 6
  dc:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  e0:	08 95       	ret

000000e2 <adc_init>:

// inicjalizacja ADC

void adc_init()
{
  ADMUX   = _BV(REFS0); // referencja AVcc, wejście ADC0
  e2:	80 e4       	ldi	r24, 0x40	; 64
  e4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  DIDR0   = _BV(ADC0D); // wyłącz wejście cyfrowe na ADC0
  e8:	81 e0       	ldi	r24, 0x01	; 1
  ea:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
  // częstotliwość zegara ADC 125 kHz (16 MHz / 128)
  ADCSRA  = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2); // preskaler 128
  ee:	ea e7       	ldi	r30, 0x7A	; 122
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	87 e0       	ldi	r24, 0x07	; 7
  f4:	80 83       	st	Z, r24
  ADCSRA |= _BV(ADEN); // włącz ADC
  f6:	80 81       	ld	r24, Z
  f8:	80 68       	ori	r24, 0x80	; 128
  fa:	80 83       	st	Z, r24
  fc:	08 95       	ret

000000fe <main>:

// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
  fe:	87 e6       	ldi	r24, 0x67	; 103
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 106:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
 10a:	88 e1       	ldi	r24, 0x18	; 24
 10c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
 110:	86 e0       	ldi	r24, 0x06	; 6
 112:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
int main()
{
  // zainicjalizuj UART
  uart_init();
  // skonfiguruj strumienie wejścia/wyjścia
  fdev_setup_stream(&uart_file, uart_transmit, uart_receive, _FDEV_SETUP_RW);
 116:	86 e2       	ldi	r24, 0x26	; 38
 118:	91 e0       	ldi	r25, 0x01	; 1
 11a:	23 e5       	ldi	r18, 0x53	; 83
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	30 93 2f 01 	sts	0x012F, r19	; 0x80012f <__data_end+0x9>
 122:	20 93 2e 01 	sts	0x012E, r18	; 0x80012e <__data_end+0x8>
 126:	2c e5       	ldi	r18, 0x5C	; 92
 128:	30 e0       	ldi	r19, 0x00	; 0
 12a:	30 93 31 01 	sts	0x0131, r19	; 0x800131 <__data_end+0xb>
 12e:	20 93 30 01 	sts	0x0130, r18	; 0x800130 <__data_end+0xa>
 132:	23 e0       	ldi	r18, 0x03	; 3
 134:	20 93 29 01 	sts	0x0129, r18	; 0x800129 <__data_end+0x3>
 138:	10 92 33 01 	sts	0x0133, r1	; 0x800133 <__data_end+0xd>
 13c:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <__data_end+0xc>
  stdin = stdout = stderr = &uart_file;
 140:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <__iob+0x5>
 144:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <__iob+0x4>
 148:	90 93 37 01 	sts	0x0137, r25	; 0x800137 <__iob+0x3>
 14c:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__iob+0x2>
 150:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <__iob+0x1>
 154:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <__iob>

// inicjalizacja ADC

void adc_init()
{
  ADMUX   = _BV(REFS0); // referencja AVcc, wejście ADC0
 158:	80 e4       	ldi	r24, 0x40	; 64
 15a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
  DIDR0   = _BV(ADC0D); // wyłącz wejście cyfrowe na ADC0
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
  // częstotliwość zegara ADC 125 kHz (16 MHz / 128)
  ADCSRA  = _BV(ADPS0) | _BV(ADPS1) | _BV(ADPS2); // preskaler 128
 164:	87 e0       	ldi	r24, 0x07	; 7
 166:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  ADCSRA |= _BV(ADEN); // włącz ADC
 16a:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 16e:	80 68       	ori	r24, 0x80	; 128
 170:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
  stdin = stdout = stderr = &uart_file;

  // zainicjalizuj ADC
  adc_init();

  LED_DDR |= _BV(LED);
 174:	25 9a       	sbi	0x04, 5	; 4
  LED_PORT &= _BV(LED);
 176:	85 b1       	in	r24, 0x05	; 5
 178:	80 72       	andi	r24, 0x20	; 32
 17a:	85 b9       	out	0x05, r24	; 5
    while (!(ADCSRA & _BV(ADIF))); // czekaj na wynik
    ADCSRA |= _BV(ADIF); 	   // wyczyść bit ADIF (pisząc 1!)
    
    adc_reading = ADC; 	       	  // weź zmierzoną wartość (0..1023)
    vcc = 1.1 * 1023 / adc_reading; 
    printf("Odczytano: ADC:%"PRIu16" VCC:%"PRIu16" lampka:%"PRIu16"\r\n", adc_reading, (int16_t)vcc, ((LED_PORT & _BV(LED))? 1 : 0 ));
 17c:	00 e0       	ldi	r16, 0x00	; 0
 17e:	11 e0       	ldi	r17, 0x01	; 1

 int16_t adc_reading;
  float vcc;
  // mierz napięcie
  while(1) {
    LED_PORT = ~LED_PORT;
 180:	85 b1       	in	r24, 0x05	; 5
 182:	80 95       	com	r24
 184:	85 b9       	out	0x05, r24	; 5
    ADCSRA |= _BV(ADSC); 	   // wykonaj konwersję
 186:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 18a:	80 64       	ori	r24, 0x40	; 64
 18c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    while (!(ADCSRA & _BV(ADIF))); // czekaj na wynik
 190:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 194:	84 ff       	sbrs	r24, 4
 196:	fc cf       	rjmp	.-8      	; 0x190 <main+0x92>
    ADCSRA |= _BV(ADIF); 	   // wyczyść bit ADIF (pisząc 1!)
 198:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
 19c:	80 61       	ori	r24, 0x10	; 16
 19e:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
    
    adc_reading = ADC; 	       	  // weź zmierzoną wartość (0..1023)
 1a2:	c0 91 78 00 	lds	r28, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
 1a6:	d0 91 79 00 	lds	r29, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
    vcc = 1.1 * 1023 / adc_reading; 
    printf("Odczytano: ADC:%"PRIu16" VCC:%"PRIu16" lampka:%"PRIu16"\r\n", adc_reading, (int16_t)vcc, ((LED_PORT & _BV(LED))? 1 : 0 ));
 1aa:	85 b1       	in	r24, 0x05	; 5
 1ac:	85 fb       	bst	r24, 5
 1ae:	88 27       	eor	r24, r24
 1b0:	80 f9       	bld	r24, 0
 1b2:	1f 92       	push	r1
 1b4:	8f 93       	push	r24
 1b6:	be 01       	movw	r22, r28
 1b8:	0d 2e       	mov	r0, r29
 1ba:	00 0c       	add	r0, r0
 1bc:	88 0b       	sbc	r24, r24
 1be:	99 0b       	sbc	r25, r25
 1c0:	0e 94 b0 01 	call	0x360	; 0x360 <__floatsisf>
 1c4:	9b 01       	movw	r18, r22
 1c6:	ac 01       	movw	r20, r24
 1c8:	6a e9       	ldi	r22, 0x9A	; 154
 1ca:	79 ea       	ldi	r23, 0xA9	; 169
 1cc:	8c e8       	ldi	r24, 0x8C	; 140
 1ce:	94 e4       	ldi	r25, 0x44	; 68
 1d0:	0e 94 06 01 	call	0x20c	; 0x20c <__divsf3>
 1d4:	0e 94 78 01 	call	0x2f0	; 0x2f0 <__fixsfsi>
 1d8:	7f 93       	push	r23
 1da:	6f 93       	push	r22
 1dc:	df 93       	push	r29
 1de:	cf 93       	push	r28
 1e0:	1f 93       	push	r17
 1e2:	0f 93       	push	r16
 1e4:	0e 94 3c 02 	call	0x478	; 0x478 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e8:	9f ef       	ldi	r25, 0xFF	; 255
 1ea:	23 ed       	ldi	r18, 0xD3	; 211
 1ec:	80 e3       	ldi	r24, 0x30	; 48
 1ee:	91 50       	subi	r25, 0x01	; 1
 1f0:	20 40       	sbci	r18, 0x00	; 0
 1f2:	80 40       	sbci	r24, 0x00	; 0
 1f4:	e1 f7       	brne	.-8      	; 0x1ee <main+0xf0>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <main+0xfa>
 1f8:	00 00       	nop
 1fa:	8d b7       	in	r24, 0x3d	; 61
 1fc:	9e b7       	in	r25, 0x3e	; 62
 1fe:	08 96       	adiw	r24, 0x08	; 8
 200:	0f b6       	in	r0, 0x3f	; 63
 202:	f8 94       	cli
 204:	9e bf       	out	0x3e, r25	; 62
 206:	0f be       	out	0x3f, r0	; 63
 208:	8d bf       	out	0x3d, r24	; 61
 20a:	ba cf       	rjmp	.-140    	; 0x180 <main+0x82>

0000020c <__divsf3>:
 20c:	0e 94 1a 01 	call	0x234	; 0x234 <__divsf3x>
 210:	0c 94 02 02 	jmp	0x404	; 0x404 <__fp_round>
 214:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <__fp_pscB>
 218:	58 f0       	brcs	.+22     	; 0x230 <__divsf3+0x24>
 21a:	0e 94 f4 01 	call	0x3e8	; 0x3e8 <__fp_pscA>
 21e:	40 f0       	brcs	.+16     	; 0x230 <__divsf3+0x24>
 220:	29 f4       	brne	.+10     	; 0x22c <__divsf3+0x20>
 222:	5f 3f       	cpi	r21, 0xFF	; 255
 224:	29 f0       	breq	.+10     	; 0x230 <__divsf3+0x24>
 226:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__fp_inf>
 22a:	51 11       	cpse	r21, r1
 22c:	0c 94 36 02 	jmp	0x46c	; 0x46c <__fp_szero>
 230:	0c 94 f1 01 	jmp	0x3e2	; 0x3e2 <__fp_nan>

00000234 <__divsf3x>:
 234:	0e 94 13 02 	call	0x426	; 0x426 <__fp_split3>
 238:	68 f3       	brcs	.-38     	; 0x214 <__divsf3+0x8>

0000023a <__divsf3_pse>:
 23a:	99 23       	and	r25, r25
 23c:	b1 f3       	breq	.-20     	; 0x22a <__divsf3+0x1e>
 23e:	55 23       	and	r21, r21
 240:	91 f3       	breq	.-28     	; 0x226 <__divsf3+0x1a>
 242:	95 1b       	sub	r25, r21
 244:	55 0b       	sbc	r21, r21
 246:	bb 27       	eor	r27, r27
 248:	aa 27       	eor	r26, r26
 24a:	62 17       	cp	r22, r18
 24c:	73 07       	cpc	r23, r19
 24e:	84 07       	cpc	r24, r20
 250:	38 f0       	brcs	.+14     	; 0x260 <__divsf3_pse+0x26>
 252:	9f 5f       	subi	r25, 0xFF	; 255
 254:	5f 4f       	sbci	r21, 0xFF	; 255
 256:	22 0f       	add	r18, r18
 258:	33 1f       	adc	r19, r19
 25a:	44 1f       	adc	r20, r20
 25c:	aa 1f       	adc	r26, r26
 25e:	a9 f3       	breq	.-22     	; 0x24a <__divsf3_pse+0x10>
 260:	35 d0       	rcall	.+106    	; 0x2cc <__divsf3_pse+0x92>
 262:	0e 2e       	mov	r0, r30
 264:	3a f0       	brmi	.+14     	; 0x274 <__divsf3_pse+0x3a>
 266:	e0 e8       	ldi	r30, 0x80	; 128
 268:	32 d0       	rcall	.+100    	; 0x2ce <__divsf3_pse+0x94>
 26a:	91 50       	subi	r25, 0x01	; 1
 26c:	50 40       	sbci	r21, 0x00	; 0
 26e:	e6 95       	lsr	r30
 270:	00 1c       	adc	r0, r0
 272:	ca f7       	brpl	.-14     	; 0x266 <__divsf3_pse+0x2c>
 274:	2b d0       	rcall	.+86     	; 0x2cc <__divsf3_pse+0x92>
 276:	fe 2f       	mov	r31, r30
 278:	29 d0       	rcall	.+82     	; 0x2cc <__divsf3_pse+0x92>
 27a:	66 0f       	add	r22, r22
 27c:	77 1f       	adc	r23, r23
 27e:	88 1f       	adc	r24, r24
 280:	bb 1f       	adc	r27, r27
 282:	26 17       	cp	r18, r22
 284:	37 07       	cpc	r19, r23
 286:	48 07       	cpc	r20, r24
 288:	ab 07       	cpc	r26, r27
 28a:	b0 e8       	ldi	r27, 0x80	; 128
 28c:	09 f0       	breq	.+2      	; 0x290 <__divsf3_pse+0x56>
 28e:	bb 0b       	sbc	r27, r27
 290:	80 2d       	mov	r24, r0
 292:	bf 01       	movw	r22, r30
 294:	ff 27       	eor	r31, r31
 296:	93 58       	subi	r25, 0x83	; 131
 298:	5f 4f       	sbci	r21, 0xFF	; 255
 29a:	3a f0       	brmi	.+14     	; 0x2aa <__divsf3_pse+0x70>
 29c:	9e 3f       	cpi	r25, 0xFE	; 254
 29e:	51 05       	cpc	r21, r1
 2a0:	78 f0       	brcs	.+30     	; 0x2c0 <__divsf3_pse+0x86>
 2a2:	0c 94 eb 01 	jmp	0x3d6	; 0x3d6 <__fp_inf>
 2a6:	0c 94 36 02 	jmp	0x46c	; 0x46c <__fp_szero>
 2aa:	5f 3f       	cpi	r21, 0xFF	; 255
 2ac:	e4 f3       	brlt	.-8      	; 0x2a6 <__divsf3_pse+0x6c>
 2ae:	98 3e       	cpi	r25, 0xE8	; 232
 2b0:	d4 f3       	brlt	.-12     	; 0x2a6 <__divsf3_pse+0x6c>
 2b2:	86 95       	lsr	r24
 2b4:	77 95       	ror	r23
 2b6:	67 95       	ror	r22
 2b8:	b7 95       	ror	r27
 2ba:	f7 95       	ror	r31
 2bc:	9f 5f       	subi	r25, 0xFF	; 255
 2be:	c9 f7       	brne	.-14     	; 0x2b2 <__divsf3_pse+0x78>
 2c0:	88 0f       	add	r24, r24
 2c2:	91 1d       	adc	r25, r1
 2c4:	96 95       	lsr	r25
 2c6:	87 95       	ror	r24
 2c8:	97 f9       	bld	r25, 7
 2ca:	08 95       	ret
 2cc:	e1 e0       	ldi	r30, 0x01	; 1
 2ce:	66 0f       	add	r22, r22
 2d0:	77 1f       	adc	r23, r23
 2d2:	88 1f       	adc	r24, r24
 2d4:	bb 1f       	adc	r27, r27
 2d6:	62 17       	cp	r22, r18
 2d8:	73 07       	cpc	r23, r19
 2da:	84 07       	cpc	r24, r20
 2dc:	ba 07       	cpc	r27, r26
 2de:	20 f0       	brcs	.+8      	; 0x2e8 <__divsf3_pse+0xae>
 2e0:	62 1b       	sub	r22, r18
 2e2:	73 0b       	sbc	r23, r19
 2e4:	84 0b       	sbc	r24, r20
 2e6:	ba 0b       	sbc	r27, r26
 2e8:	ee 1f       	adc	r30, r30
 2ea:	88 f7       	brcc	.-30     	; 0x2ce <__divsf3_pse+0x94>
 2ec:	e0 95       	com	r30
 2ee:	08 95       	ret

000002f0 <__fixsfsi>:
 2f0:	0e 94 7f 01 	call	0x2fe	; 0x2fe <__fixunssfsi>
 2f4:	68 94       	set
 2f6:	b1 11       	cpse	r27, r1
 2f8:	0c 94 36 02 	jmp	0x46c	; 0x46c <__fp_szero>
 2fc:	08 95       	ret

000002fe <__fixunssfsi>:
 2fe:	0e 94 1b 02 	call	0x436	; 0x436 <__fp_splitA>
 302:	88 f0       	brcs	.+34     	; 0x326 <__fixunssfsi+0x28>
 304:	9f 57       	subi	r25, 0x7F	; 127
 306:	98 f0       	brcs	.+38     	; 0x32e <__fixunssfsi+0x30>
 308:	b9 2f       	mov	r27, r25
 30a:	99 27       	eor	r25, r25
 30c:	b7 51       	subi	r27, 0x17	; 23
 30e:	b0 f0       	brcs	.+44     	; 0x33c <__fixunssfsi+0x3e>
 310:	e1 f0       	breq	.+56     	; 0x34a <__fixunssfsi+0x4c>
 312:	66 0f       	add	r22, r22
 314:	77 1f       	adc	r23, r23
 316:	88 1f       	adc	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	1a f0       	brmi	.+6      	; 0x322 <__fixunssfsi+0x24>
 31c:	ba 95       	dec	r27
 31e:	c9 f7       	brne	.-14     	; 0x312 <__fixunssfsi+0x14>
 320:	14 c0       	rjmp	.+40     	; 0x34a <__fixunssfsi+0x4c>
 322:	b1 30       	cpi	r27, 0x01	; 1
 324:	91 f0       	breq	.+36     	; 0x34a <__fixunssfsi+0x4c>
 326:	0e 94 35 02 	call	0x46a	; 0x46a <__fp_zero>
 32a:	b1 e0       	ldi	r27, 0x01	; 1
 32c:	08 95       	ret
 32e:	0c 94 35 02 	jmp	0x46a	; 0x46a <__fp_zero>
 332:	67 2f       	mov	r22, r23
 334:	78 2f       	mov	r23, r24
 336:	88 27       	eor	r24, r24
 338:	b8 5f       	subi	r27, 0xF8	; 248
 33a:	39 f0       	breq	.+14     	; 0x34a <__fixunssfsi+0x4c>
 33c:	b9 3f       	cpi	r27, 0xF9	; 249
 33e:	cc f3       	brlt	.-14     	; 0x332 <__fixunssfsi+0x34>
 340:	86 95       	lsr	r24
 342:	77 95       	ror	r23
 344:	67 95       	ror	r22
 346:	b3 95       	inc	r27
 348:	d9 f7       	brne	.-10     	; 0x340 <__fixunssfsi+0x42>
 34a:	3e f4       	brtc	.+14     	; 0x35a <__fixunssfsi+0x5c>
 34c:	90 95       	com	r25
 34e:	80 95       	com	r24
 350:	70 95       	com	r23
 352:	61 95       	neg	r22
 354:	7f 4f       	sbci	r23, 0xFF	; 255
 356:	8f 4f       	sbci	r24, 0xFF	; 255
 358:	9f 4f       	sbci	r25, 0xFF	; 255
 35a:	08 95       	ret

0000035c <__floatunsisf>:
 35c:	e8 94       	clt
 35e:	09 c0       	rjmp	.+18     	; 0x372 <__floatsisf+0x12>

00000360 <__floatsisf>:
 360:	97 fb       	bst	r25, 7
 362:	3e f4       	brtc	.+14     	; 0x372 <__floatsisf+0x12>
 364:	90 95       	com	r25
 366:	80 95       	com	r24
 368:	70 95       	com	r23
 36a:	61 95       	neg	r22
 36c:	7f 4f       	sbci	r23, 0xFF	; 255
 36e:	8f 4f       	sbci	r24, 0xFF	; 255
 370:	9f 4f       	sbci	r25, 0xFF	; 255
 372:	99 23       	and	r25, r25
 374:	a9 f0       	breq	.+42     	; 0x3a0 <__floatsisf+0x40>
 376:	f9 2f       	mov	r31, r25
 378:	96 e9       	ldi	r25, 0x96	; 150
 37a:	bb 27       	eor	r27, r27
 37c:	93 95       	inc	r25
 37e:	f6 95       	lsr	r31
 380:	87 95       	ror	r24
 382:	77 95       	ror	r23
 384:	67 95       	ror	r22
 386:	b7 95       	ror	r27
 388:	f1 11       	cpse	r31, r1
 38a:	f8 cf       	rjmp	.-16     	; 0x37c <__floatsisf+0x1c>
 38c:	fa f4       	brpl	.+62     	; 0x3cc <__floatsisf+0x6c>
 38e:	bb 0f       	add	r27, r27
 390:	11 f4       	brne	.+4      	; 0x396 <__floatsisf+0x36>
 392:	60 ff       	sbrs	r22, 0
 394:	1b c0       	rjmp	.+54     	; 0x3cc <__floatsisf+0x6c>
 396:	6f 5f       	subi	r22, 0xFF	; 255
 398:	7f 4f       	sbci	r23, 0xFF	; 255
 39a:	8f 4f       	sbci	r24, 0xFF	; 255
 39c:	9f 4f       	sbci	r25, 0xFF	; 255
 39e:	16 c0       	rjmp	.+44     	; 0x3cc <__floatsisf+0x6c>
 3a0:	88 23       	and	r24, r24
 3a2:	11 f0       	breq	.+4      	; 0x3a8 <__floatsisf+0x48>
 3a4:	96 e9       	ldi	r25, 0x96	; 150
 3a6:	11 c0       	rjmp	.+34     	; 0x3ca <__floatsisf+0x6a>
 3a8:	77 23       	and	r23, r23
 3aa:	21 f0       	breq	.+8      	; 0x3b4 <__floatsisf+0x54>
 3ac:	9e e8       	ldi	r25, 0x8E	; 142
 3ae:	87 2f       	mov	r24, r23
 3b0:	76 2f       	mov	r23, r22
 3b2:	05 c0       	rjmp	.+10     	; 0x3be <__floatsisf+0x5e>
 3b4:	66 23       	and	r22, r22
 3b6:	71 f0       	breq	.+28     	; 0x3d4 <__floatsisf+0x74>
 3b8:	96 e8       	ldi	r25, 0x86	; 134
 3ba:	86 2f       	mov	r24, r22
 3bc:	70 e0       	ldi	r23, 0x00	; 0
 3be:	60 e0       	ldi	r22, 0x00	; 0
 3c0:	2a f0       	brmi	.+10     	; 0x3cc <__floatsisf+0x6c>
 3c2:	9a 95       	dec	r25
 3c4:	66 0f       	add	r22, r22
 3c6:	77 1f       	adc	r23, r23
 3c8:	88 1f       	adc	r24, r24
 3ca:	da f7       	brpl	.-10     	; 0x3c2 <__floatsisf+0x62>
 3cc:	88 0f       	add	r24, r24
 3ce:	96 95       	lsr	r25
 3d0:	87 95       	ror	r24
 3d2:	97 f9       	bld	r25, 7
 3d4:	08 95       	ret

000003d6 <__fp_inf>:
 3d6:	97 f9       	bld	r25, 7
 3d8:	9f 67       	ori	r25, 0x7F	; 127
 3da:	80 e8       	ldi	r24, 0x80	; 128
 3dc:	70 e0       	ldi	r23, 0x00	; 0
 3de:	60 e0       	ldi	r22, 0x00	; 0
 3e0:	08 95       	ret

000003e2 <__fp_nan>:
 3e2:	9f ef       	ldi	r25, 0xFF	; 255
 3e4:	80 ec       	ldi	r24, 0xC0	; 192
 3e6:	08 95       	ret

000003e8 <__fp_pscA>:
 3e8:	00 24       	eor	r0, r0
 3ea:	0a 94       	dec	r0
 3ec:	16 16       	cp	r1, r22
 3ee:	17 06       	cpc	r1, r23
 3f0:	18 06       	cpc	r1, r24
 3f2:	09 06       	cpc	r0, r25
 3f4:	08 95       	ret

000003f6 <__fp_pscB>:
 3f6:	00 24       	eor	r0, r0
 3f8:	0a 94       	dec	r0
 3fa:	12 16       	cp	r1, r18
 3fc:	13 06       	cpc	r1, r19
 3fe:	14 06       	cpc	r1, r20
 400:	05 06       	cpc	r0, r21
 402:	08 95       	ret

00000404 <__fp_round>:
 404:	09 2e       	mov	r0, r25
 406:	03 94       	inc	r0
 408:	00 0c       	add	r0, r0
 40a:	11 f4       	brne	.+4      	; 0x410 <__fp_round+0xc>
 40c:	88 23       	and	r24, r24
 40e:	52 f0       	brmi	.+20     	; 0x424 <__fp_round+0x20>
 410:	bb 0f       	add	r27, r27
 412:	40 f4       	brcc	.+16     	; 0x424 <__fp_round+0x20>
 414:	bf 2b       	or	r27, r31
 416:	11 f4       	brne	.+4      	; 0x41c <__fp_round+0x18>
 418:	60 ff       	sbrs	r22, 0
 41a:	04 c0       	rjmp	.+8      	; 0x424 <__fp_round+0x20>
 41c:	6f 5f       	subi	r22, 0xFF	; 255
 41e:	7f 4f       	sbci	r23, 0xFF	; 255
 420:	8f 4f       	sbci	r24, 0xFF	; 255
 422:	9f 4f       	sbci	r25, 0xFF	; 255
 424:	08 95       	ret

00000426 <__fp_split3>:
 426:	57 fd       	sbrc	r21, 7
 428:	90 58       	subi	r25, 0x80	; 128
 42a:	44 0f       	add	r20, r20
 42c:	55 1f       	adc	r21, r21
 42e:	59 f0       	breq	.+22     	; 0x446 <__fp_splitA+0x10>
 430:	5f 3f       	cpi	r21, 0xFF	; 255
 432:	71 f0       	breq	.+28     	; 0x450 <__fp_splitA+0x1a>
 434:	47 95       	ror	r20

00000436 <__fp_splitA>:
 436:	88 0f       	add	r24, r24
 438:	97 fb       	bst	r25, 7
 43a:	99 1f       	adc	r25, r25
 43c:	61 f0       	breq	.+24     	; 0x456 <__fp_splitA+0x20>
 43e:	9f 3f       	cpi	r25, 0xFF	; 255
 440:	79 f0       	breq	.+30     	; 0x460 <__fp_splitA+0x2a>
 442:	87 95       	ror	r24
 444:	08 95       	ret
 446:	12 16       	cp	r1, r18
 448:	13 06       	cpc	r1, r19
 44a:	14 06       	cpc	r1, r20
 44c:	55 1f       	adc	r21, r21
 44e:	f2 cf       	rjmp	.-28     	; 0x434 <__fp_split3+0xe>
 450:	46 95       	lsr	r20
 452:	f1 df       	rcall	.-30     	; 0x436 <__fp_splitA>
 454:	08 c0       	rjmp	.+16     	; 0x466 <__fp_splitA+0x30>
 456:	16 16       	cp	r1, r22
 458:	17 06       	cpc	r1, r23
 45a:	18 06       	cpc	r1, r24
 45c:	99 1f       	adc	r25, r25
 45e:	f1 cf       	rjmp	.-30     	; 0x442 <__fp_splitA+0xc>
 460:	86 95       	lsr	r24
 462:	71 05       	cpc	r23, r1
 464:	61 05       	cpc	r22, r1
 466:	08 94       	sec
 468:	08 95       	ret

0000046a <__fp_zero>:
 46a:	e8 94       	clt

0000046c <__fp_szero>:
 46c:	bb 27       	eor	r27, r27
 46e:	66 27       	eor	r22, r22
 470:	77 27       	eor	r23, r23
 472:	cb 01       	movw	r24, r22
 474:	97 f9       	bld	r25, 7
 476:	08 95       	ret

00000478 <printf>:
 478:	a0 e0       	ldi	r26, 0x00	; 0
 47a:	b0 e0       	ldi	r27, 0x00	; 0
 47c:	e2 e4       	ldi	r30, 0x42	; 66
 47e:	f2 e0       	ldi	r31, 0x02	; 2
 480:	0c 94 f3 04 	jmp	0x9e6	; 0x9e6 <__prologue_saves__+0x20>
 484:	ae 01       	movw	r20, r28
 486:	4b 5f       	subi	r20, 0xFB	; 251
 488:	5f 4f       	sbci	r21, 0xFF	; 255
 48a:	fa 01       	movw	r30, r20
 48c:	61 91       	ld	r22, Z+
 48e:	71 91       	ld	r23, Z+
 490:	af 01       	movw	r20, r30
 492:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <__iob+0x2>
 496:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <__iob+0x3>
 49a:	0e 94 52 02 	call	0x4a4	; 0x4a4 <vfprintf>
 49e:	e2 e0       	ldi	r30, 0x02	; 2
 4a0:	0c 94 0f 05 	jmp	0xa1e	; 0xa1e <__epilogue_restores__+0x20>

000004a4 <vfprintf>:
 4a4:	ab e0       	ldi	r26, 0x0B	; 11
 4a6:	b0 e0       	ldi	r27, 0x00	; 0
 4a8:	e8 e5       	ldi	r30, 0x58	; 88
 4aa:	f2 e0       	ldi	r31, 0x02	; 2
 4ac:	0c 94 e3 04 	jmp	0x9c6	; 0x9c6 <__prologue_saves__>
 4b0:	6c 01       	movw	r12, r24
 4b2:	7b 01       	movw	r14, r22
 4b4:	8a 01       	movw	r16, r20
 4b6:	fc 01       	movw	r30, r24
 4b8:	17 82       	std	Z+7, r1	; 0x07
 4ba:	16 82       	std	Z+6, r1	; 0x06
 4bc:	83 81       	ldd	r24, Z+3	; 0x03
 4be:	81 ff       	sbrs	r24, 1
 4c0:	cc c1       	rjmp	.+920    	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 4c2:	ce 01       	movw	r24, r28
 4c4:	01 96       	adiw	r24, 0x01	; 1
 4c6:	3c 01       	movw	r6, r24
 4c8:	f6 01       	movw	r30, r12
 4ca:	93 81       	ldd	r25, Z+3	; 0x03
 4cc:	f7 01       	movw	r30, r14
 4ce:	93 fd       	sbrc	r25, 3
 4d0:	85 91       	lpm	r24, Z+
 4d2:	93 ff       	sbrs	r25, 3
 4d4:	81 91       	ld	r24, Z+
 4d6:	7f 01       	movw	r14, r30
 4d8:	88 23       	and	r24, r24
 4da:	09 f4       	brne	.+2      	; 0x4de <vfprintf+0x3a>
 4dc:	ba c1       	rjmp	.+884    	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 4de:	85 32       	cpi	r24, 0x25	; 37
 4e0:	39 f4       	brne	.+14     	; 0x4f0 <vfprintf+0x4c>
 4e2:	93 fd       	sbrc	r25, 3
 4e4:	85 91       	lpm	r24, Z+
 4e6:	93 ff       	sbrs	r25, 3
 4e8:	81 91       	ld	r24, Z+
 4ea:	7f 01       	movw	r14, r30
 4ec:	85 32       	cpi	r24, 0x25	; 37
 4ee:	29 f4       	brne	.+10     	; 0x4fa <vfprintf+0x56>
 4f0:	b6 01       	movw	r22, r12
 4f2:	90 e0       	ldi	r25, 0x00	; 0
 4f4:	0e 94 49 04 	call	0x892	; 0x892 <fputc>
 4f8:	e7 cf       	rjmp	.-50     	; 0x4c8 <vfprintf+0x24>
 4fa:	91 2c       	mov	r9, r1
 4fc:	21 2c       	mov	r2, r1
 4fe:	31 2c       	mov	r3, r1
 500:	ff e1       	ldi	r31, 0x1F	; 31
 502:	f3 15       	cp	r31, r3
 504:	d8 f0       	brcs	.+54     	; 0x53c <vfprintf+0x98>
 506:	8b 32       	cpi	r24, 0x2B	; 43
 508:	79 f0       	breq	.+30     	; 0x528 <vfprintf+0x84>
 50a:	38 f4       	brcc	.+14     	; 0x51a <vfprintf+0x76>
 50c:	80 32       	cpi	r24, 0x20	; 32
 50e:	79 f0       	breq	.+30     	; 0x52e <vfprintf+0x8a>
 510:	83 32       	cpi	r24, 0x23	; 35
 512:	a1 f4       	brne	.+40     	; 0x53c <vfprintf+0x98>
 514:	23 2d       	mov	r18, r3
 516:	20 61       	ori	r18, 0x10	; 16
 518:	1d c0       	rjmp	.+58     	; 0x554 <vfprintf+0xb0>
 51a:	8d 32       	cpi	r24, 0x2D	; 45
 51c:	61 f0       	breq	.+24     	; 0x536 <vfprintf+0x92>
 51e:	80 33       	cpi	r24, 0x30	; 48
 520:	69 f4       	brne	.+26     	; 0x53c <vfprintf+0x98>
 522:	23 2d       	mov	r18, r3
 524:	21 60       	ori	r18, 0x01	; 1
 526:	16 c0       	rjmp	.+44     	; 0x554 <vfprintf+0xb0>
 528:	83 2d       	mov	r24, r3
 52a:	82 60       	ori	r24, 0x02	; 2
 52c:	38 2e       	mov	r3, r24
 52e:	e3 2d       	mov	r30, r3
 530:	e4 60       	ori	r30, 0x04	; 4
 532:	3e 2e       	mov	r3, r30
 534:	2a c0       	rjmp	.+84     	; 0x58a <vfprintf+0xe6>
 536:	f3 2d       	mov	r31, r3
 538:	f8 60       	ori	r31, 0x08	; 8
 53a:	1d c0       	rjmp	.+58     	; 0x576 <vfprintf+0xd2>
 53c:	37 fc       	sbrc	r3, 7
 53e:	2d c0       	rjmp	.+90     	; 0x59a <vfprintf+0xf6>
 540:	20 ed       	ldi	r18, 0xD0	; 208
 542:	28 0f       	add	r18, r24
 544:	2a 30       	cpi	r18, 0x0A	; 10
 546:	40 f0       	brcs	.+16     	; 0x558 <vfprintf+0xb4>
 548:	8e 32       	cpi	r24, 0x2E	; 46
 54a:	b9 f4       	brne	.+46     	; 0x57a <vfprintf+0xd6>
 54c:	36 fc       	sbrc	r3, 6
 54e:	81 c1       	rjmp	.+770    	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 550:	23 2d       	mov	r18, r3
 552:	20 64       	ori	r18, 0x40	; 64
 554:	32 2e       	mov	r3, r18
 556:	19 c0       	rjmp	.+50     	; 0x58a <vfprintf+0xe6>
 558:	36 fe       	sbrs	r3, 6
 55a:	06 c0       	rjmp	.+12     	; 0x568 <vfprintf+0xc4>
 55c:	8a e0       	ldi	r24, 0x0A	; 10
 55e:	98 9e       	mul	r9, r24
 560:	20 0d       	add	r18, r0
 562:	11 24       	eor	r1, r1
 564:	92 2e       	mov	r9, r18
 566:	11 c0       	rjmp	.+34     	; 0x58a <vfprintf+0xe6>
 568:	ea e0       	ldi	r30, 0x0A	; 10
 56a:	2e 9e       	mul	r2, r30
 56c:	20 0d       	add	r18, r0
 56e:	11 24       	eor	r1, r1
 570:	22 2e       	mov	r2, r18
 572:	f3 2d       	mov	r31, r3
 574:	f0 62       	ori	r31, 0x20	; 32
 576:	3f 2e       	mov	r3, r31
 578:	08 c0       	rjmp	.+16     	; 0x58a <vfprintf+0xe6>
 57a:	8c 36       	cpi	r24, 0x6C	; 108
 57c:	21 f4       	brne	.+8      	; 0x586 <vfprintf+0xe2>
 57e:	83 2d       	mov	r24, r3
 580:	80 68       	ori	r24, 0x80	; 128
 582:	38 2e       	mov	r3, r24
 584:	02 c0       	rjmp	.+4      	; 0x58a <vfprintf+0xe6>
 586:	88 36       	cpi	r24, 0x68	; 104
 588:	41 f4       	brne	.+16     	; 0x59a <vfprintf+0xf6>
 58a:	f7 01       	movw	r30, r14
 58c:	93 fd       	sbrc	r25, 3
 58e:	85 91       	lpm	r24, Z+
 590:	93 ff       	sbrs	r25, 3
 592:	81 91       	ld	r24, Z+
 594:	7f 01       	movw	r14, r30
 596:	81 11       	cpse	r24, r1
 598:	b3 cf       	rjmp	.-154    	; 0x500 <vfprintf+0x5c>
 59a:	98 2f       	mov	r25, r24
 59c:	9f 7d       	andi	r25, 0xDF	; 223
 59e:	95 54       	subi	r25, 0x45	; 69
 5a0:	93 30       	cpi	r25, 0x03	; 3
 5a2:	28 f4       	brcc	.+10     	; 0x5ae <vfprintf+0x10a>
 5a4:	0c 5f       	subi	r16, 0xFC	; 252
 5a6:	1f 4f       	sbci	r17, 0xFF	; 255
 5a8:	9f e3       	ldi	r25, 0x3F	; 63
 5aa:	99 83       	std	Y+1, r25	; 0x01
 5ac:	0d c0       	rjmp	.+26     	; 0x5c8 <vfprintf+0x124>
 5ae:	83 36       	cpi	r24, 0x63	; 99
 5b0:	31 f0       	breq	.+12     	; 0x5be <vfprintf+0x11a>
 5b2:	83 37       	cpi	r24, 0x73	; 115
 5b4:	71 f0       	breq	.+28     	; 0x5d2 <vfprintf+0x12e>
 5b6:	83 35       	cpi	r24, 0x53	; 83
 5b8:	09 f0       	breq	.+2      	; 0x5bc <vfprintf+0x118>
 5ba:	59 c0       	rjmp	.+178    	; 0x66e <vfprintf+0x1ca>
 5bc:	21 c0       	rjmp	.+66     	; 0x600 <vfprintf+0x15c>
 5be:	f8 01       	movw	r30, r16
 5c0:	80 81       	ld	r24, Z
 5c2:	89 83       	std	Y+1, r24	; 0x01
 5c4:	0e 5f       	subi	r16, 0xFE	; 254
 5c6:	1f 4f       	sbci	r17, 0xFF	; 255
 5c8:	88 24       	eor	r8, r8
 5ca:	83 94       	inc	r8
 5cc:	91 2c       	mov	r9, r1
 5ce:	53 01       	movw	r10, r6
 5d0:	13 c0       	rjmp	.+38     	; 0x5f8 <vfprintf+0x154>
 5d2:	28 01       	movw	r4, r16
 5d4:	f2 e0       	ldi	r31, 0x02	; 2
 5d6:	4f 0e       	add	r4, r31
 5d8:	51 1c       	adc	r5, r1
 5da:	f8 01       	movw	r30, r16
 5dc:	a0 80       	ld	r10, Z
 5de:	b1 80       	ldd	r11, Z+1	; 0x01
 5e0:	36 fe       	sbrs	r3, 6
 5e2:	03 c0       	rjmp	.+6      	; 0x5ea <vfprintf+0x146>
 5e4:	69 2d       	mov	r22, r9
 5e6:	70 e0       	ldi	r23, 0x00	; 0
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <vfprintf+0x14a>
 5ea:	6f ef       	ldi	r22, 0xFF	; 255
 5ec:	7f ef       	ldi	r23, 0xFF	; 255
 5ee:	c5 01       	movw	r24, r10
 5f0:	0e 94 3e 04 	call	0x87c	; 0x87c <strnlen>
 5f4:	4c 01       	movw	r8, r24
 5f6:	82 01       	movw	r16, r4
 5f8:	f3 2d       	mov	r31, r3
 5fa:	ff 77       	andi	r31, 0x7F	; 127
 5fc:	3f 2e       	mov	r3, r31
 5fe:	16 c0       	rjmp	.+44     	; 0x62c <vfprintf+0x188>
 600:	28 01       	movw	r4, r16
 602:	22 e0       	ldi	r18, 0x02	; 2
 604:	42 0e       	add	r4, r18
 606:	51 1c       	adc	r5, r1
 608:	f8 01       	movw	r30, r16
 60a:	a0 80       	ld	r10, Z
 60c:	b1 80       	ldd	r11, Z+1	; 0x01
 60e:	36 fe       	sbrs	r3, 6
 610:	03 c0       	rjmp	.+6      	; 0x618 <vfprintf+0x174>
 612:	69 2d       	mov	r22, r9
 614:	70 e0       	ldi	r23, 0x00	; 0
 616:	02 c0       	rjmp	.+4      	; 0x61c <vfprintf+0x178>
 618:	6f ef       	ldi	r22, 0xFF	; 255
 61a:	7f ef       	ldi	r23, 0xFF	; 255
 61c:	c5 01       	movw	r24, r10
 61e:	0e 94 33 04 	call	0x866	; 0x866 <strnlen_P>
 622:	4c 01       	movw	r8, r24
 624:	f3 2d       	mov	r31, r3
 626:	f0 68       	ori	r31, 0x80	; 128
 628:	3f 2e       	mov	r3, r31
 62a:	82 01       	movw	r16, r4
 62c:	33 fc       	sbrc	r3, 3
 62e:	1b c0       	rjmp	.+54     	; 0x666 <vfprintf+0x1c2>
 630:	82 2d       	mov	r24, r2
 632:	90 e0       	ldi	r25, 0x00	; 0
 634:	88 16       	cp	r8, r24
 636:	99 06       	cpc	r9, r25
 638:	b0 f4       	brcc	.+44     	; 0x666 <vfprintf+0x1c2>
 63a:	b6 01       	movw	r22, r12
 63c:	80 e2       	ldi	r24, 0x20	; 32
 63e:	90 e0       	ldi	r25, 0x00	; 0
 640:	0e 94 49 04 	call	0x892	; 0x892 <fputc>
 644:	2a 94       	dec	r2
 646:	f4 cf       	rjmp	.-24     	; 0x630 <vfprintf+0x18c>
 648:	f5 01       	movw	r30, r10
 64a:	37 fc       	sbrc	r3, 7
 64c:	85 91       	lpm	r24, Z+
 64e:	37 fe       	sbrs	r3, 7
 650:	81 91       	ld	r24, Z+
 652:	5f 01       	movw	r10, r30
 654:	b6 01       	movw	r22, r12
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	0e 94 49 04 	call	0x892	; 0x892 <fputc>
 65c:	21 10       	cpse	r2, r1
 65e:	2a 94       	dec	r2
 660:	21 e0       	ldi	r18, 0x01	; 1
 662:	82 1a       	sub	r8, r18
 664:	91 08       	sbc	r9, r1
 666:	81 14       	cp	r8, r1
 668:	91 04       	cpc	r9, r1
 66a:	71 f7       	brne	.-36     	; 0x648 <vfprintf+0x1a4>
 66c:	e8 c0       	rjmp	.+464    	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 66e:	84 36       	cpi	r24, 0x64	; 100
 670:	11 f0       	breq	.+4      	; 0x676 <vfprintf+0x1d2>
 672:	89 36       	cpi	r24, 0x69	; 105
 674:	41 f5       	brne	.+80     	; 0x6c6 <vfprintf+0x222>
 676:	f8 01       	movw	r30, r16
 678:	37 fe       	sbrs	r3, 7
 67a:	07 c0       	rjmp	.+14     	; 0x68a <vfprintf+0x1e6>
 67c:	60 81       	ld	r22, Z
 67e:	71 81       	ldd	r23, Z+1	; 0x01
 680:	82 81       	ldd	r24, Z+2	; 0x02
 682:	93 81       	ldd	r25, Z+3	; 0x03
 684:	0c 5f       	subi	r16, 0xFC	; 252
 686:	1f 4f       	sbci	r17, 0xFF	; 255
 688:	08 c0       	rjmp	.+16     	; 0x69a <vfprintf+0x1f6>
 68a:	60 81       	ld	r22, Z
 68c:	71 81       	ldd	r23, Z+1	; 0x01
 68e:	07 2e       	mov	r0, r23
 690:	00 0c       	add	r0, r0
 692:	88 0b       	sbc	r24, r24
 694:	99 0b       	sbc	r25, r25
 696:	0e 5f       	subi	r16, 0xFE	; 254
 698:	1f 4f       	sbci	r17, 0xFF	; 255
 69a:	f3 2d       	mov	r31, r3
 69c:	ff 76       	andi	r31, 0x6F	; 111
 69e:	3f 2e       	mov	r3, r31
 6a0:	97 ff       	sbrs	r25, 7
 6a2:	09 c0       	rjmp	.+18     	; 0x6b6 <vfprintf+0x212>
 6a4:	90 95       	com	r25
 6a6:	80 95       	com	r24
 6a8:	70 95       	com	r23
 6aa:	61 95       	neg	r22
 6ac:	7f 4f       	sbci	r23, 0xFF	; 255
 6ae:	8f 4f       	sbci	r24, 0xFF	; 255
 6b0:	9f 4f       	sbci	r25, 0xFF	; 255
 6b2:	f0 68       	ori	r31, 0x80	; 128
 6b4:	3f 2e       	mov	r3, r31
 6b6:	2a e0       	ldi	r18, 0x0A	; 10
 6b8:	30 e0       	ldi	r19, 0x00	; 0
 6ba:	a3 01       	movw	r20, r6
 6bc:	0e 94 85 04 	call	0x90a	; 0x90a <__ultoa_invert>
 6c0:	88 2e       	mov	r8, r24
 6c2:	86 18       	sub	r8, r6
 6c4:	45 c0       	rjmp	.+138    	; 0x750 <vfprintf+0x2ac>
 6c6:	85 37       	cpi	r24, 0x75	; 117
 6c8:	31 f4       	brne	.+12     	; 0x6d6 <vfprintf+0x232>
 6ca:	23 2d       	mov	r18, r3
 6cc:	2f 7e       	andi	r18, 0xEF	; 239
 6ce:	b2 2e       	mov	r11, r18
 6d0:	2a e0       	ldi	r18, 0x0A	; 10
 6d2:	30 e0       	ldi	r19, 0x00	; 0
 6d4:	25 c0       	rjmp	.+74     	; 0x720 <vfprintf+0x27c>
 6d6:	93 2d       	mov	r25, r3
 6d8:	99 7f       	andi	r25, 0xF9	; 249
 6da:	b9 2e       	mov	r11, r25
 6dc:	8f 36       	cpi	r24, 0x6F	; 111
 6de:	c1 f0       	breq	.+48     	; 0x710 <vfprintf+0x26c>
 6e0:	18 f4       	brcc	.+6      	; 0x6e8 <vfprintf+0x244>
 6e2:	88 35       	cpi	r24, 0x58	; 88
 6e4:	79 f0       	breq	.+30     	; 0x704 <vfprintf+0x260>
 6e6:	b5 c0       	rjmp	.+362    	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 6e8:	80 37       	cpi	r24, 0x70	; 112
 6ea:	19 f0       	breq	.+6      	; 0x6f2 <vfprintf+0x24e>
 6ec:	88 37       	cpi	r24, 0x78	; 120
 6ee:	21 f0       	breq	.+8      	; 0x6f8 <vfprintf+0x254>
 6f0:	b0 c0       	rjmp	.+352    	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 6f2:	e9 2f       	mov	r30, r25
 6f4:	e0 61       	ori	r30, 0x10	; 16
 6f6:	be 2e       	mov	r11, r30
 6f8:	b4 fe       	sbrs	r11, 4
 6fa:	0d c0       	rjmp	.+26     	; 0x716 <vfprintf+0x272>
 6fc:	fb 2d       	mov	r31, r11
 6fe:	f4 60       	ori	r31, 0x04	; 4
 700:	bf 2e       	mov	r11, r31
 702:	09 c0       	rjmp	.+18     	; 0x716 <vfprintf+0x272>
 704:	34 fe       	sbrs	r3, 4
 706:	0a c0       	rjmp	.+20     	; 0x71c <vfprintf+0x278>
 708:	29 2f       	mov	r18, r25
 70a:	26 60       	ori	r18, 0x06	; 6
 70c:	b2 2e       	mov	r11, r18
 70e:	06 c0       	rjmp	.+12     	; 0x71c <vfprintf+0x278>
 710:	28 e0       	ldi	r18, 0x08	; 8
 712:	30 e0       	ldi	r19, 0x00	; 0
 714:	05 c0       	rjmp	.+10     	; 0x720 <vfprintf+0x27c>
 716:	20 e1       	ldi	r18, 0x10	; 16
 718:	30 e0       	ldi	r19, 0x00	; 0
 71a:	02 c0       	rjmp	.+4      	; 0x720 <vfprintf+0x27c>
 71c:	20 e1       	ldi	r18, 0x10	; 16
 71e:	32 e0       	ldi	r19, 0x02	; 2
 720:	f8 01       	movw	r30, r16
 722:	b7 fe       	sbrs	r11, 7
 724:	07 c0       	rjmp	.+14     	; 0x734 <vfprintf+0x290>
 726:	60 81       	ld	r22, Z
 728:	71 81       	ldd	r23, Z+1	; 0x01
 72a:	82 81       	ldd	r24, Z+2	; 0x02
 72c:	93 81       	ldd	r25, Z+3	; 0x03
 72e:	0c 5f       	subi	r16, 0xFC	; 252
 730:	1f 4f       	sbci	r17, 0xFF	; 255
 732:	06 c0       	rjmp	.+12     	; 0x740 <vfprintf+0x29c>
 734:	60 81       	ld	r22, Z
 736:	71 81       	ldd	r23, Z+1	; 0x01
 738:	80 e0       	ldi	r24, 0x00	; 0
 73a:	90 e0       	ldi	r25, 0x00	; 0
 73c:	0e 5f       	subi	r16, 0xFE	; 254
 73e:	1f 4f       	sbci	r17, 0xFF	; 255
 740:	a3 01       	movw	r20, r6
 742:	0e 94 85 04 	call	0x90a	; 0x90a <__ultoa_invert>
 746:	88 2e       	mov	r8, r24
 748:	86 18       	sub	r8, r6
 74a:	fb 2d       	mov	r31, r11
 74c:	ff 77       	andi	r31, 0x7F	; 127
 74e:	3f 2e       	mov	r3, r31
 750:	36 fe       	sbrs	r3, 6
 752:	0d c0       	rjmp	.+26     	; 0x76e <vfprintf+0x2ca>
 754:	23 2d       	mov	r18, r3
 756:	2e 7f       	andi	r18, 0xFE	; 254
 758:	a2 2e       	mov	r10, r18
 75a:	89 14       	cp	r8, r9
 75c:	58 f4       	brcc	.+22     	; 0x774 <vfprintf+0x2d0>
 75e:	34 fe       	sbrs	r3, 4
 760:	0b c0       	rjmp	.+22     	; 0x778 <vfprintf+0x2d4>
 762:	32 fc       	sbrc	r3, 2
 764:	09 c0       	rjmp	.+18     	; 0x778 <vfprintf+0x2d4>
 766:	83 2d       	mov	r24, r3
 768:	8e 7e       	andi	r24, 0xEE	; 238
 76a:	a8 2e       	mov	r10, r24
 76c:	05 c0       	rjmp	.+10     	; 0x778 <vfprintf+0x2d4>
 76e:	b8 2c       	mov	r11, r8
 770:	a3 2c       	mov	r10, r3
 772:	03 c0       	rjmp	.+6      	; 0x77a <vfprintf+0x2d6>
 774:	b8 2c       	mov	r11, r8
 776:	01 c0       	rjmp	.+2      	; 0x77a <vfprintf+0x2d6>
 778:	b9 2c       	mov	r11, r9
 77a:	a4 fe       	sbrs	r10, 4
 77c:	0f c0       	rjmp	.+30     	; 0x79c <vfprintf+0x2f8>
 77e:	fe 01       	movw	r30, r28
 780:	e8 0d       	add	r30, r8
 782:	f1 1d       	adc	r31, r1
 784:	80 81       	ld	r24, Z
 786:	80 33       	cpi	r24, 0x30	; 48
 788:	21 f4       	brne	.+8      	; 0x792 <vfprintf+0x2ee>
 78a:	9a 2d       	mov	r25, r10
 78c:	99 7e       	andi	r25, 0xE9	; 233
 78e:	a9 2e       	mov	r10, r25
 790:	09 c0       	rjmp	.+18     	; 0x7a4 <vfprintf+0x300>
 792:	a2 fe       	sbrs	r10, 2
 794:	06 c0       	rjmp	.+12     	; 0x7a2 <vfprintf+0x2fe>
 796:	b3 94       	inc	r11
 798:	b3 94       	inc	r11
 79a:	04 c0       	rjmp	.+8      	; 0x7a4 <vfprintf+0x300>
 79c:	8a 2d       	mov	r24, r10
 79e:	86 78       	andi	r24, 0x86	; 134
 7a0:	09 f0       	breq	.+2      	; 0x7a4 <vfprintf+0x300>
 7a2:	b3 94       	inc	r11
 7a4:	a3 fc       	sbrc	r10, 3
 7a6:	11 c0       	rjmp	.+34     	; 0x7ca <vfprintf+0x326>
 7a8:	a0 fe       	sbrs	r10, 0
 7aa:	06 c0       	rjmp	.+12     	; 0x7b8 <vfprintf+0x314>
 7ac:	b2 14       	cp	r11, r2
 7ae:	88 f4       	brcc	.+34     	; 0x7d2 <vfprintf+0x32e>
 7b0:	28 0c       	add	r2, r8
 7b2:	92 2c       	mov	r9, r2
 7b4:	9b 18       	sub	r9, r11
 7b6:	0e c0       	rjmp	.+28     	; 0x7d4 <vfprintf+0x330>
 7b8:	b2 14       	cp	r11, r2
 7ba:	60 f4       	brcc	.+24     	; 0x7d4 <vfprintf+0x330>
 7bc:	b6 01       	movw	r22, r12
 7be:	80 e2       	ldi	r24, 0x20	; 32
 7c0:	90 e0       	ldi	r25, 0x00	; 0
 7c2:	0e 94 49 04 	call	0x892	; 0x892 <fputc>
 7c6:	b3 94       	inc	r11
 7c8:	f7 cf       	rjmp	.-18     	; 0x7b8 <vfprintf+0x314>
 7ca:	b2 14       	cp	r11, r2
 7cc:	18 f4       	brcc	.+6      	; 0x7d4 <vfprintf+0x330>
 7ce:	2b 18       	sub	r2, r11
 7d0:	02 c0       	rjmp	.+4      	; 0x7d6 <vfprintf+0x332>
 7d2:	98 2c       	mov	r9, r8
 7d4:	21 2c       	mov	r2, r1
 7d6:	a4 fe       	sbrs	r10, 4
 7d8:	10 c0       	rjmp	.+32     	; 0x7fa <vfprintf+0x356>
 7da:	b6 01       	movw	r22, r12
 7dc:	80 e3       	ldi	r24, 0x30	; 48
 7de:	90 e0       	ldi	r25, 0x00	; 0
 7e0:	0e 94 49 04 	call	0x892	; 0x892 <fputc>
 7e4:	a2 fe       	sbrs	r10, 2
 7e6:	17 c0       	rjmp	.+46     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 7e8:	a1 fc       	sbrc	r10, 1
 7ea:	03 c0       	rjmp	.+6      	; 0x7f2 <vfprintf+0x34e>
 7ec:	88 e7       	ldi	r24, 0x78	; 120
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	02 c0       	rjmp	.+4      	; 0x7f6 <vfprintf+0x352>
 7f2:	88 e5       	ldi	r24, 0x58	; 88
 7f4:	90 e0       	ldi	r25, 0x00	; 0
 7f6:	b6 01       	movw	r22, r12
 7f8:	0c c0       	rjmp	.+24     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
 7fa:	8a 2d       	mov	r24, r10
 7fc:	86 78       	andi	r24, 0x86	; 134
 7fe:	59 f0       	breq	.+22     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 800:	a1 fe       	sbrs	r10, 1
 802:	02 c0       	rjmp	.+4      	; 0x808 <__DATA_REGION_LENGTH__+0x8>
 804:	8b e2       	ldi	r24, 0x2B	; 43
 806:	01 c0       	rjmp	.+2      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
 808:	80 e2       	ldi	r24, 0x20	; 32
 80a:	a7 fc       	sbrc	r10, 7
 80c:	8d e2       	ldi	r24, 0x2D	; 45
 80e:	b6 01       	movw	r22, r12
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	0e 94 49 04 	call	0x892	; 0x892 <fputc>
 816:	89 14       	cp	r8, r9
 818:	38 f4       	brcc	.+14     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 81a:	b6 01       	movw	r22, r12
 81c:	80 e3       	ldi	r24, 0x30	; 48
 81e:	90 e0       	ldi	r25, 0x00	; 0
 820:	0e 94 49 04 	call	0x892	; 0x892 <fputc>
 824:	9a 94       	dec	r9
 826:	f7 cf       	rjmp	.-18     	; 0x816 <__DATA_REGION_LENGTH__+0x16>
 828:	8a 94       	dec	r8
 82a:	f3 01       	movw	r30, r6
 82c:	e8 0d       	add	r30, r8
 82e:	f1 1d       	adc	r31, r1
 830:	80 81       	ld	r24, Z
 832:	b6 01       	movw	r22, r12
 834:	90 e0       	ldi	r25, 0x00	; 0
 836:	0e 94 49 04 	call	0x892	; 0x892 <fputc>
 83a:	81 10       	cpse	r8, r1
 83c:	f5 cf       	rjmp	.-22     	; 0x828 <__DATA_REGION_LENGTH__+0x28>
 83e:	22 20       	and	r2, r2
 840:	09 f4       	brne	.+2      	; 0x844 <__DATA_REGION_LENGTH__+0x44>
 842:	42 ce       	rjmp	.-892    	; 0x4c8 <vfprintf+0x24>
 844:	b6 01       	movw	r22, r12
 846:	80 e2       	ldi	r24, 0x20	; 32
 848:	90 e0       	ldi	r25, 0x00	; 0
 84a:	0e 94 49 04 	call	0x892	; 0x892 <fputc>
 84e:	2a 94       	dec	r2
 850:	f6 cf       	rjmp	.-20     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 852:	f6 01       	movw	r30, r12
 854:	86 81       	ldd	r24, Z+6	; 0x06
 856:	97 81       	ldd	r25, Z+7	; 0x07
 858:	02 c0       	rjmp	.+4      	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
 85a:	8f ef       	ldi	r24, 0xFF	; 255
 85c:	9f ef       	ldi	r25, 0xFF	; 255
 85e:	2b 96       	adiw	r28, 0x0b	; 11
 860:	e2 e1       	ldi	r30, 0x12	; 18
 862:	0c 94 ff 04 	jmp	0x9fe	; 0x9fe <__epilogue_restores__>

00000866 <strnlen_P>:
 866:	fc 01       	movw	r30, r24
 868:	05 90       	lpm	r0, Z+
 86a:	61 50       	subi	r22, 0x01	; 1
 86c:	70 40       	sbci	r23, 0x00	; 0
 86e:	01 10       	cpse	r0, r1
 870:	d8 f7       	brcc	.-10     	; 0x868 <strnlen_P+0x2>
 872:	80 95       	com	r24
 874:	90 95       	com	r25
 876:	8e 0f       	add	r24, r30
 878:	9f 1f       	adc	r25, r31
 87a:	08 95       	ret

0000087c <strnlen>:
 87c:	fc 01       	movw	r30, r24
 87e:	61 50       	subi	r22, 0x01	; 1
 880:	70 40       	sbci	r23, 0x00	; 0
 882:	01 90       	ld	r0, Z+
 884:	01 10       	cpse	r0, r1
 886:	d8 f7       	brcc	.-10     	; 0x87e <strnlen+0x2>
 888:	80 95       	com	r24
 88a:	90 95       	com	r25
 88c:	8e 0f       	add	r24, r30
 88e:	9f 1f       	adc	r25, r31
 890:	08 95       	ret

00000892 <fputc>:
 892:	0f 93       	push	r16
 894:	1f 93       	push	r17
 896:	cf 93       	push	r28
 898:	df 93       	push	r29
 89a:	fb 01       	movw	r30, r22
 89c:	23 81       	ldd	r18, Z+3	; 0x03
 89e:	21 fd       	sbrc	r18, 1
 8a0:	03 c0       	rjmp	.+6      	; 0x8a8 <fputc+0x16>
 8a2:	8f ef       	ldi	r24, 0xFF	; 255
 8a4:	9f ef       	ldi	r25, 0xFF	; 255
 8a6:	2c c0       	rjmp	.+88     	; 0x900 <__stack+0x1>
 8a8:	22 ff       	sbrs	r18, 2
 8aa:	16 c0       	rjmp	.+44     	; 0x8d8 <fputc+0x46>
 8ac:	46 81       	ldd	r20, Z+6	; 0x06
 8ae:	57 81       	ldd	r21, Z+7	; 0x07
 8b0:	24 81       	ldd	r18, Z+4	; 0x04
 8b2:	35 81       	ldd	r19, Z+5	; 0x05
 8b4:	42 17       	cp	r20, r18
 8b6:	53 07       	cpc	r21, r19
 8b8:	44 f4       	brge	.+16     	; 0x8ca <fputc+0x38>
 8ba:	a0 81       	ld	r26, Z
 8bc:	b1 81       	ldd	r27, Z+1	; 0x01
 8be:	9d 01       	movw	r18, r26
 8c0:	2f 5f       	subi	r18, 0xFF	; 255
 8c2:	3f 4f       	sbci	r19, 0xFF	; 255
 8c4:	31 83       	std	Z+1, r19	; 0x01
 8c6:	20 83       	st	Z, r18
 8c8:	8c 93       	st	X, r24
 8ca:	26 81       	ldd	r18, Z+6	; 0x06
 8cc:	37 81       	ldd	r19, Z+7	; 0x07
 8ce:	2f 5f       	subi	r18, 0xFF	; 255
 8d0:	3f 4f       	sbci	r19, 0xFF	; 255
 8d2:	37 83       	std	Z+7, r19	; 0x07
 8d4:	26 83       	std	Z+6, r18	; 0x06
 8d6:	14 c0       	rjmp	.+40     	; 0x900 <__stack+0x1>
 8d8:	8b 01       	movw	r16, r22
 8da:	ec 01       	movw	r28, r24
 8dc:	fb 01       	movw	r30, r22
 8de:	00 84       	ldd	r0, Z+8	; 0x08
 8e0:	f1 85       	ldd	r31, Z+9	; 0x09
 8e2:	e0 2d       	mov	r30, r0
 8e4:	09 95       	icall
 8e6:	89 2b       	or	r24, r25
 8e8:	e1 f6       	brne	.-72     	; 0x8a2 <fputc+0x10>
 8ea:	d8 01       	movw	r26, r16
 8ec:	16 96       	adiw	r26, 0x06	; 6
 8ee:	8d 91       	ld	r24, X+
 8f0:	9c 91       	ld	r25, X
 8f2:	17 97       	sbiw	r26, 0x07	; 7
 8f4:	01 96       	adiw	r24, 0x01	; 1
 8f6:	17 96       	adiw	r26, 0x07	; 7
 8f8:	9c 93       	st	X, r25
 8fa:	8e 93       	st	-X, r24
 8fc:	16 97       	sbiw	r26, 0x06	; 6
 8fe:	ce 01       	movw	r24, r28
 900:	df 91       	pop	r29
 902:	cf 91       	pop	r28
 904:	1f 91       	pop	r17
 906:	0f 91       	pop	r16
 908:	08 95       	ret

0000090a <__ultoa_invert>:
 90a:	fa 01       	movw	r30, r20
 90c:	aa 27       	eor	r26, r26
 90e:	28 30       	cpi	r18, 0x08	; 8
 910:	51 f1       	breq	.+84     	; 0x966 <__ultoa_invert+0x5c>
 912:	20 31       	cpi	r18, 0x10	; 16
 914:	81 f1       	breq	.+96     	; 0x976 <__ultoa_invert+0x6c>
 916:	e8 94       	clt
 918:	6f 93       	push	r22
 91a:	6e 7f       	andi	r22, 0xFE	; 254
 91c:	6e 5f       	subi	r22, 0xFE	; 254
 91e:	7f 4f       	sbci	r23, 0xFF	; 255
 920:	8f 4f       	sbci	r24, 0xFF	; 255
 922:	9f 4f       	sbci	r25, 0xFF	; 255
 924:	af 4f       	sbci	r26, 0xFF	; 255
 926:	b1 e0       	ldi	r27, 0x01	; 1
 928:	3e d0       	rcall	.+124    	; 0x9a6 <__ultoa_invert+0x9c>
 92a:	b4 e0       	ldi	r27, 0x04	; 4
 92c:	3c d0       	rcall	.+120    	; 0x9a6 <__ultoa_invert+0x9c>
 92e:	67 0f       	add	r22, r23
 930:	78 1f       	adc	r23, r24
 932:	89 1f       	adc	r24, r25
 934:	9a 1f       	adc	r25, r26
 936:	a1 1d       	adc	r26, r1
 938:	68 0f       	add	r22, r24
 93a:	79 1f       	adc	r23, r25
 93c:	8a 1f       	adc	r24, r26
 93e:	91 1d       	adc	r25, r1
 940:	a1 1d       	adc	r26, r1
 942:	6a 0f       	add	r22, r26
 944:	71 1d       	adc	r23, r1
 946:	81 1d       	adc	r24, r1
 948:	91 1d       	adc	r25, r1
 94a:	a1 1d       	adc	r26, r1
 94c:	20 d0       	rcall	.+64     	; 0x98e <__ultoa_invert+0x84>
 94e:	09 f4       	brne	.+2      	; 0x952 <__ultoa_invert+0x48>
 950:	68 94       	set
 952:	3f 91       	pop	r19
 954:	2a e0       	ldi	r18, 0x0A	; 10
 956:	26 9f       	mul	r18, r22
 958:	11 24       	eor	r1, r1
 95a:	30 19       	sub	r19, r0
 95c:	30 5d       	subi	r19, 0xD0	; 208
 95e:	31 93       	st	Z+, r19
 960:	de f6       	brtc	.-74     	; 0x918 <__ultoa_invert+0xe>
 962:	cf 01       	movw	r24, r30
 964:	08 95       	ret
 966:	46 2f       	mov	r20, r22
 968:	47 70       	andi	r20, 0x07	; 7
 96a:	40 5d       	subi	r20, 0xD0	; 208
 96c:	41 93       	st	Z+, r20
 96e:	b3 e0       	ldi	r27, 0x03	; 3
 970:	0f d0       	rcall	.+30     	; 0x990 <__ultoa_invert+0x86>
 972:	c9 f7       	brne	.-14     	; 0x966 <__ultoa_invert+0x5c>
 974:	f6 cf       	rjmp	.-20     	; 0x962 <__ultoa_invert+0x58>
 976:	46 2f       	mov	r20, r22
 978:	4f 70       	andi	r20, 0x0F	; 15
 97a:	40 5d       	subi	r20, 0xD0	; 208
 97c:	4a 33       	cpi	r20, 0x3A	; 58
 97e:	18 f0       	brcs	.+6      	; 0x986 <__ultoa_invert+0x7c>
 980:	49 5d       	subi	r20, 0xD9	; 217
 982:	31 fd       	sbrc	r19, 1
 984:	40 52       	subi	r20, 0x20	; 32
 986:	41 93       	st	Z+, r20
 988:	02 d0       	rcall	.+4      	; 0x98e <__ultoa_invert+0x84>
 98a:	a9 f7       	brne	.-22     	; 0x976 <__ultoa_invert+0x6c>
 98c:	ea cf       	rjmp	.-44     	; 0x962 <__ultoa_invert+0x58>
 98e:	b4 e0       	ldi	r27, 0x04	; 4
 990:	a6 95       	lsr	r26
 992:	97 95       	ror	r25
 994:	87 95       	ror	r24
 996:	77 95       	ror	r23
 998:	67 95       	ror	r22
 99a:	ba 95       	dec	r27
 99c:	c9 f7       	brne	.-14     	; 0x990 <__ultoa_invert+0x86>
 99e:	00 97       	sbiw	r24, 0x00	; 0
 9a0:	61 05       	cpc	r22, r1
 9a2:	71 05       	cpc	r23, r1
 9a4:	08 95       	ret
 9a6:	9b 01       	movw	r18, r22
 9a8:	ac 01       	movw	r20, r24
 9aa:	0a 2e       	mov	r0, r26
 9ac:	06 94       	lsr	r0
 9ae:	57 95       	ror	r21
 9b0:	47 95       	ror	r20
 9b2:	37 95       	ror	r19
 9b4:	27 95       	ror	r18
 9b6:	ba 95       	dec	r27
 9b8:	c9 f7       	brne	.-14     	; 0x9ac <__ultoa_invert+0xa2>
 9ba:	62 0f       	add	r22, r18
 9bc:	73 1f       	adc	r23, r19
 9be:	84 1f       	adc	r24, r20
 9c0:	95 1f       	adc	r25, r21
 9c2:	a0 1d       	adc	r26, r0
 9c4:	08 95       	ret

000009c6 <__prologue_saves__>:
 9c6:	2f 92       	push	r2
 9c8:	3f 92       	push	r3
 9ca:	4f 92       	push	r4
 9cc:	5f 92       	push	r5
 9ce:	6f 92       	push	r6
 9d0:	7f 92       	push	r7
 9d2:	8f 92       	push	r8
 9d4:	9f 92       	push	r9
 9d6:	af 92       	push	r10
 9d8:	bf 92       	push	r11
 9da:	cf 92       	push	r12
 9dc:	df 92       	push	r13
 9de:	ef 92       	push	r14
 9e0:	ff 92       	push	r15
 9e2:	0f 93       	push	r16
 9e4:	1f 93       	push	r17
 9e6:	cf 93       	push	r28
 9e8:	df 93       	push	r29
 9ea:	cd b7       	in	r28, 0x3d	; 61
 9ec:	de b7       	in	r29, 0x3e	; 62
 9ee:	ca 1b       	sub	r28, r26
 9f0:	db 0b       	sbc	r29, r27
 9f2:	0f b6       	in	r0, 0x3f	; 63
 9f4:	f8 94       	cli
 9f6:	de bf       	out	0x3e, r29	; 62
 9f8:	0f be       	out	0x3f, r0	; 63
 9fa:	cd bf       	out	0x3d, r28	; 61
 9fc:	09 94       	ijmp

000009fe <__epilogue_restores__>:
 9fe:	2a 88       	ldd	r2, Y+18	; 0x12
 a00:	39 88       	ldd	r3, Y+17	; 0x11
 a02:	48 88       	ldd	r4, Y+16	; 0x10
 a04:	5f 84       	ldd	r5, Y+15	; 0x0f
 a06:	6e 84       	ldd	r6, Y+14	; 0x0e
 a08:	7d 84       	ldd	r7, Y+13	; 0x0d
 a0a:	8c 84       	ldd	r8, Y+12	; 0x0c
 a0c:	9b 84       	ldd	r9, Y+11	; 0x0b
 a0e:	aa 84       	ldd	r10, Y+10	; 0x0a
 a10:	b9 84       	ldd	r11, Y+9	; 0x09
 a12:	c8 84       	ldd	r12, Y+8	; 0x08
 a14:	df 80       	ldd	r13, Y+7	; 0x07
 a16:	ee 80       	ldd	r14, Y+6	; 0x06
 a18:	fd 80       	ldd	r15, Y+5	; 0x05
 a1a:	0c 81       	ldd	r16, Y+4	; 0x04
 a1c:	1b 81       	ldd	r17, Y+3	; 0x03
 a1e:	aa 81       	ldd	r26, Y+2	; 0x02
 a20:	b9 81       	ldd	r27, Y+1	; 0x01
 a22:	ce 0f       	add	r28, r30
 a24:	d1 1d       	adc	r29, r1
 a26:	0f b6       	in	r0, 0x3f	; 63
 a28:	f8 94       	cli
 a2a:	de bf       	out	0x3e, r29	; 62
 a2c:	0f be       	out	0x3f, r0	; 63
 a2e:	cd bf       	out	0x3d, r28	; 61
 a30:	ed 01       	movw	r28, r26
 a32:	08 95       	ret

00000a34 <_exit>:
 a34:	f8 94       	cli

00000a36 <__stop_program>:
 a36:	ff cf       	rjmp	.-2      	; 0xa36 <__stop_program>
