
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000003d8  0000044c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000003d8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         0000078c  00000000  00000000  0000044c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000e9d  00000000  00000000  00000bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  00001a75  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001a88  2**2
                  CONTENTS, READONLY
  6 .debug_info   000005f4  00000000  00000000  00001ac8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000005a2  00000000  00000000  000020bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000001a  00000000  00000000  0000265e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000208  00000000  00000000  00002678  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 49 00 	jmp	0x92	; 0x92 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  58:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  5c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  60:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  64:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	f4 fa       	bst	r15, 4
  6a:	fa fa       	.word	0xfafa	; ????
  6c:	fa fa       	.word	0xfafa	; ????
  6e:	fa fa       	.word	0xfafa	; ????
  70:	f4 fa       	bst	r15, 4
  72:	fa fa       	.word	0xfafa	; ????
  74:	fa fa       	.word	0xfafa	; ????
  76:	fa fa       	.word	0xfafa	; ????
  78:	fa fa       	.word	0xfafa	; ????
  7a:	fa fa       	.word	0xfafa	; ????
  7c:	fa fa       	Address 0x000000000000007c is out of bounds.
.word	0xffff	; ????

0000007d <steps.1959>:
  7d:	fa de f7 7e de aa 7e fa de 38 de 7b 66 38 7b aa     ...~..~..8.{f8{.
  8d:	de f7 7e de fa                                      ..~..

00000092 <__ctors_end>:
  92:	11 24       	eor	r1, r1
  94:	1f be       	out	0x3f, r1	; 63
  96:	cf ef       	ldi	r28, 0xFF	; 255
  98:	d8 e0       	ldi	r29, 0x08	; 8
  9a:	de bf       	out	0x3e, r29	; 62
  9c:	cd bf       	out	0x3d, r28	; 61
  9e:	0e 94 55 00 	call	0xaa	; 0xaa <main>
  a2:	0c 94 ea 01 	jmp	0x3d4	; 0x3d4 <_exit>

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000aa <main>:
      for (i = 0; i < step; i++) \
      	_delay_us(1); \
    }

int main() {
  BUZZ_DDR |= _BV(BUZZ);
  aa:	25 9a       	sbi	0x04, 5	; 4
  ac:	08 e6       	ldi	r16, 0x68	; 104
  ae:	10 e0       	ldi	r17, 0x00	; 0
  b0:	cd e7       	ldi	r28, 0x7D	; 125
  b2:	d0 e0       	ldi	r29, 0x00	; 0
                                        QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE,
                                        QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE,
                                        QUARTER_NOTE, QUARTER_NOTE, NOTE, HALF_NOTE, QUARTER_NOTE};
  int8_t i; 
  while (1) {
    TONE(pgm_read_byte(&steps[0]), pgm_read_byte(&delays[0]));
  b4:	f8 01       	movw	r30, r16
  b6:	84 91       	lpm	r24, Z
  b8:	fe 01       	movw	r30, r28
  ba:	44 91       	lpm	r20, Z
  bc:	28 2f       	mov	r18, r24
  be:	30 e0       	ldi	r19, 0x00	; 0
  c0:	a8 ee       	ldi	r26, 0xE8	; 232
  c2:	b3 e0       	ldi	r27, 0x03	; 3
  c4:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__umulhisi3>
  c8:	24 2f       	mov	r18, r20
  ca:	30 e0       	ldi	r19, 0x00	; 0
  cc:	40 e0       	ldi	r20, 0x00	; 0
  ce:	50 e0       	ldi	r21, 0x00	; 0
  d0:	0e 94 b9 01 	call	0x372	; 0x372 <__udivmodsi4>
  d4:	da 01       	movw	r26, r20
  d6:	c9 01       	movw	r24, r18
  d8:	b6 95       	lsr	r27
  da:	a7 95       	ror	r26
  dc:	97 95       	ror	r25
  de:	87 95       	ror	r24
  e0:	89 2b       	or	r24, r25
  e2:	8a 2b       	or	r24, r26
  e4:	8b 2b       	or	r24, r27
  e6:	09 f4       	brne	.+2      	; 0xea <main+0x40>
  e8:	4b c0       	rjmp	.+150    	; 0x180 <main+0xd6>
  ea:	2d 9a       	sbi	0x05, 5	; 5
  ec:	fe 01       	movw	r30, r28
  ee:	84 91       	lpm	r24, Z
  f0:	88 23       	and	r24, r24
  f2:	71 f0       	breq	.+28     	; 0x110 <main+0x66>
  f4:	20 e0       	ldi	r18, 0x00	; 0
  f6:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  f8:	f5 e0       	ldi	r31, 0x05	; 5
  fa:	fa 95       	dec	r31
  fc:	f1 f7       	brne	.-4      	; 0xfa <main+0x50>
  fe:	00 00       	nop
 100:	2f 5f       	subi	r18, 0xFF	; 255
 102:	3f 4f       	sbci	r19, 0xFF	; 255
 104:	fe 01       	movw	r30, r28
 106:	84 91       	lpm	r24, Z
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	28 17       	cp	r18, r24
 10c:	39 07       	cpc	r19, r25
 10e:	a0 f3       	brcs	.-24     	; 0xf8 <main+0x4e>
 110:	2d 98       	cbi	0x05, 5	; 5
 112:	fe 01       	movw	r30, r28
 114:	84 91       	lpm	r24, Z
 116:	88 23       	and	r24, r24
 118:	09 f4       	brne	.+2      	; 0x11c <main+0x72>
 11a:	26 c1       	rjmp	.+588    	; 0x368 <main+0x2be>
 11c:	81 2c       	mov	r8, r1
 11e:	91 2c       	mov	r9, r1
 120:	01 c0       	rjmp	.+2      	; 0x124 <main+0x7a>
 122:	49 01       	movw	r8, r18
 124:	f5 e0       	ldi	r31, 0x05	; 5
 126:	fa 95       	dec	r31
 128:	f1 f7       	brne	.-4      	; 0x126 <main+0x7c>
 12a:	00 00       	nop
 12c:	94 01       	movw	r18, r8
 12e:	2f 5f       	subi	r18, 0xFF	; 255
 130:	3f 4f       	sbci	r19, 0xFF	; 255
 132:	fe 01       	movw	r30, r28
 134:	84 91       	lpm	r24, Z
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	28 17       	cp	r18, r24
 13a:	39 07       	cpc	r19, r25
 13c:	90 f3       	brcs	.-28     	; 0x122 <main+0x78>
 13e:	f2 e0       	ldi	r31, 0x02	; 2
 140:	8f 0e       	add	r8, r31
 142:	91 1c       	adc	r9, r1
 144:	a1 2c       	mov	r10, r1
 146:	b1 2c       	mov	r11, r1
 148:	f8 01       	movw	r30, r16
 14a:	84 91       	lpm	r24, Z
 14c:	fe 01       	movw	r30, r28
 14e:	44 91       	lpm	r20, Z
 150:	28 2f       	mov	r18, r24
 152:	30 e0       	ldi	r19, 0x00	; 0
 154:	a8 ee       	ldi	r26, 0xE8	; 232
 156:	b3 e0       	ldi	r27, 0x03	; 3
 158:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__umulhisi3>
 15c:	24 2f       	mov	r18, r20
 15e:	30 e0       	ldi	r19, 0x00	; 0
 160:	40 e0       	ldi	r20, 0x00	; 0
 162:	50 e0       	ldi	r21, 0x00	; 0
 164:	0e 94 b9 01 	call	0x372	; 0x372 <__udivmodsi4>
 168:	da 01       	movw	r26, r20
 16a:	c9 01       	movw	r24, r18
 16c:	b6 95       	lsr	r27
 16e:	a7 95       	ror	r26
 170:	97 95       	ror	r25
 172:	87 95       	ror	r24
 174:	88 16       	cp	r8, r24
 176:	99 06       	cpc	r9, r25
 178:	aa 06       	cpc	r10, r26
 17a:	bb 06       	cpc	r11, r27
 17c:	08 f4       	brcc	.+2      	; 0x180 <main+0xd6>
 17e:	b5 cf       	rjmp	.-150    	; 0xea <main+0x40>
    for (uint8_t j = 0; j < 3; j++) {
       i = 1;
       while (i < 16) {
          TONE(pgm_read_byte(&steps[i]), pgm_read_byte(&delays[i]));
 180:	63 e0       	ldi	r22, 0x03	; 3
 182:	e6 2e       	mov	r14, r22
 184:	5f e0       	ldi	r21, 0x0F	; 15
 186:	f5 2e       	mov	r15, r21
 188:	f8 01       	movw	r30, r16
 18a:	24 91       	lpm	r18, Z
 18c:	fe 01       	movw	r30, r28
 18e:	44 91       	lpm	r20, Z
 190:	30 e0       	ldi	r19, 0x00	; 0
 192:	a8 ee       	ldi	r26, 0xE8	; 232
 194:	b3 e0       	ldi	r27, 0x03	; 3
 196:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__umulhisi3>
 19a:	24 2f       	mov	r18, r20
 19c:	30 e0       	ldi	r19, 0x00	; 0
 19e:	40 e0       	ldi	r20, 0x00	; 0
 1a0:	50 e0       	ldi	r21, 0x00	; 0
 1a2:	0e 94 b9 01 	call	0x372	; 0x372 <__udivmodsi4>
 1a6:	da 01       	movw	r26, r20
 1a8:	c9 01       	movw	r24, r18
 1aa:	b6 95       	lsr	r27
 1ac:	a7 95       	ror	r26
 1ae:	97 95       	ror	r25
 1b0:	87 95       	ror	r24
 1b2:	89 2b       	or	r24, r25
 1b4:	8a 2b       	or	r24, r26
 1b6:	8b 2b       	or	r24, r27
 1b8:	09 f4       	brne	.+2      	; 0x1bc <main+0x112>
 1ba:	51 c0       	rjmp	.+162    	; 0x25e <main+0x1b4>
 1bc:	2d 9a       	sbi	0x05, 5	; 5
 1be:	fe 01       	movw	r30, r28
 1c0:	84 91       	lpm	r24, Z
 1c2:	88 23       	and	r24, r24
 1c4:	79 f0       	breq	.+30     	; 0x1e4 <main+0x13a>
 1c6:	80 e0       	ldi	r24, 0x00	; 0
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	f5 e0       	ldi	r31, 0x05	; 5
 1cc:	fa 95       	dec	r31
 1ce:	f1 f7       	brne	.-4      	; 0x1cc <main+0x122>
 1d0:	00 00       	nop
 1d2:	01 96       	adiw	r24, 0x01	; 1
 1d4:	fc 01       	movw	r30, r24
 1d6:	e3 58       	subi	r30, 0x83	; 131
 1d8:	ff 4f       	sbci	r31, 0xFF	; 255
 1da:	e4 91       	lpm	r30, Z
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	8e 17       	cp	r24, r30
 1e0:	9f 07       	cpc	r25, r31
 1e2:	98 f3       	brcs	.-26     	; 0x1ca <main+0x120>
 1e4:	2d 98       	cbi	0x05, 5	; 5
 1e6:	fe 01       	movw	r30, r28
 1e8:	84 91       	lpm	r24, Z
 1ea:	88 23       	and	r24, r24
 1ec:	09 f4       	brne	.+2      	; 0x1f0 <main+0x146>
 1ee:	b5 c0       	rjmp	.+362    	; 0x35a <main+0x2b0>
 1f0:	20 e0       	ldi	r18, 0x00	; 0
 1f2:	30 e0       	ldi	r19, 0x00	; 0
 1f4:	01 c0       	rjmp	.+2      	; 0x1f8 <main+0x14e>
 1f6:	9c 01       	movw	r18, r24
 1f8:	85 e0       	ldi	r24, 0x05	; 5
 1fa:	8a 95       	dec	r24
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <main+0x150>
 1fe:	00 00       	nop
 200:	c9 01       	movw	r24, r18
 202:	01 96       	adiw	r24, 0x01	; 1
 204:	fc 01       	movw	r30, r24
 206:	e3 58       	subi	r30, 0x83	; 131
 208:	ff 4f       	sbci	r31, 0xFF	; 255
 20a:	e4 91       	lpm	r30, Z
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	8e 17       	cp	r24, r30
 210:	9f 07       	cpc	r25, r31
 212:	88 f3       	brcs	.-30     	; 0x1f6 <main+0x14c>
 214:	2e 5f       	subi	r18, 0xFE	; 254
 216:	3f 4f       	sbci	r19, 0xFF	; 255
 218:	49 01       	movw	r8, r18
 21a:	a1 2c       	mov	r10, r1
 21c:	b1 2c       	mov	r11, r1
 21e:	f9 01       	movw	r30, r18
 220:	e8 59       	subi	r30, 0x98	; 152
 222:	ff 4f       	sbci	r31, 0xFF	; 255
 224:	84 91       	lpm	r24, Z
 226:	f9 01       	movw	r30, r18
 228:	e3 58       	subi	r30, 0x83	; 131
 22a:	ff 4f       	sbci	r31, 0xFF	; 255
 22c:	44 91       	lpm	r20, Z
 22e:	28 2f       	mov	r18, r24
 230:	30 e0       	ldi	r19, 0x00	; 0
 232:	a8 ee       	ldi	r26, 0xE8	; 232
 234:	b3 e0       	ldi	r27, 0x03	; 3
 236:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__umulhisi3>
 23a:	24 2f       	mov	r18, r20
 23c:	30 e0       	ldi	r19, 0x00	; 0
 23e:	40 e0       	ldi	r20, 0x00	; 0
 240:	50 e0       	ldi	r21, 0x00	; 0
 242:	0e 94 b9 01 	call	0x372	; 0x372 <__udivmodsi4>
 246:	da 01       	movw	r26, r20
 248:	c9 01       	movw	r24, r18
 24a:	b6 95       	lsr	r27
 24c:	a7 95       	ror	r26
 24e:	97 95       	ror	r25
 250:	87 95       	ror	r24
 252:	88 16       	cp	r8, r24
 254:	99 06       	cpc	r9, r25
 256:	aa 06       	cpc	r10, r26
 258:	bb 06       	cpc	r11, r27
 25a:	08 f4       	brcc	.+2      	; 0x25e <main+0x1b4>
 25c:	af cf       	rjmp	.-162    	; 0x1bc <main+0x112>
 25e:	fa 94       	dec	r15
  int8_t i; 
  while (1) {
    TONE(pgm_read_byte(&steps[0]), pgm_read_byte(&delays[0]));
    for (uint8_t j = 0; j < 3; j++) {
       i = 1;
       while (i < 16) {
 260:	f1 10       	cpse	r15, r1
 262:	92 cf       	rjmp	.-220    	; 0x188 <main+0xde>
 264:	ea 94       	dec	r14
                                        QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE,
                                        QUARTER_NOTE, QUARTER_NOTE, NOTE, HALF_NOTE, QUARTER_NOTE};
  int8_t i; 
  while (1) {
    TONE(pgm_read_byte(&steps[0]), pgm_read_byte(&delays[0]));
    for (uint8_t j = 0; j < 3; j++) {
 266:	e1 10       	cpse	r14, r1
 268:	8d cf       	rjmp	.-230    	; 0x184 <main+0xda>
 26a:	7a e0       	ldi	r23, 0x0A	; 10
 26c:	f7 2e       	mov	r15, r23
          i++;
        }
    }

    while (i < 26) {
      TONE(pgm_read_byte(&steps[i]), pgm_read_byte(&delays[i]));
 26e:	f8 01       	movw	r30, r16
 270:	24 91       	lpm	r18, Z
 272:	fe 01       	movw	r30, r28
 274:	44 91       	lpm	r20, Z
 276:	30 e0       	ldi	r19, 0x00	; 0
 278:	a8 ee       	ldi	r26, 0xE8	; 232
 27a:	b3 e0       	ldi	r27, 0x03	; 3
 27c:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__umulhisi3>
 280:	24 2f       	mov	r18, r20
 282:	30 e0       	ldi	r19, 0x00	; 0
 284:	40 e0       	ldi	r20, 0x00	; 0
 286:	50 e0       	ldi	r21, 0x00	; 0
 288:	0e 94 b9 01 	call	0x372	; 0x372 <__udivmodsi4>
 28c:	da 01       	movw	r26, r20
 28e:	c9 01       	movw	r24, r18
 290:	b6 95       	lsr	r27
 292:	a7 95       	ror	r26
 294:	97 95       	ror	r25
 296:	87 95       	ror	r24
 298:	89 2b       	or	r24, r25
 29a:	8a 2b       	or	r24, r26
 29c:	8b 2b       	or	r24, r27
 29e:	09 f4       	brne	.+2      	; 0x2a2 <main+0x1f8>
 2a0:	51 c0       	rjmp	.+162    	; 0x344 <main+0x29a>
 2a2:	2d 9a       	sbi	0x05, 5	; 5
 2a4:	fe 01       	movw	r30, r28
 2a6:	84 91       	lpm	r24, Z
 2a8:	88 23       	and	r24, r24
 2aa:	79 f0       	breq	.+30     	; 0x2ca <main+0x220>
 2ac:	80 e0       	ldi	r24, 0x00	; 0
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	f5 e0       	ldi	r31, 0x05	; 5
 2b2:	fa 95       	dec	r31
 2b4:	f1 f7       	brne	.-4      	; 0x2b2 <main+0x208>
 2b6:	00 00       	nop
 2b8:	01 96       	adiw	r24, 0x01	; 1
 2ba:	fc 01       	movw	r30, r24
 2bc:	e3 58       	subi	r30, 0x83	; 131
 2be:	ff 4f       	sbci	r31, 0xFF	; 255
 2c0:	e4 91       	lpm	r30, Z
 2c2:	f0 e0       	ldi	r31, 0x00	; 0
 2c4:	8e 17       	cp	r24, r30
 2c6:	9f 07       	cpc	r25, r31
 2c8:	98 f3       	brcs	.-26     	; 0x2b0 <main+0x206>
 2ca:	2d 98       	cbi	0x05, 5	; 5
 2cc:	fe 01       	movw	r30, r28
 2ce:	84 91       	lpm	r24, Z
 2d0:	88 23       	and	r24, r24
 2d2:	09 f4       	brne	.+2      	; 0x2d6 <main+0x22c>
 2d4:	3b c0       	rjmp	.+118    	; 0x34c <main+0x2a2>
 2d6:	20 e0       	ldi	r18, 0x00	; 0
 2d8:	30 e0       	ldi	r19, 0x00	; 0
 2da:	01 c0       	rjmp	.+2      	; 0x2de <main+0x234>
 2dc:	9c 01       	movw	r18, r24
 2de:	85 e0       	ldi	r24, 0x05	; 5
 2e0:	8a 95       	dec	r24
 2e2:	f1 f7       	brne	.-4      	; 0x2e0 <main+0x236>
 2e4:	00 00       	nop
 2e6:	c9 01       	movw	r24, r18
 2e8:	01 96       	adiw	r24, 0x01	; 1
 2ea:	fc 01       	movw	r30, r24
 2ec:	e3 58       	subi	r30, 0x83	; 131
 2ee:	ff 4f       	sbci	r31, 0xFF	; 255
 2f0:	e4 91       	lpm	r30, Z
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	8e 17       	cp	r24, r30
 2f6:	9f 07       	cpc	r25, r31
 2f8:	88 f3       	brcs	.-30     	; 0x2dc <main+0x232>
 2fa:	2e 5f       	subi	r18, 0xFE	; 254
 2fc:	3f 4f       	sbci	r19, 0xFF	; 255
 2fe:	49 01       	movw	r8, r18
 300:	a1 2c       	mov	r10, r1
 302:	b1 2c       	mov	r11, r1
 304:	f9 01       	movw	r30, r18
 306:	e8 59       	subi	r30, 0x98	; 152
 308:	ff 4f       	sbci	r31, 0xFF	; 255
 30a:	84 91       	lpm	r24, Z
 30c:	f9 01       	movw	r30, r18
 30e:	e3 58       	subi	r30, 0x83	; 131
 310:	ff 4f       	sbci	r31, 0xFF	; 255
 312:	44 91       	lpm	r20, Z
 314:	28 2f       	mov	r18, r24
 316:	30 e0       	ldi	r19, 0x00	; 0
 318:	a8 ee       	ldi	r26, 0xE8	; 232
 31a:	b3 e0       	ldi	r27, 0x03	; 3
 31c:	0e 94 db 01 	call	0x3b6	; 0x3b6 <__umulhisi3>
 320:	24 2f       	mov	r18, r20
 322:	30 e0       	ldi	r19, 0x00	; 0
 324:	40 e0       	ldi	r20, 0x00	; 0
 326:	50 e0       	ldi	r21, 0x00	; 0
 328:	0e 94 b9 01 	call	0x372	; 0x372 <__udivmodsi4>
 32c:	da 01       	movw	r26, r20
 32e:	c9 01       	movw	r24, r18
 330:	b6 95       	lsr	r27
 332:	a7 95       	ror	r26
 334:	97 95       	ror	r25
 336:	87 95       	ror	r24
 338:	88 16       	cp	r8, r24
 33a:	99 06       	cpc	r9, r25
 33c:	aa 06       	cpc	r10, r26
 33e:	bb 06       	cpc	r11, r27
 340:	08 f4       	brcc	.+2      	; 0x344 <main+0x29a>
 342:	af cf       	rjmp	.-162    	; 0x2a2 <main+0x1f8>
 344:	fa 94       	dec	r15
          TONE(pgm_read_byte(&steps[i]), pgm_read_byte(&delays[i]));
          i++;
        }
    }

    while (i < 26) {
 346:	f1 10       	cpse	r15, r1
 348:	92 cf       	rjmp	.-220    	; 0x26e <main+0x1c4>
 34a:	b4 ce       	rjmp	.-664    	; 0xb4 <main+0xa>
      TONE(pgm_read_byte(&steps[i]), pgm_read_byte(&delays[i]));
 34c:	21 e0       	ldi	r18, 0x01	; 1
 34e:	30 e0       	ldi	r19, 0x00	; 0
 350:	81 2c       	mov	r8, r1
 352:	91 2c       	mov	r9, r1
 354:	54 01       	movw	r10, r8
 356:	83 94       	inc	r8
 358:	d5 cf       	rjmp	.-86     	; 0x304 <main+0x25a>
  while (1) {
    TONE(pgm_read_byte(&steps[0]), pgm_read_byte(&delays[0]));
    for (uint8_t j = 0; j < 3; j++) {
       i = 1;
       while (i < 16) {
          TONE(pgm_read_byte(&steps[i]), pgm_read_byte(&delays[i]));
 35a:	21 e0       	ldi	r18, 0x01	; 1
 35c:	30 e0       	ldi	r19, 0x00	; 0
 35e:	81 2c       	mov	r8, r1
 360:	91 2c       	mov	r9, r1
 362:	54 01       	movw	r10, r8
 364:	83 94       	inc	r8
 366:	5b cf       	rjmp	.-330    	; 0x21e <main+0x174>
                                        QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE,
                                        QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE, QUARTER_NOTE,
                                        QUARTER_NOTE, QUARTER_NOTE, NOTE, HALF_NOTE, QUARTER_NOTE};
  int8_t i; 
  while (1) {
    TONE(pgm_read_byte(&steps[0]), pgm_read_byte(&delays[0]));
 368:	81 2c       	mov	r8, r1
 36a:	91 2c       	mov	r9, r1
 36c:	54 01       	movw	r10, r8
 36e:	83 94       	inc	r8
 370:	eb ce       	rjmp	.-554    	; 0x148 <main+0x9e>

00000372 <__udivmodsi4>:
 372:	a1 e2       	ldi	r26, 0x21	; 33
 374:	1a 2e       	mov	r1, r26
 376:	aa 1b       	sub	r26, r26
 378:	bb 1b       	sub	r27, r27
 37a:	fd 01       	movw	r30, r26
 37c:	0d c0       	rjmp	.+26     	; 0x398 <__udivmodsi4_ep>

0000037e <__udivmodsi4_loop>:
 37e:	aa 1f       	adc	r26, r26
 380:	bb 1f       	adc	r27, r27
 382:	ee 1f       	adc	r30, r30
 384:	ff 1f       	adc	r31, r31
 386:	a2 17       	cp	r26, r18
 388:	b3 07       	cpc	r27, r19
 38a:	e4 07       	cpc	r30, r20
 38c:	f5 07       	cpc	r31, r21
 38e:	20 f0       	brcs	.+8      	; 0x398 <__udivmodsi4_ep>
 390:	a2 1b       	sub	r26, r18
 392:	b3 0b       	sbc	r27, r19
 394:	e4 0b       	sbc	r30, r20
 396:	f5 0b       	sbc	r31, r21

00000398 <__udivmodsi4_ep>:
 398:	66 1f       	adc	r22, r22
 39a:	77 1f       	adc	r23, r23
 39c:	88 1f       	adc	r24, r24
 39e:	99 1f       	adc	r25, r25
 3a0:	1a 94       	dec	r1
 3a2:	69 f7       	brne	.-38     	; 0x37e <__udivmodsi4_loop>
 3a4:	60 95       	com	r22
 3a6:	70 95       	com	r23
 3a8:	80 95       	com	r24
 3aa:	90 95       	com	r25
 3ac:	9b 01       	movw	r18, r22
 3ae:	ac 01       	movw	r20, r24
 3b0:	bd 01       	movw	r22, r26
 3b2:	cf 01       	movw	r24, r30
 3b4:	08 95       	ret

000003b6 <__umulhisi3>:
 3b6:	a2 9f       	mul	r26, r18
 3b8:	b0 01       	movw	r22, r0
 3ba:	b3 9f       	mul	r27, r19
 3bc:	c0 01       	movw	r24, r0
 3be:	a3 9f       	mul	r26, r19
 3c0:	70 0d       	add	r23, r0
 3c2:	81 1d       	adc	r24, r1
 3c4:	11 24       	eor	r1, r1
 3c6:	91 1d       	adc	r25, r1
 3c8:	b2 9f       	mul	r27, r18
 3ca:	70 0d       	add	r23, r0
 3cc:	81 1d       	adc	r24, r1
 3ce:	11 24       	eor	r1, r1
 3d0:	91 1d       	adc	r25, r1
 3d2:	08 95       	ret

000003d4 <_exit>:
 3d4:	f8 94       	cli

000003d6 <__stop_program>:
 3d6:	ff cf       	rjmp	.-2      	; 0x3d6 <__stop_program>
