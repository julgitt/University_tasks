
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c8  00800100  000013ca  0000145e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000013ca  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  008001c8  008001c8  00001526  2**0
                  ALLOC
  3 .stab         00000f30  00000000  00000000  00001528  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000108b  00000000  00000000  00002458  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000034e3  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000034f4  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  00003534  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  00003b28  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  000040ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  000040e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
       4:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       8:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      18:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      1c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      20:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      24:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      2c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      34:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      38:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      44:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      48:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      4c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      54:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      58:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      5c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      60:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      64:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	63 64       	ori	r22, 0x43	; 67
      6a:	69 6e       	ori	r22, 0xE9	; 233
      6c:	6f 70       	andi	r22, 0x0F	; 15
      6e:	73 75       	andi	r23, 0x53	; 83
      70:	78 58       	subi	r23, 0x88	; 136
      72:	5b 00       	.word	0x005b	; ????

00000074 <__ctors_end>:
      74:	11 24       	eor	r1, r1
      76:	1f be       	out	0x3f, r1	; 63
      78:	cf ef       	ldi	r28, 0xFF	; 255
      7a:	d8 e0       	ldi	r29, 0x08	; 8
      7c:	de bf       	out	0x3e, r29	; 62
      7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
      80:	11 e0       	ldi	r17, 0x01	; 1
      82:	a0 e0       	ldi	r26, 0x00	; 0
      84:	b1 e0       	ldi	r27, 0x01	; 1
      86:	ea ec       	ldi	r30, 0xCA	; 202
      88:	f3 e1       	ldi	r31, 0x13	; 19
      8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
      8c:	05 90       	lpm	r0, Z+
      8e:	0d 92       	st	X+, r0
      90:	a8 3c       	cpi	r26, 0xC8	; 200
      92:	b1 07       	cpc	r27, r17
      94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
      96:	21 e0       	ldi	r18, 0x01	; 1
      98:	a8 ec       	ldi	r26, 0xC8	; 200
      9a:	b1 e0       	ldi	r27, 0x01	; 1
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	ac 3d       	cpi	r26, 0xDC	; 220
      a2:	b2 07       	cpc	r27, r18
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
      a6:	0e 94 64 02 	call	0x4c8	; 0x4c8 <main>
      aa:	0c 94 e3 09 	jmp	0x13c6	; 0x13c6 <_exit>

000000ae <__bad_interrupt>:
      ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <i2cInit>:
#include "i2c.h"
void i2cInit() {
      b2:	cf 93       	push	r28
      b4:	df 93       	push	r29
      b6:	cd b7       	in	r28, 0x3d	; 61
      b8:	de b7       	in	r29, 0x3e	; 62
  // ustaw bitrate
  // 8MHz / (16+2*TWBR*1) ~= 100kHz
  TWBR = 32;
      ba:	88 eb       	ldi	r24, 0xB8	; 184
      bc:	90 e0       	ldi	r25, 0x00	; 0
      be:	20 e2       	ldi	r18, 0x20	; 32
      c0:	fc 01       	movw	r30, r24
      c2:	20 83       	st	Z, r18
  // uruchom TWI
  TWCR |= _BV(TWEN);
      c4:	8c eb       	ldi	r24, 0xBC	; 188
      c6:	90 e0       	ldi	r25, 0x00	; 0
      c8:	2c eb       	ldi	r18, 0xBC	; 188
      ca:	30 e0       	ldi	r19, 0x00	; 0
      cc:	f9 01       	movw	r30, r18
      ce:	20 81       	ld	r18, Z
      d0:	24 60       	ori	r18, 0x04	; 4
      d2:	fc 01       	movw	r30, r24
      d4:	20 83       	st	Z, r18
}
      d6:	00 00       	nop
      d8:	df 91       	pop	r29
      da:	cf 91       	pop	r28
      dc:	08 95       	ret

000000de <i2cWaitForComplete>:
void i2cWaitForComplete() {
      de:	cf 93       	push	r28
      e0:	df 93       	push	r29
      e2:	cd b7       	in	r28, 0x3d	; 61
      e4:	de b7       	in	r29, 0x3e	; 62
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
      e6:	00 00       	nop
      e8:	8c eb       	ldi	r24, 0xBC	; 188
      ea:	90 e0       	ldi	r25, 0x00	; 0
      ec:	fc 01       	movw	r30, r24
      ee:	80 81       	ld	r24, Z
      f0:	88 23       	and	r24, r24
      f2:	d4 f7       	brge	.-12     	; 0xe8 <i2cWaitForComplete+0xa>
}
      f4:	00 00       	nop
      f6:	df 91       	pop	r29
      f8:	cf 91       	pop	r28
      fa:	08 95       	ret

000000fc <i2cStart>:
void i2cStart() {
      fc:	cf 93       	push	r28
      fe:	df 93       	push	r29
     100:	cd b7       	in	r28, 0x3d	; 61
     102:	de b7       	in	r29, 0x3e	; 62
  // wyślij warunek startu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
     104:	8c eb       	ldi	r24, 0xBC	; 188
     106:	90 e0       	ldi	r25, 0x00	; 0
     108:	24 ea       	ldi	r18, 0xA4	; 164
     10a:	fc 01       	movw	r30, r24
     10c:	20 83       	st	Z, r18
  i2cWaitForComplete();
     10e:	0e 94 6f 00 	call	0xde	; 0xde <i2cWaitForComplete>
}
     112:	00 00       	nop
     114:	df 91       	pop	r29
     116:	cf 91       	pop	r28
     118:	08 95       	ret

0000011a <i2cStop>:
void i2cStop() {
     11a:	cf 93       	push	r28
     11c:	df 93       	push	r29
     11e:	cd b7       	in	r28, 0x3d	; 61
     120:	de b7       	in	r29, 0x3e	; 62
  // wyślij warunek stopu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTO);
     122:	8c eb       	ldi	r24, 0xBC	; 188
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	24 e9       	ldi	r18, 0x94	; 148
     128:	fc 01       	movw	r30, r24
     12a:	20 83       	st	Z, r18
}
     12c:	00 00       	nop
     12e:	df 91       	pop	r29
     130:	cf 91       	pop	r28
     132:	08 95       	ret

00000134 <i2cReset>:
void i2cReset() {
     134:	cf 93       	push	r28
     136:	df 93       	push	r29
     138:	cd b7       	in	r28, 0x3d	; 61
     13a:	de b7       	in	r29, 0x3e	; 62
  // wyślij warunek stopu i wyłącz TWI
  TWCR = _BV(TWINT) | _BV(TWSTO);
     13c:	8c eb       	ldi	r24, 0xBC	; 188
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	20 e9       	ldi	r18, 0x90	; 144
     142:	fc 01       	movw	r30, r24
     144:	20 83       	st	Z, r18
}
     146:	00 00       	nop
     148:	df 91       	pop	r29
     14a:	cf 91       	pop	r28
     14c:	08 95       	ret

0000014e <i2cReadAck>:
uint8_t i2cReadAck() {
     14e:	cf 93       	push	r28
     150:	df 93       	push	r29
     152:	cd b7       	in	r28, 0x3d	; 61
     154:	de b7       	in	r29, 0x3e	; 62
  // odczytaj dane, wyślij ACK
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWEA);
     156:	8c eb       	ldi	r24, 0xBC	; 188
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	24 ec       	ldi	r18, 0xC4	; 196
     15c:	fc 01       	movw	r30, r24
     15e:	20 83       	st	Z, r18
  i2cWaitForComplete();
     160:	0e 94 6f 00 	call	0xde	; 0xde <i2cWaitForComplete>
  return TWDR;
     164:	8b eb       	ldi	r24, 0xBB	; 187
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	fc 01       	movw	r30, r24
     16a:	80 81       	ld	r24, Z
}
     16c:	df 91       	pop	r29
     16e:	cf 91       	pop	r28
     170:	08 95       	ret

00000172 <i2cReadNoAck>:
uint8_t i2cReadNoAck() {
     172:	cf 93       	push	r28
     174:	df 93       	push	r29
     176:	cd b7       	in	r28, 0x3d	; 61
     178:	de b7       	in	r29, 0x3e	; 62
  // odczytaj dane, wyślij NOACK
  TWCR = _BV(TWINT) | _BV(TWEN);
     17a:	8c eb       	ldi	r24, 0xBC	; 188
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	24 e8       	ldi	r18, 0x84	; 132
     180:	fc 01       	movw	r30, r24
     182:	20 83       	st	Z, r18
  i2cWaitForComplete();
     184:	0e 94 6f 00 	call	0xde	; 0xde <i2cWaitForComplete>
  return TWDR;
     188:	8b eb       	ldi	r24, 0xBB	; 187
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	fc 01       	movw	r30, r24
     18e:	80 81       	ld	r24, Z
}
     190:	df 91       	pop	r29
     192:	cf 91       	pop	r28
     194:	08 95       	ret

00000196 <i2cSend>:
void i2cSend(uint8_t data) {
     196:	cf 93       	push	r28
     198:	df 93       	push	r29
     19a:	1f 92       	push	r1
     19c:	cd b7       	in	r28, 0x3d	; 61
     19e:	de b7       	in	r29, 0x3e	; 62
     1a0:	89 83       	std	Y+1, r24	; 0x01
  // wyślij dane
  TWDR = data;
     1a2:	8b eb       	ldi	r24, 0xBB	; 187
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	29 81       	ldd	r18, Y+1	; 0x01
     1a8:	fc 01       	movw	r30, r24
     1aa:	20 83       	st	Z, r18
  TWCR = _BV(TWINT) | _BV(TWEN);
     1ac:	8c eb       	ldi	r24, 0xBC	; 188
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	24 e8       	ldi	r18, 0x84	; 132
     1b2:	fc 01       	movw	r30, r24
     1b4:	20 83       	st	Z, r18
  i2cWaitForComplete();
     1b6:	0e 94 6f 00 	call	0xde	; 0xde <i2cWaitForComplete>
}
     1ba:	00 00       	nop
     1bc:	0f 90       	pop	r0
     1be:	df 91       	pop	r29
     1c0:	cf 91       	pop	r28
     1c2:	08 95       	ret

000001c4 <uart_init>:
#define BAUD 9600                            // baudrate
#define UBRR_VALUE ((F_CPU) / 16 / (BAUD)-1) // zgodnie ze wzorem

// inicjalizacja UART
void uart_init()
{
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29
     1c8:	cd b7       	in	r28, 0x3d	; 61
     1ca:	de b7       	in	r29, 0x3e	; 62
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
     1cc:	84 ec       	ldi	r24, 0xC4	; 196
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	27 e6       	ldi	r18, 0x67	; 103
     1d2:	30 e0       	ldi	r19, 0x00	; 0
     1d4:	fc 01       	movw	r30, r24
     1d6:	31 83       	std	Z+1, r19	; 0x01
     1d8:	20 83       	st	Z, r18
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
     1da:	80 ec       	ldi	r24, 0xC0	; 192
     1dc:	90 e0       	ldi	r25, 0x00	; 0
     1de:	fc 01       	movw	r30, r24
     1e0:	10 82       	st	Z, r1
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
     1e2:	81 ec       	ldi	r24, 0xC1	; 193
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	28 e1       	ldi	r18, 0x18	; 24
     1e8:	fc 01       	movw	r30, r24
     1ea:	20 83       	st	Z, r18
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
     1ec:	82 ec       	ldi	r24, 0xC2	; 194
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	26 e0       	ldi	r18, 0x06	; 6
     1f2:	fc 01       	movw	r30, r24
     1f4:	20 83       	st	Z, r18
}
     1f6:	00 00       	nop
     1f8:	df 91       	pop	r29
     1fa:	cf 91       	pop	r28
     1fc:	08 95       	ret

000001fe <uart_transmit>:

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
     1fe:	cf 93       	push	r28
     200:	df 93       	push	r29
     202:	00 d0       	rcall	.+0      	; 0x204 <uart_transmit+0x6>
     204:	1f 92       	push	r1
     206:	cd b7       	in	r28, 0x3d	; 61
     208:	de b7       	in	r29, 0x3e	; 62
     20a:	89 83       	std	Y+1, r24	; 0x01
     20c:	7b 83       	std	Y+3, r23	; 0x03
     20e:	6a 83       	std	Y+2, r22	; 0x02
  // czekaj aż transmiter gotowy
  while (!(UCSR0A & _BV(UDRE0)))
     210:	00 00       	nop
     212:	80 ec       	ldi	r24, 0xC0	; 192
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	fc 01       	movw	r30, r24
     218:	80 81       	ld	r24, Z
     21a:	88 2f       	mov	r24, r24
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	80 72       	andi	r24, 0x20	; 32
     220:	99 27       	eor	r25, r25
     222:	89 2b       	or	r24, r25
     224:	b1 f3       	breq	.-20     	; 0x212 <uart_transmit+0x14>
    ;
  UDR0 = data;
     226:	86 ec       	ldi	r24, 0xC6	; 198
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	29 81       	ldd	r18, Y+1	; 0x01
     22c:	fc 01       	movw	r30, r24
     22e:	20 83       	st	Z, r18
  return 0;
     230:	80 e0       	ldi	r24, 0x00	; 0
     232:	90 e0       	ldi	r25, 0x00	; 0
}
     234:	0f 90       	pop	r0
     236:	0f 90       	pop	r0
     238:	0f 90       	pop	r0
     23a:	df 91       	pop	r29
     23c:	cf 91       	pop	r28
     23e:	08 95       	ret

00000240 <uart_receive>:

// odczyt jednego znaku
int uart_receive(FILE *stream)
{
     240:	cf 93       	push	r28
     242:	df 93       	push	r29
     244:	00 d0       	rcall	.+0      	; 0x246 <uart_receive+0x6>
     246:	cd b7       	in	r28, 0x3d	; 61
     248:	de b7       	in	r29, 0x3e	; 62
     24a:	9a 83       	std	Y+2, r25	; 0x02
     24c:	89 83       	std	Y+1, r24	; 0x01
  // czekaj aż znak dostępny
  while (!(UCSR0A & _BV(RXC0)))
     24e:	00 00       	nop
     250:	80 ec       	ldi	r24, 0xC0	; 192
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	fc 01       	movw	r30, r24
     256:	80 81       	ld	r24, Z
     258:	88 23       	and	r24, r24
     25a:	d4 f7       	brge	.-12     	; 0x250 <uart_receive+0x10>
    ;
  return UDR0;
     25c:	86 ec       	ldi	r24, 0xC6	; 198
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	fc 01       	movw	r30, r24
     262:	80 81       	ld	r24, Z
     264:	88 2f       	mov	r24, r24
     266:	90 e0       	ldi	r25, 0x00	; 0
}
     268:	0f 90       	pop	r0
     26a:	0f 90       	pop	r0
     26c:	df 91       	pop	r29
     26e:	cf 91       	pop	r28
     270:	08 95       	ret

00000272 <write>:
  }

const uint8_t clock_addr = 0xd0;

static inline void write(uint8_t addr, uint8_t value)
{
     272:	cf 93       	push	r28
     274:	df 93       	push	r29
     276:	00 d0       	rcall	.+0      	; 0x278 <write+0x6>
     278:	00 d0       	rcall	.+0      	; 0x27a <write+0x8>
     27a:	cd b7       	in	r28, 0x3d	; 61
     27c:	de b7       	in	r29, 0x3e	; 62
     27e:	8b 83       	std	Y+3, r24	; 0x03
     280:	6c 83       	std	Y+4, r22	; 0x04
  i2cStart();
     282:	0e 94 7e 00 	call	0xfc	; 0xfc <i2cStart>

  i2cSend(clock_addr);
     286:	80 ed       	ldi	r24, 0xD0	; 208
     288:	0e 94 cb 00 	call	0x196	; 0x196 <i2cSend>
  i2cSend(addr);
     28c:	8b 81       	ldd	r24, Y+3	; 0x03
     28e:	0e 94 cb 00 	call	0x196	; 0x196 <i2cSend>

  uint8_t high, low;

  high = value / 10 << 4;
     292:	9c 81       	ldd	r25, Y+4	; 0x04
     294:	8d ec       	ldi	r24, 0xCD	; 205
     296:	98 9f       	mul	r25, r24
     298:	81 2d       	mov	r24, r1
     29a:	11 24       	eor	r1, r1
     29c:	86 95       	lsr	r24
     29e:	86 95       	lsr	r24
     2a0:	86 95       	lsr	r24
     2a2:	82 95       	swap	r24
     2a4:	80 7f       	andi	r24, 0xF0	; 240
     2a6:	89 83       	std	Y+1, r24	; 0x01
  low = value % 10;
     2a8:	9c 81       	ldd	r25, Y+4	; 0x04
     2aa:	8d ec       	ldi	r24, 0xCD	; 205
     2ac:	98 9f       	mul	r25, r24
     2ae:	81 2d       	mov	r24, r1
     2b0:	11 24       	eor	r1, r1
     2b2:	86 95       	lsr	r24
     2b4:	86 95       	lsr	r24
     2b6:	86 95       	lsr	r24
     2b8:	88 0f       	add	r24, r24
     2ba:	28 2f       	mov	r18, r24
     2bc:	22 0f       	add	r18, r18
     2be:	22 0f       	add	r18, r18
     2c0:	82 0f       	add	r24, r18
     2c2:	29 2f       	mov	r18, r25
     2c4:	28 1b       	sub	r18, r24
     2c6:	82 2f       	mov	r24, r18
     2c8:	8a 83       	std	Y+2, r24	; 0x02

  i2cSend(high | low);
     2ca:	99 81       	ldd	r25, Y+1	; 0x01
     2cc:	8a 81       	ldd	r24, Y+2	; 0x02
     2ce:	89 2b       	or	r24, r25
     2d0:	0e 94 cb 00 	call	0x196	; 0x196 <i2cSend>
  i2cStop();
     2d4:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cStop>
}
     2d8:	00 00       	nop
     2da:	0f 90       	pop	r0
     2dc:	0f 90       	pop	r0
     2de:	0f 90       	pop	r0
     2e0:	0f 90       	pop	r0
     2e2:	df 91       	pop	r29
     2e4:	cf 91       	pop	r28
     2e6:	08 95       	ret

000002e8 <read>:

static inline int read(int8_t addr)
{
     2e8:	cf 93       	push	r28
     2ea:	df 93       	push	r29
     2ec:	00 d0       	rcall	.+0      	; 0x2ee <read+0x6>
     2ee:	00 d0       	rcall	.+0      	; 0x2f0 <read+0x8>
     2f0:	1f 92       	push	r1
     2f2:	cd b7       	in	r28, 0x3d	; 61
     2f4:	de b7       	in	r29, 0x3e	; 62
     2f6:	8d 83       	std	Y+5, r24	; 0x05
  // dummy write
  i2cStart();
     2f8:	0e 94 7e 00 	call	0xfc	; 0xfc <i2cStart>

  i2cSend(clock_addr);
     2fc:	80 ed       	ldi	r24, 0xD0	; 208
     2fe:	0e 94 cb 00 	call	0x196	; 0x196 <i2cSend>
  i2cSend(addr);
     302:	8d 81       	ldd	r24, Y+5	; 0x05
     304:	0e 94 cb 00 	call	0x196	; 0x196 <i2cSend>

  // read
  i2cStart();
     308:	0e 94 7e 00 	call	0xfc	; 0xfc <i2cStart>
  i2cSend(clock_addr | 0x1);
     30c:	80 ed       	ldi	r24, 0xD0	; 208
     30e:	81 60       	ori	r24, 0x01	; 1
     310:	0e 94 cb 00 	call	0x196	; 0x196 <i2cSend>
  uint8_t value = i2cReadNoAck();
     314:	0e 94 b9 00 	call	0x172	; 0x172 <i2cReadNoAck>
     318:	89 83       	std	Y+1, r24	; 0x01

  uint8_t low, high;
  high = (value >> 4) * 10;
     31a:	89 81       	ldd	r24, Y+1	; 0x01
     31c:	82 95       	swap	r24
     31e:	8f 70       	andi	r24, 0x0F	; 15
     320:	88 0f       	add	r24, r24
     322:	98 2f       	mov	r25, r24
     324:	99 0f       	add	r25, r25
     326:	99 0f       	add	r25, r25
     328:	89 0f       	add	r24, r25
     32a:	8a 83       	std	Y+2, r24	; 0x02
  low = value & 0b1111;
     32c:	89 81       	ldd	r24, Y+1	; 0x01
     32e:	8f 70       	andi	r24, 0x0F	; 15
     330:	8b 83       	std	Y+3, r24	; 0x03

  uint8_t data = high + low;
     332:	9a 81       	ldd	r25, Y+2	; 0x02
     334:	8b 81       	ldd	r24, Y+3	; 0x03
     336:	89 0f       	add	r24, r25
     338:	8c 83       	std	Y+4, r24	; 0x04
  i2cStop();
     33a:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cStop>
  return data;
     33e:	8c 81       	ldd	r24, Y+4	; 0x04
     340:	88 2f       	mov	r24, r24
     342:	90 e0       	ldi	r25, 0x00	; 0
}
     344:	0f 90       	pop	r0
     346:	0f 90       	pop	r0
     348:	0f 90       	pop	r0
     34a:	0f 90       	pop	r0
     34c:	0f 90       	pop	r0
     34e:	df 91       	pop	r29
     350:	cf 91       	pop	r28
     352:	08 95       	ret

00000354 <date>:

static inline void date()
{
     354:	ef 92       	push	r14
     356:	ff 92       	push	r15
     358:	0f 93       	push	r16
     35a:	1f 93       	push	r17
     35c:	cf 93       	push	r28
     35e:	df 93       	push	r29
     360:	cd b7       	in	r28, 0x3d	; 61
     362:	de b7       	in	r29, 0x3e	; 62
  printf("%d-%d-%d\r\n", read(4), read(5), read(6));
     364:	86 e0       	ldi	r24, 0x06	; 6
     366:	0e 94 74 01 	call	0x2e8	; 0x2e8 <read>
     36a:	7c 01       	movw	r14, r24
     36c:	85 e0       	ldi	r24, 0x05	; 5
     36e:	0e 94 74 01 	call	0x2e8	; 0x2e8 <read>
     372:	8c 01       	movw	r16, r24
     374:	84 e0       	ldi	r24, 0x04	; 4
     376:	0e 94 74 01 	call	0x2e8	; 0x2e8 <read>
     37a:	2f 2d       	mov	r18, r15
     37c:	2f 93       	push	r18
     37e:	2e 2d       	mov	r18, r14
     380:	2f 93       	push	r18
     382:	21 2f       	mov	r18, r17
     384:	2f 93       	push	r18
     386:	20 2f       	mov	r18, r16
     388:	2f 93       	push	r18
     38a:	29 2f       	mov	r18, r25
     38c:	2f 93       	push	r18
     38e:	8f 93       	push	r24
     390:	81 e0       	ldi	r24, 0x01	; 1
     392:	91 e0       	ldi	r25, 0x01	; 1
     394:	89 2f       	mov	r24, r25
     396:	8f 93       	push	r24
     398:	81 e0       	ldi	r24, 0x01	; 1
     39a:	91 e0       	ldi	r25, 0x01	; 1
     39c:	8f 93       	push	r24
     39e:	0e 94 a4 03 	call	0x748	; 0x748 <printf>
     3a2:	8d b7       	in	r24, 0x3d	; 61
     3a4:	9e b7       	in	r25, 0x3e	; 62
     3a6:	08 96       	adiw	r24, 0x08	; 8
     3a8:	0f b6       	in	r0, 0x3f	; 63
     3aa:	f8 94       	cli
     3ac:	de bf       	out	0x3e, r29	; 62
     3ae:	0f be       	out	0x3f, r0	; 63
     3b0:	cd bf       	out	0x3d, r28	; 61
}
     3b2:	00 00       	nop
     3b4:	df 91       	pop	r29
     3b6:	cf 91       	pop	r28
     3b8:	1f 91       	pop	r17
     3ba:	0f 91       	pop	r16
     3bc:	ff 90       	pop	r15
     3be:	ef 90       	pop	r14
     3c0:	08 95       	ret

000003c2 <time>:

static inline void time()
{
     3c2:	ef 92       	push	r14
     3c4:	ff 92       	push	r15
     3c6:	0f 93       	push	r16
     3c8:	1f 93       	push	r17
     3ca:	cf 93       	push	r28
     3cc:	df 93       	push	r29
     3ce:	cd b7       	in	r28, 0x3d	; 61
     3d0:	de b7       	in	r29, 0x3e	; 62
  printf("%d:%d:%d\r\n", read(2), read(1), read(0));
     3d2:	80 e0       	ldi	r24, 0x00	; 0
     3d4:	0e 94 74 01 	call	0x2e8	; 0x2e8 <read>
     3d8:	7c 01       	movw	r14, r24
     3da:	81 e0       	ldi	r24, 0x01	; 1
     3dc:	0e 94 74 01 	call	0x2e8	; 0x2e8 <read>
     3e0:	8c 01       	movw	r16, r24
     3e2:	82 e0       	ldi	r24, 0x02	; 2
     3e4:	0e 94 74 01 	call	0x2e8	; 0x2e8 <read>
     3e8:	2f 2d       	mov	r18, r15
     3ea:	2f 93       	push	r18
     3ec:	2e 2d       	mov	r18, r14
     3ee:	2f 93       	push	r18
     3f0:	21 2f       	mov	r18, r17
     3f2:	2f 93       	push	r18
     3f4:	20 2f       	mov	r18, r16
     3f6:	2f 93       	push	r18
     3f8:	29 2f       	mov	r18, r25
     3fa:	2f 93       	push	r18
     3fc:	8f 93       	push	r24
     3fe:	8c e0       	ldi	r24, 0x0C	; 12
     400:	91 e0       	ldi	r25, 0x01	; 1
     402:	89 2f       	mov	r24, r25
     404:	8f 93       	push	r24
     406:	8c e0       	ldi	r24, 0x0C	; 12
     408:	91 e0       	ldi	r25, 0x01	; 1
     40a:	8f 93       	push	r24
     40c:	0e 94 a4 03 	call	0x748	; 0x748 <printf>
     410:	8d b7       	in	r24, 0x3d	; 61
     412:	9e b7       	in	r25, 0x3e	; 62
     414:	08 96       	adiw	r24, 0x08	; 8
     416:	0f b6       	in	r0, 0x3f	; 63
     418:	f8 94       	cli
     41a:	de bf       	out	0x3e, r29	; 62
     41c:	0f be       	out	0x3f, r0	; 63
     41e:	cd bf       	out	0x3d, r28	; 61
}
     420:	00 00       	nop
     422:	df 91       	pop	r29
     424:	cf 91       	pop	r28
     426:	1f 91       	pop	r17
     428:	0f 91       	pop	r16
     42a:	ff 90       	pop	r15
     42c:	ef 90       	pop	r14
     42e:	08 95       	ret

00000430 <set_date>:

static inline void set_date(int day, int month, int year)
{
     430:	cf 93       	push	r28
     432:	df 93       	push	r29
     434:	00 d0       	rcall	.+0      	; 0x436 <set_date+0x6>
     436:	00 d0       	rcall	.+0      	; 0x438 <set_date+0x8>
     438:	00 d0       	rcall	.+0      	; 0x43a <set_date+0xa>
     43a:	cd b7       	in	r28, 0x3d	; 61
     43c:	de b7       	in	r29, 0x3e	; 62
     43e:	9a 83       	std	Y+2, r25	; 0x02
     440:	89 83       	std	Y+1, r24	; 0x01
     442:	7c 83       	std	Y+4, r23	; 0x04
     444:	6b 83       	std	Y+3, r22	; 0x03
     446:	5e 83       	std	Y+6, r21	; 0x06
     448:	4d 83       	std	Y+5, r20	; 0x05
  write(4, day);
     44a:	89 81       	ldd	r24, Y+1	; 0x01
     44c:	68 2f       	mov	r22, r24
     44e:	84 e0       	ldi	r24, 0x04	; 4
     450:	0e 94 39 01 	call	0x272	; 0x272 <write>
  write(5, month);
     454:	8b 81       	ldd	r24, Y+3	; 0x03
     456:	68 2f       	mov	r22, r24
     458:	85 e0       	ldi	r24, 0x05	; 5
     45a:	0e 94 39 01 	call	0x272	; 0x272 <write>
  write(6, year);
     45e:	8d 81       	ldd	r24, Y+5	; 0x05
     460:	68 2f       	mov	r22, r24
     462:	86 e0       	ldi	r24, 0x06	; 6
     464:	0e 94 39 01 	call	0x272	; 0x272 <write>
}
     468:	00 00       	nop
     46a:	26 96       	adiw	r28, 0x06	; 6
     46c:	0f b6       	in	r0, 0x3f	; 63
     46e:	f8 94       	cli
     470:	de bf       	out	0x3e, r29	; 62
     472:	0f be       	out	0x3f, r0	; 63
     474:	cd bf       	out	0x3d, r28	; 61
     476:	df 91       	pop	r29
     478:	cf 91       	pop	r28
     47a:	08 95       	ret

0000047c <set_time>:

static inline void set_time(int hour, int minute, int second)
{
     47c:	cf 93       	push	r28
     47e:	df 93       	push	r29
     480:	00 d0       	rcall	.+0      	; 0x482 <set_time+0x6>
     482:	00 d0       	rcall	.+0      	; 0x484 <set_time+0x8>
     484:	00 d0       	rcall	.+0      	; 0x486 <set_time+0xa>
     486:	cd b7       	in	r28, 0x3d	; 61
     488:	de b7       	in	r29, 0x3e	; 62
     48a:	9a 83       	std	Y+2, r25	; 0x02
     48c:	89 83       	std	Y+1, r24	; 0x01
     48e:	7c 83       	std	Y+4, r23	; 0x04
     490:	6b 83       	std	Y+3, r22	; 0x03
     492:	5e 83       	std	Y+6, r21	; 0x06
     494:	4d 83       	std	Y+5, r20	; 0x05
  write(0, second);
     496:	8d 81       	ldd	r24, Y+5	; 0x05
     498:	68 2f       	mov	r22, r24
     49a:	80 e0       	ldi	r24, 0x00	; 0
     49c:	0e 94 39 01 	call	0x272	; 0x272 <write>
  write(1, minute);
     4a0:	8b 81       	ldd	r24, Y+3	; 0x03
     4a2:	68 2f       	mov	r22, r24
     4a4:	81 e0       	ldi	r24, 0x01	; 1
     4a6:	0e 94 39 01 	call	0x272	; 0x272 <write>
  write(2, hour);
     4aa:	89 81       	ldd	r24, Y+1	; 0x01
     4ac:	68 2f       	mov	r22, r24
     4ae:	82 e0       	ldi	r24, 0x02	; 2
     4b0:	0e 94 39 01 	call	0x272	; 0x272 <write>
}
     4b4:	00 00       	nop
     4b6:	26 96       	adiw	r28, 0x06	; 6
     4b8:	0f b6       	in	r0, 0x3f	; 63
     4ba:	f8 94       	cli
     4bc:	de bf       	out	0x3e, r29	; 62
     4be:	0f be       	out	0x3f, r0	; 63
     4c0:	cd bf       	out	0x3d, r28	; 61
     4c2:	df 91       	pop	r29
     4c4:	cf 91       	pop	r28
     4c6:	08 95       	ret

000004c8 <main>:

int main()
{
     4c8:	cf 93       	push	r28
     4ca:	df 93       	push	r29
     4cc:	cd b7       	in	r28, 0x3d	; 61
     4ce:	de b7       	in	r29, 0x3e	; 62
     4d0:	2d 97       	sbiw	r28, 0x0d	; 13
     4d2:	0f b6       	in	r0, 0x3f	; 63
     4d4:	f8 94       	cli
     4d6:	de bf       	out	0x3e, r29	; 62
     4d8:	0f be       	out	0x3f, r0	; 63
     4da:	cd bf       	out	0x3d, r28	; 61
  // zainicjalizuj UART
  uart_init();
     4dc:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <uart_init>
  // skonfiguruj strumienie wejścia/wyjścia
  fdev_setup_stream(&uart_file, uart_transmit, uart_receive, _FDEV_SETUP_RW);
     4e0:	8f ef       	ldi	r24, 0xFF	; 255
     4e2:	90 e0       	ldi	r25, 0x00	; 0
     4e4:	90 93 d1 01 	sts	0x01D1, r25	; 0x8001d1 <__data_end+0x9>
     4e8:	80 93 d0 01 	sts	0x01D0, r24	; 0x8001d0 <__data_end+0x8>
     4ec:	80 e2       	ldi	r24, 0x20	; 32
     4ee:	91 e0       	ldi	r25, 0x01	; 1
     4f0:	90 93 d3 01 	sts	0x01D3, r25	; 0x8001d3 <__data_end+0xb>
     4f4:	80 93 d2 01 	sts	0x01D2, r24	; 0x8001d2 <__data_end+0xa>
     4f8:	83 e0       	ldi	r24, 0x03	; 3
     4fa:	80 93 cb 01 	sts	0x01CB, r24	; 0x8001cb <__data_end+0x3>
     4fe:	10 92 d5 01 	sts	0x01D5, r1	; 0x8001d5 <__data_end+0xd>
     502:	10 92 d4 01 	sts	0x01D4, r1	; 0x8001d4 <__data_end+0xc>
  stdin = stdout = stderr = &uart_file;
     506:	88 ec       	ldi	r24, 0xC8	; 200
     508:	91 e0       	ldi	r25, 0x01	; 1
     50a:	90 93 db 01 	sts	0x01DB, r25	; 0x8001db <__iob+0x5>
     50e:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <__iob+0x4>
     512:	80 91 da 01 	lds	r24, 0x01DA	; 0x8001da <__iob+0x4>
     516:	90 91 db 01 	lds	r25, 0x01DB	; 0x8001db <__iob+0x5>
     51a:	90 93 d9 01 	sts	0x01D9, r25	; 0x8001d9 <__iob+0x3>
     51e:	80 93 d8 01 	sts	0x01D8, r24	; 0x8001d8 <__iob+0x2>
     522:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <__iob+0x2>
     526:	90 91 d9 01 	lds	r25, 0x01D9	; 0x8001d9 <__iob+0x3>
     52a:	90 93 d7 01 	sts	0x01D7, r25	; 0x8001d7 <__iob+0x1>
     52e:	80 93 d6 01 	sts	0x01D6, r24	; 0x8001d6 <__iob>
  // zainicjalizuj I2C
  i2cInit();
     532:	0e 94 59 00 	call	0xb2	; 0xb2 <i2cInit>

  uint8_t val1 = 0, val2 = 0, val3 = 0;
     536:	19 82       	std	Y+1, r1	; 0x01
     538:	1a 82       	std	Y+2, r1	; 0x02
     53a:	1b 82       	std	Y+3, r1	; 0x03
  char command[10];
  
  while (1)
  {
    scanf("%s", command);
     53c:	ce 01       	movw	r24, r28
     53e:	04 96       	adiw	r24, 0x04	; 4
     540:	29 2f       	mov	r18, r25
     542:	2f 93       	push	r18
     544:	8f 93       	push	r24
     546:	87 e1       	ldi	r24, 0x17	; 23
     548:	91 e0       	ldi	r25, 0x01	; 1
     54a:	89 2f       	mov	r24, r25
     54c:	8f 93       	push	r24
     54e:	87 e1       	ldi	r24, 0x17	; 23
     550:	91 e0       	ldi	r25, 0x01	; 1
     552:	8f 93       	push	r24
     554:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <scanf>
     558:	0f 90       	pop	r0
     55a:	0f 90       	pop	r0
     55c:	0f 90       	pop	r0
     55e:	0f 90       	pop	r0
    if (strcmp(command, "time") == 0)
     560:	ce 01       	movw	r24, r28
     562:	04 96       	adiw	r24, 0x04	; 4
     564:	6a e1       	ldi	r22, 0x1A	; 26
     566:	71 e0       	ldi	r23, 0x01	; 1
     568:	0e 94 9b 03 	call	0x736	; 0x736 <strcmp>
     56c:	89 2b       	or	r24, r25
     56e:	19 f4       	brne	.+6      	; 0x576 <main+0xae>
      time();
     570:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <time>
     574:	e3 cf       	rjmp	.-58     	; 0x53c <main+0x74>
    else if (strcmp(command, "date") == 0)
     576:	ce 01       	movw	r24, r28
     578:	04 96       	adiw	r24, 0x04	; 4
     57a:	6f e1       	ldi	r22, 0x1F	; 31
     57c:	71 e0       	ldi	r23, 0x01	; 1
     57e:	0e 94 9b 03 	call	0x736	; 0x736 <strcmp>
     582:	89 2b       	or	r24, r25
     584:	19 f4       	brne	.+6      	; 0x58c <main+0xc4>
      date();
     586:	0e 94 aa 01 	call	0x354	; 0x354 <date>
     58a:	d8 cf       	rjmp	.-80     	; 0x53c <main+0x74>
    else if (strcmp(command, "set") == 0)
     58c:	ce 01       	movw	r24, r28
     58e:	04 96       	adiw	r24, 0x04	; 4
     590:	64 e2       	ldi	r22, 0x24	; 36
     592:	71 e0       	ldi	r23, 0x01	; 1
     594:	0e 94 9b 03 	call	0x736	; 0x736 <strcmp>
     598:	89 2b       	or	r24, r25
     59a:	09 f0       	breq	.+2      	; 0x59e <main+0xd6>
     59c:	c7 c0       	rjmp	.+398    	; 0x72c <main+0x264>
    {
      scanf("%s", command);
     59e:	ce 01       	movw	r24, r28
     5a0:	04 96       	adiw	r24, 0x04	; 4
     5a2:	29 2f       	mov	r18, r25
     5a4:	2f 93       	push	r18
     5a6:	8f 93       	push	r24
     5a8:	87 e1       	ldi	r24, 0x17	; 23
     5aa:	91 e0       	ldi	r25, 0x01	; 1
     5ac:	89 2f       	mov	r24, r25
     5ae:	8f 93       	push	r24
     5b0:	87 e1       	ldi	r24, 0x17	; 23
     5b2:	91 e0       	ldi	r25, 0x01	; 1
     5b4:	8f 93       	push	r24
     5b6:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <scanf>
     5ba:	0f 90       	pop	r0
     5bc:	0f 90       	pop	r0
     5be:	0f 90       	pop	r0
     5c0:	0f 90       	pop	r0

      if (strcmp(command, "time") == 0)
     5c2:	ce 01       	movw	r24, r28
     5c4:	04 96       	adiw	r24, 0x04	; 4
     5c6:	6a e1       	ldi	r22, 0x1A	; 26
     5c8:	71 e0       	ldi	r23, 0x01	; 1
     5ca:	0e 94 9b 03 	call	0x736	; 0x736 <strcmp>
     5ce:	89 2b       	or	r24, r25
     5d0:	09 f0       	breq	.+2      	; 0x5d4 <main+0x10c>
     5d2:	4f c0       	rjmp	.+158    	; 0x672 <main+0x1aa>
      {
        scanf("%d:%d:%d", &val1, &val2, &val3);
     5d4:	ce 01       	movw	r24, r28
     5d6:	03 96       	adiw	r24, 0x03	; 3
     5d8:	29 2f       	mov	r18, r25
     5da:	2f 93       	push	r18
     5dc:	8f 93       	push	r24
     5de:	ce 01       	movw	r24, r28
     5e0:	02 96       	adiw	r24, 0x02	; 2
     5e2:	29 2f       	mov	r18, r25
     5e4:	2f 93       	push	r18
     5e6:	8f 93       	push	r24
     5e8:	ce 01       	movw	r24, r28
     5ea:	01 96       	adiw	r24, 0x01	; 1
     5ec:	9f 93       	push	r25
     5ee:	8f 93       	push	r24
     5f0:	88 e2       	ldi	r24, 0x28	; 40
     5f2:	91 e0       	ldi	r25, 0x01	; 1
     5f4:	89 2f       	mov	r24, r25
     5f6:	8f 93       	push	r24
     5f8:	88 e2       	ldi	r24, 0x28	; 40
     5fa:	91 e0       	ldi	r25, 0x01	; 1
     5fc:	8f 93       	push	r24
     5fe:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <scanf>
     602:	8d b7       	in	r24, 0x3d	; 61
     604:	9e b7       	in	r25, 0x3e	; 62
     606:	08 96       	adiw	r24, 0x08	; 8
     608:	0f b6       	in	r0, 0x3f	; 63
     60a:	f8 94       	cli
     60c:	de bf       	out	0x3e, r29	; 62
     60e:	0f be       	out	0x3f, r0	; 63
     610:	cd bf       	out	0x3d, r28	; 61
        set_time(val1, val2, val3);
     612:	8b 81       	ldd	r24, Y+3	; 0x03
     614:	48 2f       	mov	r20, r24
     616:	50 e0       	ldi	r21, 0x00	; 0
     618:	8a 81       	ldd	r24, Y+2	; 0x02
     61a:	28 2f       	mov	r18, r24
     61c:	30 e0       	ldi	r19, 0x00	; 0
     61e:	89 81       	ldd	r24, Y+1	; 0x01
     620:	88 2f       	mov	r24, r24
     622:	90 e0       	ldi	r25, 0x00	; 0
     624:	b9 01       	movw	r22, r18
     626:	0e 94 3e 02 	call	0x47c	; 0x47c <set_time>
        printf("Write: %d:%d:%d\r\n", val1, val2, val3);
     62a:	8b 81       	ldd	r24, Y+3	; 0x03
     62c:	48 2f       	mov	r20, r24
     62e:	50 e0       	ldi	r21, 0x00	; 0
     630:	8a 81       	ldd	r24, Y+2	; 0x02
     632:	28 2f       	mov	r18, r24
     634:	30 e0       	ldi	r19, 0x00	; 0
     636:	89 81       	ldd	r24, Y+1	; 0x01
     638:	88 2f       	mov	r24, r24
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	65 2f       	mov	r22, r21
     63e:	6f 93       	push	r22
     640:	4f 93       	push	r20
     642:	43 2f       	mov	r20, r19
     644:	4f 93       	push	r20
     646:	2f 93       	push	r18
     648:	29 2f       	mov	r18, r25
     64a:	2f 93       	push	r18
     64c:	8f 93       	push	r24
     64e:	81 e3       	ldi	r24, 0x31	; 49
     650:	91 e0       	ldi	r25, 0x01	; 1
     652:	89 2f       	mov	r24, r25
     654:	8f 93       	push	r24
     656:	81 e3       	ldi	r24, 0x31	; 49
     658:	91 e0       	ldi	r25, 0x01	; 1
     65a:	8f 93       	push	r24
     65c:	0e 94 a4 03 	call	0x748	; 0x748 <printf>
     660:	8d b7       	in	r24, 0x3d	; 61
     662:	9e b7       	in	r25, 0x3e	; 62
     664:	08 96       	adiw	r24, 0x08	; 8
     666:	0f b6       	in	r0, 0x3f	; 63
     668:	f8 94       	cli
     66a:	de bf       	out	0x3e, r29	; 62
     66c:	0f be       	out	0x3f, r0	; 63
     66e:	cd bf       	out	0x3d, r28	; 61
     670:	65 cf       	rjmp	.-310    	; 0x53c <main+0x74>
      }
      else if (strcmp(command, "date") == 0)
     672:	ce 01       	movw	r24, r28
     674:	04 96       	adiw	r24, 0x04	; 4
     676:	6f e1       	ldi	r22, 0x1F	; 31
     678:	71 e0       	ldi	r23, 0x01	; 1
     67a:	0e 94 9b 03 	call	0x736	; 0x736 <strcmp>
     67e:	89 2b       	or	r24, r25
     680:	09 f0       	breq	.+2      	; 0x684 <main+0x1bc>
     682:	4f c0       	rjmp	.+158    	; 0x722 <main+0x25a>
      {
        scanf("%d-%d-%d", &val1, &val2, &val3);
     684:	ce 01       	movw	r24, r28
     686:	03 96       	adiw	r24, 0x03	; 3
     688:	29 2f       	mov	r18, r25
     68a:	2f 93       	push	r18
     68c:	8f 93       	push	r24
     68e:	ce 01       	movw	r24, r28
     690:	02 96       	adiw	r24, 0x02	; 2
     692:	29 2f       	mov	r18, r25
     694:	2f 93       	push	r18
     696:	8f 93       	push	r24
     698:	ce 01       	movw	r24, r28
     69a:	01 96       	adiw	r24, 0x01	; 1
     69c:	9f 93       	push	r25
     69e:	8f 93       	push	r24
     6a0:	83 e4       	ldi	r24, 0x43	; 67
     6a2:	91 e0       	ldi	r25, 0x01	; 1
     6a4:	89 2f       	mov	r24, r25
     6a6:	8f 93       	push	r24
     6a8:	83 e4       	ldi	r24, 0x43	; 67
     6aa:	91 e0       	ldi	r25, 0x01	; 1
     6ac:	8f 93       	push	r24
     6ae:	0e 94 ea 03 	call	0x7d4	; 0x7d4 <scanf>
     6b2:	8d b7       	in	r24, 0x3d	; 61
     6b4:	9e b7       	in	r25, 0x3e	; 62
     6b6:	08 96       	adiw	r24, 0x08	; 8
     6b8:	0f b6       	in	r0, 0x3f	; 63
     6ba:	f8 94       	cli
     6bc:	de bf       	out	0x3e, r29	; 62
     6be:	0f be       	out	0x3f, r0	; 63
     6c0:	cd bf       	out	0x3d, r28	; 61
        set_date(val1, val2, val3);
     6c2:	8b 81       	ldd	r24, Y+3	; 0x03
     6c4:	48 2f       	mov	r20, r24
     6c6:	50 e0       	ldi	r21, 0x00	; 0
     6c8:	8a 81       	ldd	r24, Y+2	; 0x02
     6ca:	28 2f       	mov	r18, r24
     6cc:	30 e0       	ldi	r19, 0x00	; 0
     6ce:	89 81       	ldd	r24, Y+1	; 0x01
     6d0:	88 2f       	mov	r24, r24
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	b9 01       	movw	r22, r18
     6d6:	0e 94 18 02 	call	0x430	; 0x430 <set_date>
        printf("Write: %d-%d-%d\r\n", val1, val2, val3);
     6da:	8b 81       	ldd	r24, Y+3	; 0x03
     6dc:	48 2f       	mov	r20, r24
     6de:	50 e0       	ldi	r21, 0x00	; 0
     6e0:	8a 81       	ldd	r24, Y+2	; 0x02
     6e2:	28 2f       	mov	r18, r24
     6e4:	30 e0       	ldi	r19, 0x00	; 0
     6e6:	89 81       	ldd	r24, Y+1	; 0x01
     6e8:	88 2f       	mov	r24, r24
     6ea:	90 e0       	ldi	r25, 0x00	; 0
     6ec:	65 2f       	mov	r22, r21
     6ee:	6f 93       	push	r22
     6f0:	4f 93       	push	r20
     6f2:	43 2f       	mov	r20, r19
     6f4:	4f 93       	push	r20
     6f6:	2f 93       	push	r18
     6f8:	29 2f       	mov	r18, r25
     6fa:	2f 93       	push	r18
     6fc:	8f 93       	push	r24
     6fe:	8c e4       	ldi	r24, 0x4C	; 76
     700:	91 e0       	ldi	r25, 0x01	; 1
     702:	89 2f       	mov	r24, r25
     704:	8f 93       	push	r24
     706:	8c e4       	ldi	r24, 0x4C	; 76
     708:	91 e0       	ldi	r25, 0x01	; 1
     70a:	8f 93       	push	r24
     70c:	0e 94 a4 03 	call	0x748	; 0x748 <printf>
     710:	8d b7       	in	r24, 0x3d	; 61
     712:	9e b7       	in	r25, 0x3e	; 62
     714:	08 96       	adiw	r24, 0x08	; 8
     716:	0f b6       	in	r0, 0x3f	; 63
     718:	f8 94       	cli
     71a:	de bf       	out	0x3e, r29	; 62
     71c:	0f be       	out	0x3f, r0	; 63
     71e:	cd bf       	out	0x3d, r28	; 61
     720:	0d cf       	rjmp	.-486    	; 0x53c <main+0x74>
      }
      else
        printf("Invalid command. Use set time/set date instead\r\n");
     722:	8e e5       	ldi	r24, 0x5E	; 94
     724:	91 e0       	ldi	r25, 0x01	; 1
     726:	0e 94 ba 03 	call	0x774	; 0x774 <puts>
     72a:	08 cf       	rjmp	.-496    	; 0x53c <main+0x74>
    }
    else
      printf("Invalid command. Use time/date/set time/set date instead\r\n");
     72c:	8e e8       	ldi	r24, 0x8E	; 142
     72e:	91 e0       	ldi	r25, 0x01	; 1
     730:	0e 94 ba 03 	call	0x774	; 0x774 <puts>
  }
     734:	03 cf       	rjmp	.-506    	; 0x53c <main+0x74>

00000736 <strcmp>:
     736:	fb 01       	movw	r30, r22
     738:	dc 01       	movw	r26, r24
     73a:	8d 91       	ld	r24, X+
     73c:	01 90       	ld	r0, Z+
     73e:	80 19       	sub	r24, r0
     740:	01 10       	cpse	r0, r1
     742:	d9 f3       	breq	.-10     	; 0x73a <strcmp+0x4>
     744:	99 0b       	sbc	r25, r25
     746:	08 95       	ret

00000748 <printf>:
     748:	a0 e0       	ldi	r26, 0x00	; 0
     74a:	b0 e0       	ldi	r27, 0x00	; 0
     74c:	ea ea       	ldi	r30, 0xAA	; 170
     74e:	f3 e0       	ldi	r31, 0x03	; 3
     750:	0c 94 bc 09 	jmp	0x1378	; 0x1378 <__prologue_saves__+0x20>
     754:	ae 01       	movw	r20, r28
     756:	4b 5f       	subi	r20, 0xFB	; 251
     758:	5f 4f       	sbci	r21, 0xFF	; 255
     75a:	fa 01       	movw	r30, r20
     75c:	61 91       	ld	r22, Z+
     75e:	71 91       	ld	r23, Z+
     760:	af 01       	movw	r20, r30
     762:	80 91 d8 01 	lds	r24, 0x01D8	; 0x8001d8 <__iob+0x2>
     766:	90 91 d9 01 	lds	r25, 0x01D9	; 0x8001d9 <__iob+0x3>
     76a:	0e 94 00 04 	call	0x800	; 0x800 <vfprintf>
     76e:	e2 e0       	ldi	r30, 0x02	; 2
     770:	0c 94 d8 09 	jmp	0x13b0	; 0x13b0 <__epilogue_restores__+0x20>

00000774 <puts>:
     774:	0f 93       	push	r16
     776:	1f 93       	push	r17
     778:	cf 93       	push	r28
     77a:	df 93       	push	r29
     77c:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <__iob+0x2>
     780:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <__iob+0x3>
     784:	23 81       	ldd	r18, Z+3	; 0x03
     786:	21 ff       	sbrs	r18, 1
     788:	1b c0       	rjmp	.+54     	; 0x7c0 <puts+0x4c>
     78a:	8c 01       	movw	r16, r24
     78c:	d0 e0       	ldi	r29, 0x00	; 0
     78e:	c0 e0       	ldi	r28, 0x00	; 0
     790:	f8 01       	movw	r30, r16
     792:	81 91       	ld	r24, Z+
     794:	8f 01       	movw	r16, r30
     796:	60 91 d8 01 	lds	r22, 0x01D8	; 0x8001d8 <__iob+0x2>
     79a:	70 91 d9 01 	lds	r23, 0x01D9	; 0x8001d9 <__iob+0x3>
     79e:	db 01       	movw	r26, r22
     7a0:	18 96       	adiw	r26, 0x08	; 8
     7a2:	ed 91       	ld	r30, X+
     7a4:	fc 91       	ld	r31, X
     7a6:	19 97       	sbiw	r26, 0x09	; 9
     7a8:	88 23       	and	r24, r24
     7aa:	31 f0       	breq	.+12     	; 0x7b8 <puts+0x44>
     7ac:	09 95       	icall
     7ae:	89 2b       	or	r24, r25
     7b0:	79 f3       	breq	.-34     	; 0x790 <puts+0x1c>
     7b2:	df ef       	ldi	r29, 0xFF	; 255
     7b4:	cf ef       	ldi	r28, 0xFF	; 255
     7b6:	ec cf       	rjmp	.-40     	; 0x790 <puts+0x1c>
     7b8:	8a e0       	ldi	r24, 0x0A	; 10
     7ba:	09 95       	icall
     7bc:	89 2b       	or	r24, r25
     7be:	19 f0       	breq	.+6      	; 0x7c6 <puts+0x52>
     7c0:	8f ef       	ldi	r24, 0xFF	; 255
     7c2:	9f ef       	ldi	r25, 0xFF	; 255
     7c4:	02 c0       	rjmp	.+4      	; 0x7ca <puts+0x56>
     7c6:	8d 2f       	mov	r24, r29
     7c8:	9c 2f       	mov	r25, r28
     7ca:	df 91       	pop	r29
     7cc:	cf 91       	pop	r28
     7ce:	1f 91       	pop	r17
     7d0:	0f 91       	pop	r16
     7d2:	08 95       	ret

000007d4 <scanf>:
     7d4:	a0 e0       	ldi	r26, 0x00	; 0
     7d6:	b0 e0       	ldi	r27, 0x00	; 0
     7d8:	e0 ef       	ldi	r30, 0xF0	; 240
     7da:	f3 e0       	ldi	r31, 0x03	; 3
     7dc:	0c 94 bc 09 	jmp	0x1378	; 0x1378 <__prologue_saves__+0x20>
     7e0:	ae 01       	movw	r20, r28
     7e2:	4b 5f       	subi	r20, 0xFB	; 251
     7e4:	5f 4f       	sbci	r21, 0xFF	; 255
     7e6:	fa 01       	movw	r30, r20
     7e8:	61 91       	ld	r22, Z+
     7ea:	71 91       	ld	r23, Z+
     7ec:	af 01       	movw	r20, r30
     7ee:	80 91 d6 01 	lds	r24, 0x01D6	; 0x8001d6 <__iob>
     7f2:	90 91 d7 01 	lds	r25, 0x01D7	; 0x8001d7 <__iob+0x1>
     7f6:	0e 94 7d 07 	call	0xefa	; 0xefa <vfscanf>
     7fa:	e2 e0       	ldi	r30, 0x02	; 2
     7fc:	0c 94 d8 09 	jmp	0x13b0	; 0x13b0 <__epilogue_restores__+0x20>

00000800 <vfprintf>:
     800:	ab e0       	ldi	r26, 0x0B	; 11
     802:	b0 e0       	ldi	r27, 0x00	; 0
     804:	e6 e0       	ldi	r30, 0x06	; 6
     806:	f4 e0       	ldi	r31, 0x04	; 4
     808:	0c 94 ac 09 	jmp	0x1358	; 0x1358 <__prologue_saves__>
     80c:	6c 01       	movw	r12, r24
     80e:	7b 01       	movw	r14, r22
     810:	8a 01       	movw	r16, r20
     812:	fc 01       	movw	r30, r24
     814:	17 82       	std	Z+7, r1	; 0x07
     816:	16 82       	std	Z+6, r1	; 0x06
     818:	83 81       	ldd	r24, Z+3	; 0x03
     81a:	81 ff       	sbrs	r24, 1
     81c:	cc c1       	rjmp	.+920    	; 0xbb6 <__stack+0x2b7>
     81e:	ce 01       	movw	r24, r28
     820:	01 96       	adiw	r24, 0x01	; 1
     822:	3c 01       	movw	r6, r24
     824:	f6 01       	movw	r30, r12
     826:	93 81       	ldd	r25, Z+3	; 0x03
     828:	f7 01       	movw	r30, r14
     82a:	93 fd       	sbrc	r25, 3
     82c:	85 91       	lpm	r24, Z+
     82e:	93 ff       	sbrs	r25, 3
     830:	81 91       	ld	r24, Z+
     832:	7f 01       	movw	r14, r30
     834:	88 23       	and	r24, r24
     836:	09 f4       	brne	.+2      	; 0x83a <vfprintf+0x3a>
     838:	ba c1       	rjmp	.+884    	; 0xbae <__stack+0x2af>
     83a:	85 32       	cpi	r24, 0x25	; 37
     83c:	39 f4       	brne	.+14     	; 0x84c <vfprintf+0x4c>
     83e:	93 fd       	sbrc	r25, 3
     840:	85 91       	lpm	r24, Z+
     842:	93 ff       	sbrs	r25, 3
     844:	81 91       	ld	r24, Z+
     846:	7f 01       	movw	r14, r30
     848:	85 32       	cpi	r24, 0x25	; 37
     84a:	29 f4       	brne	.+10     	; 0x856 <vfprintf+0x56>
     84c:	b6 01       	movw	r22, r12
     84e:	90 e0       	ldi	r25, 0x00	; 0
     850:	0e 94 f6 08 	call	0x11ec	; 0x11ec <fputc>
     854:	e7 cf       	rjmp	.-50     	; 0x824 <vfprintf+0x24>
     856:	91 2c       	mov	r9, r1
     858:	21 2c       	mov	r2, r1
     85a:	31 2c       	mov	r3, r1
     85c:	ff e1       	ldi	r31, 0x1F	; 31
     85e:	f3 15       	cp	r31, r3
     860:	d8 f0       	brcs	.+54     	; 0x898 <vfprintf+0x98>
     862:	8b 32       	cpi	r24, 0x2B	; 43
     864:	79 f0       	breq	.+30     	; 0x884 <vfprintf+0x84>
     866:	38 f4       	brcc	.+14     	; 0x876 <vfprintf+0x76>
     868:	80 32       	cpi	r24, 0x20	; 32
     86a:	79 f0       	breq	.+30     	; 0x88a <vfprintf+0x8a>
     86c:	83 32       	cpi	r24, 0x23	; 35
     86e:	a1 f4       	brne	.+40     	; 0x898 <vfprintf+0x98>
     870:	23 2d       	mov	r18, r3
     872:	20 61       	ori	r18, 0x10	; 16
     874:	1d c0       	rjmp	.+58     	; 0x8b0 <vfprintf+0xb0>
     876:	8d 32       	cpi	r24, 0x2D	; 45
     878:	61 f0       	breq	.+24     	; 0x892 <vfprintf+0x92>
     87a:	80 33       	cpi	r24, 0x30	; 48
     87c:	69 f4       	brne	.+26     	; 0x898 <vfprintf+0x98>
     87e:	23 2d       	mov	r18, r3
     880:	21 60       	ori	r18, 0x01	; 1
     882:	16 c0       	rjmp	.+44     	; 0x8b0 <vfprintf+0xb0>
     884:	83 2d       	mov	r24, r3
     886:	82 60       	ori	r24, 0x02	; 2
     888:	38 2e       	mov	r3, r24
     88a:	e3 2d       	mov	r30, r3
     88c:	e4 60       	ori	r30, 0x04	; 4
     88e:	3e 2e       	mov	r3, r30
     890:	2a c0       	rjmp	.+84     	; 0x8e6 <vfprintf+0xe6>
     892:	f3 2d       	mov	r31, r3
     894:	f8 60       	ori	r31, 0x08	; 8
     896:	1d c0       	rjmp	.+58     	; 0x8d2 <vfprintf+0xd2>
     898:	37 fc       	sbrc	r3, 7
     89a:	2d c0       	rjmp	.+90     	; 0x8f6 <vfprintf+0xf6>
     89c:	20 ed       	ldi	r18, 0xD0	; 208
     89e:	28 0f       	add	r18, r24
     8a0:	2a 30       	cpi	r18, 0x0A	; 10
     8a2:	40 f0       	brcs	.+16     	; 0x8b4 <vfprintf+0xb4>
     8a4:	8e 32       	cpi	r24, 0x2E	; 46
     8a6:	b9 f4       	brne	.+46     	; 0x8d6 <vfprintf+0xd6>
     8a8:	36 fc       	sbrc	r3, 6
     8aa:	81 c1       	rjmp	.+770    	; 0xbae <__stack+0x2af>
     8ac:	23 2d       	mov	r18, r3
     8ae:	20 64       	ori	r18, 0x40	; 64
     8b0:	32 2e       	mov	r3, r18
     8b2:	19 c0       	rjmp	.+50     	; 0x8e6 <vfprintf+0xe6>
     8b4:	36 fe       	sbrs	r3, 6
     8b6:	06 c0       	rjmp	.+12     	; 0x8c4 <vfprintf+0xc4>
     8b8:	8a e0       	ldi	r24, 0x0A	; 10
     8ba:	98 9e       	mul	r9, r24
     8bc:	20 0d       	add	r18, r0
     8be:	11 24       	eor	r1, r1
     8c0:	92 2e       	mov	r9, r18
     8c2:	11 c0       	rjmp	.+34     	; 0x8e6 <vfprintf+0xe6>
     8c4:	ea e0       	ldi	r30, 0x0A	; 10
     8c6:	2e 9e       	mul	r2, r30
     8c8:	20 0d       	add	r18, r0
     8ca:	11 24       	eor	r1, r1
     8cc:	22 2e       	mov	r2, r18
     8ce:	f3 2d       	mov	r31, r3
     8d0:	f0 62       	ori	r31, 0x20	; 32
     8d2:	3f 2e       	mov	r3, r31
     8d4:	08 c0       	rjmp	.+16     	; 0x8e6 <vfprintf+0xe6>
     8d6:	8c 36       	cpi	r24, 0x6C	; 108
     8d8:	21 f4       	brne	.+8      	; 0x8e2 <vfprintf+0xe2>
     8da:	83 2d       	mov	r24, r3
     8dc:	80 68       	ori	r24, 0x80	; 128
     8de:	38 2e       	mov	r3, r24
     8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <vfprintf+0xe6>
     8e2:	88 36       	cpi	r24, 0x68	; 104
     8e4:	41 f4       	brne	.+16     	; 0x8f6 <vfprintf+0xf6>
     8e6:	f7 01       	movw	r30, r14
     8e8:	93 fd       	sbrc	r25, 3
     8ea:	85 91       	lpm	r24, Z+
     8ec:	93 ff       	sbrs	r25, 3
     8ee:	81 91       	ld	r24, Z+
     8f0:	7f 01       	movw	r14, r30
     8f2:	81 11       	cpse	r24, r1
     8f4:	b3 cf       	rjmp	.-154    	; 0x85c <vfprintf+0x5c>
     8f6:	98 2f       	mov	r25, r24
     8f8:	9f 7d       	andi	r25, 0xDF	; 223
     8fa:	95 54       	subi	r25, 0x45	; 69
     8fc:	93 30       	cpi	r25, 0x03	; 3
     8fe:	28 f4       	brcc	.+10     	; 0x90a <__stack+0xb>
     900:	0c 5f       	subi	r16, 0xFC	; 252
     902:	1f 4f       	sbci	r17, 0xFF	; 255
     904:	9f e3       	ldi	r25, 0x3F	; 63
     906:	99 83       	std	Y+1, r25	; 0x01
     908:	0d c0       	rjmp	.+26     	; 0x924 <__stack+0x25>
     90a:	83 36       	cpi	r24, 0x63	; 99
     90c:	31 f0       	breq	.+12     	; 0x91a <__stack+0x1b>
     90e:	83 37       	cpi	r24, 0x73	; 115
     910:	71 f0       	breq	.+28     	; 0x92e <__stack+0x2f>
     912:	83 35       	cpi	r24, 0x53	; 83
     914:	09 f0       	breq	.+2      	; 0x918 <__stack+0x19>
     916:	59 c0       	rjmp	.+178    	; 0x9ca <__stack+0xcb>
     918:	21 c0       	rjmp	.+66     	; 0x95c <__stack+0x5d>
     91a:	f8 01       	movw	r30, r16
     91c:	80 81       	ld	r24, Z
     91e:	89 83       	std	Y+1, r24	; 0x01
     920:	0e 5f       	subi	r16, 0xFE	; 254
     922:	1f 4f       	sbci	r17, 0xFF	; 255
     924:	88 24       	eor	r8, r8
     926:	83 94       	inc	r8
     928:	91 2c       	mov	r9, r1
     92a:	53 01       	movw	r10, r6
     92c:	13 c0       	rjmp	.+38     	; 0x954 <__stack+0x55>
     92e:	28 01       	movw	r4, r16
     930:	f2 e0       	ldi	r31, 0x02	; 2
     932:	4f 0e       	add	r4, r31
     934:	51 1c       	adc	r5, r1
     936:	f8 01       	movw	r30, r16
     938:	a0 80       	ld	r10, Z
     93a:	b1 80       	ldd	r11, Z+1	; 0x01
     93c:	36 fe       	sbrs	r3, 6
     93e:	03 c0       	rjmp	.+6      	; 0x946 <__stack+0x47>
     940:	69 2d       	mov	r22, r9
     942:	70 e0       	ldi	r23, 0x00	; 0
     944:	02 c0       	rjmp	.+4      	; 0x94a <__stack+0x4b>
     946:	6f ef       	ldi	r22, 0xFF	; 255
     948:	7f ef       	ldi	r23, 0xFF	; 255
     94a:	c5 01       	movw	r24, r10
     94c:	0e 94 ad 08 	call	0x115a	; 0x115a <strnlen>
     950:	4c 01       	movw	r8, r24
     952:	82 01       	movw	r16, r4
     954:	f3 2d       	mov	r31, r3
     956:	ff 77       	andi	r31, 0x7F	; 127
     958:	3f 2e       	mov	r3, r31
     95a:	16 c0       	rjmp	.+44     	; 0x988 <__stack+0x89>
     95c:	28 01       	movw	r4, r16
     95e:	22 e0       	ldi	r18, 0x02	; 2
     960:	42 0e       	add	r4, r18
     962:	51 1c       	adc	r5, r1
     964:	f8 01       	movw	r30, r16
     966:	a0 80       	ld	r10, Z
     968:	b1 80       	ldd	r11, Z+1	; 0x01
     96a:	36 fe       	sbrs	r3, 6
     96c:	03 c0       	rjmp	.+6      	; 0x974 <__stack+0x75>
     96e:	69 2d       	mov	r22, r9
     970:	70 e0       	ldi	r23, 0x00	; 0
     972:	02 c0       	rjmp	.+4      	; 0x978 <__stack+0x79>
     974:	6f ef       	ldi	r22, 0xFF	; 255
     976:	7f ef       	ldi	r23, 0xFF	; 255
     978:	c5 01       	movw	r24, r10
     97a:	0e 94 a2 08 	call	0x1144	; 0x1144 <strnlen_P>
     97e:	4c 01       	movw	r8, r24
     980:	f3 2d       	mov	r31, r3
     982:	f0 68       	ori	r31, 0x80	; 128
     984:	3f 2e       	mov	r3, r31
     986:	82 01       	movw	r16, r4
     988:	33 fc       	sbrc	r3, 3
     98a:	1b c0       	rjmp	.+54     	; 0x9c2 <__stack+0xc3>
     98c:	82 2d       	mov	r24, r2
     98e:	90 e0       	ldi	r25, 0x00	; 0
     990:	88 16       	cp	r8, r24
     992:	99 06       	cpc	r9, r25
     994:	b0 f4       	brcc	.+44     	; 0x9c2 <__stack+0xc3>
     996:	b6 01       	movw	r22, r12
     998:	80 e2       	ldi	r24, 0x20	; 32
     99a:	90 e0       	ldi	r25, 0x00	; 0
     99c:	0e 94 f6 08 	call	0x11ec	; 0x11ec <fputc>
     9a0:	2a 94       	dec	r2
     9a2:	f4 cf       	rjmp	.-24     	; 0x98c <__stack+0x8d>
     9a4:	f5 01       	movw	r30, r10
     9a6:	37 fc       	sbrc	r3, 7
     9a8:	85 91       	lpm	r24, Z+
     9aa:	37 fe       	sbrs	r3, 7
     9ac:	81 91       	ld	r24, Z+
     9ae:	5f 01       	movw	r10, r30
     9b0:	b6 01       	movw	r22, r12
     9b2:	90 e0       	ldi	r25, 0x00	; 0
     9b4:	0e 94 f6 08 	call	0x11ec	; 0x11ec <fputc>
     9b8:	21 10       	cpse	r2, r1
     9ba:	2a 94       	dec	r2
     9bc:	21 e0       	ldi	r18, 0x01	; 1
     9be:	82 1a       	sub	r8, r18
     9c0:	91 08       	sbc	r9, r1
     9c2:	81 14       	cp	r8, r1
     9c4:	91 04       	cpc	r9, r1
     9c6:	71 f7       	brne	.-36     	; 0x9a4 <__stack+0xa5>
     9c8:	e8 c0       	rjmp	.+464    	; 0xb9a <__stack+0x29b>
     9ca:	84 36       	cpi	r24, 0x64	; 100
     9cc:	11 f0       	breq	.+4      	; 0x9d2 <__stack+0xd3>
     9ce:	89 36       	cpi	r24, 0x69	; 105
     9d0:	41 f5       	brne	.+80     	; 0xa22 <__stack+0x123>
     9d2:	f8 01       	movw	r30, r16
     9d4:	37 fe       	sbrs	r3, 7
     9d6:	07 c0       	rjmp	.+14     	; 0x9e6 <__stack+0xe7>
     9d8:	60 81       	ld	r22, Z
     9da:	71 81       	ldd	r23, Z+1	; 0x01
     9dc:	82 81       	ldd	r24, Z+2	; 0x02
     9de:	93 81       	ldd	r25, Z+3	; 0x03
     9e0:	0c 5f       	subi	r16, 0xFC	; 252
     9e2:	1f 4f       	sbci	r17, 0xFF	; 255
     9e4:	08 c0       	rjmp	.+16     	; 0x9f6 <__stack+0xf7>
     9e6:	60 81       	ld	r22, Z
     9e8:	71 81       	ldd	r23, Z+1	; 0x01
     9ea:	07 2e       	mov	r0, r23
     9ec:	00 0c       	add	r0, r0
     9ee:	88 0b       	sbc	r24, r24
     9f0:	99 0b       	sbc	r25, r25
     9f2:	0e 5f       	subi	r16, 0xFE	; 254
     9f4:	1f 4f       	sbci	r17, 0xFF	; 255
     9f6:	f3 2d       	mov	r31, r3
     9f8:	ff 76       	andi	r31, 0x6F	; 111
     9fa:	3f 2e       	mov	r3, r31
     9fc:	97 ff       	sbrs	r25, 7
     9fe:	09 c0       	rjmp	.+18     	; 0xa12 <__stack+0x113>
     a00:	90 95       	com	r25
     a02:	80 95       	com	r24
     a04:	70 95       	com	r23
     a06:	61 95       	neg	r22
     a08:	7f 4f       	sbci	r23, 0xFF	; 255
     a0a:	8f 4f       	sbci	r24, 0xFF	; 255
     a0c:	9f 4f       	sbci	r25, 0xFF	; 255
     a0e:	f0 68       	ori	r31, 0x80	; 128
     a10:	3f 2e       	mov	r3, r31
     a12:	2a e0       	ldi	r18, 0x0A	; 10
     a14:	30 e0       	ldi	r19, 0x00	; 0
     a16:	a3 01       	movw	r20, r6
     a18:	0e 94 4b 09 	call	0x1296	; 0x1296 <__ultoa_invert>
     a1c:	88 2e       	mov	r8, r24
     a1e:	86 18       	sub	r8, r6
     a20:	45 c0       	rjmp	.+138    	; 0xaac <__stack+0x1ad>
     a22:	85 37       	cpi	r24, 0x75	; 117
     a24:	31 f4       	brne	.+12     	; 0xa32 <__stack+0x133>
     a26:	23 2d       	mov	r18, r3
     a28:	2f 7e       	andi	r18, 0xEF	; 239
     a2a:	b2 2e       	mov	r11, r18
     a2c:	2a e0       	ldi	r18, 0x0A	; 10
     a2e:	30 e0       	ldi	r19, 0x00	; 0
     a30:	25 c0       	rjmp	.+74     	; 0xa7c <__stack+0x17d>
     a32:	93 2d       	mov	r25, r3
     a34:	99 7f       	andi	r25, 0xF9	; 249
     a36:	b9 2e       	mov	r11, r25
     a38:	8f 36       	cpi	r24, 0x6F	; 111
     a3a:	c1 f0       	breq	.+48     	; 0xa6c <__stack+0x16d>
     a3c:	18 f4       	brcc	.+6      	; 0xa44 <__stack+0x145>
     a3e:	88 35       	cpi	r24, 0x58	; 88
     a40:	79 f0       	breq	.+30     	; 0xa60 <__stack+0x161>
     a42:	b5 c0       	rjmp	.+362    	; 0xbae <__stack+0x2af>
     a44:	80 37       	cpi	r24, 0x70	; 112
     a46:	19 f0       	breq	.+6      	; 0xa4e <__stack+0x14f>
     a48:	88 37       	cpi	r24, 0x78	; 120
     a4a:	21 f0       	breq	.+8      	; 0xa54 <__stack+0x155>
     a4c:	b0 c0       	rjmp	.+352    	; 0xbae <__stack+0x2af>
     a4e:	e9 2f       	mov	r30, r25
     a50:	e0 61       	ori	r30, 0x10	; 16
     a52:	be 2e       	mov	r11, r30
     a54:	b4 fe       	sbrs	r11, 4
     a56:	0d c0       	rjmp	.+26     	; 0xa72 <__stack+0x173>
     a58:	fb 2d       	mov	r31, r11
     a5a:	f4 60       	ori	r31, 0x04	; 4
     a5c:	bf 2e       	mov	r11, r31
     a5e:	09 c0       	rjmp	.+18     	; 0xa72 <__stack+0x173>
     a60:	34 fe       	sbrs	r3, 4
     a62:	0a c0       	rjmp	.+20     	; 0xa78 <__stack+0x179>
     a64:	29 2f       	mov	r18, r25
     a66:	26 60       	ori	r18, 0x06	; 6
     a68:	b2 2e       	mov	r11, r18
     a6a:	06 c0       	rjmp	.+12     	; 0xa78 <__stack+0x179>
     a6c:	28 e0       	ldi	r18, 0x08	; 8
     a6e:	30 e0       	ldi	r19, 0x00	; 0
     a70:	05 c0       	rjmp	.+10     	; 0xa7c <__stack+0x17d>
     a72:	20 e1       	ldi	r18, 0x10	; 16
     a74:	30 e0       	ldi	r19, 0x00	; 0
     a76:	02 c0       	rjmp	.+4      	; 0xa7c <__stack+0x17d>
     a78:	20 e1       	ldi	r18, 0x10	; 16
     a7a:	32 e0       	ldi	r19, 0x02	; 2
     a7c:	f8 01       	movw	r30, r16
     a7e:	b7 fe       	sbrs	r11, 7
     a80:	07 c0       	rjmp	.+14     	; 0xa90 <__stack+0x191>
     a82:	60 81       	ld	r22, Z
     a84:	71 81       	ldd	r23, Z+1	; 0x01
     a86:	82 81       	ldd	r24, Z+2	; 0x02
     a88:	93 81       	ldd	r25, Z+3	; 0x03
     a8a:	0c 5f       	subi	r16, 0xFC	; 252
     a8c:	1f 4f       	sbci	r17, 0xFF	; 255
     a8e:	06 c0       	rjmp	.+12     	; 0xa9c <__stack+0x19d>
     a90:	60 81       	ld	r22, Z
     a92:	71 81       	ldd	r23, Z+1	; 0x01
     a94:	80 e0       	ldi	r24, 0x00	; 0
     a96:	90 e0       	ldi	r25, 0x00	; 0
     a98:	0e 5f       	subi	r16, 0xFE	; 254
     a9a:	1f 4f       	sbci	r17, 0xFF	; 255
     a9c:	a3 01       	movw	r20, r6
     a9e:	0e 94 4b 09 	call	0x1296	; 0x1296 <__ultoa_invert>
     aa2:	88 2e       	mov	r8, r24
     aa4:	86 18       	sub	r8, r6
     aa6:	fb 2d       	mov	r31, r11
     aa8:	ff 77       	andi	r31, 0x7F	; 127
     aaa:	3f 2e       	mov	r3, r31
     aac:	36 fe       	sbrs	r3, 6
     aae:	0d c0       	rjmp	.+26     	; 0xaca <__stack+0x1cb>
     ab0:	23 2d       	mov	r18, r3
     ab2:	2e 7f       	andi	r18, 0xFE	; 254
     ab4:	a2 2e       	mov	r10, r18
     ab6:	89 14       	cp	r8, r9
     ab8:	58 f4       	brcc	.+22     	; 0xad0 <__stack+0x1d1>
     aba:	34 fe       	sbrs	r3, 4
     abc:	0b c0       	rjmp	.+22     	; 0xad4 <__stack+0x1d5>
     abe:	32 fc       	sbrc	r3, 2
     ac0:	09 c0       	rjmp	.+18     	; 0xad4 <__stack+0x1d5>
     ac2:	83 2d       	mov	r24, r3
     ac4:	8e 7e       	andi	r24, 0xEE	; 238
     ac6:	a8 2e       	mov	r10, r24
     ac8:	05 c0       	rjmp	.+10     	; 0xad4 <__stack+0x1d5>
     aca:	b8 2c       	mov	r11, r8
     acc:	a3 2c       	mov	r10, r3
     ace:	03 c0       	rjmp	.+6      	; 0xad6 <__stack+0x1d7>
     ad0:	b8 2c       	mov	r11, r8
     ad2:	01 c0       	rjmp	.+2      	; 0xad6 <__stack+0x1d7>
     ad4:	b9 2c       	mov	r11, r9
     ad6:	a4 fe       	sbrs	r10, 4
     ad8:	0f c0       	rjmp	.+30     	; 0xaf8 <__stack+0x1f9>
     ada:	fe 01       	movw	r30, r28
     adc:	e8 0d       	add	r30, r8
     ade:	f1 1d       	adc	r31, r1
     ae0:	80 81       	ld	r24, Z
     ae2:	80 33       	cpi	r24, 0x30	; 48
     ae4:	21 f4       	brne	.+8      	; 0xaee <__stack+0x1ef>
     ae6:	9a 2d       	mov	r25, r10
     ae8:	99 7e       	andi	r25, 0xE9	; 233
     aea:	a9 2e       	mov	r10, r25
     aec:	09 c0       	rjmp	.+18     	; 0xb00 <__stack+0x201>
     aee:	a2 fe       	sbrs	r10, 2
     af0:	06 c0       	rjmp	.+12     	; 0xafe <__stack+0x1ff>
     af2:	b3 94       	inc	r11
     af4:	b3 94       	inc	r11
     af6:	04 c0       	rjmp	.+8      	; 0xb00 <__stack+0x201>
     af8:	8a 2d       	mov	r24, r10
     afa:	86 78       	andi	r24, 0x86	; 134
     afc:	09 f0       	breq	.+2      	; 0xb00 <__stack+0x201>
     afe:	b3 94       	inc	r11
     b00:	a3 fc       	sbrc	r10, 3
     b02:	11 c0       	rjmp	.+34     	; 0xb26 <__stack+0x227>
     b04:	a0 fe       	sbrs	r10, 0
     b06:	06 c0       	rjmp	.+12     	; 0xb14 <__stack+0x215>
     b08:	b2 14       	cp	r11, r2
     b0a:	88 f4       	brcc	.+34     	; 0xb2e <__stack+0x22f>
     b0c:	28 0c       	add	r2, r8
     b0e:	92 2c       	mov	r9, r2
     b10:	9b 18       	sub	r9, r11
     b12:	0e c0       	rjmp	.+28     	; 0xb30 <__stack+0x231>
     b14:	b2 14       	cp	r11, r2
     b16:	60 f4       	brcc	.+24     	; 0xb30 <__stack+0x231>
     b18:	b6 01       	movw	r22, r12
     b1a:	80 e2       	ldi	r24, 0x20	; 32
     b1c:	90 e0       	ldi	r25, 0x00	; 0
     b1e:	0e 94 f6 08 	call	0x11ec	; 0x11ec <fputc>
     b22:	b3 94       	inc	r11
     b24:	f7 cf       	rjmp	.-18     	; 0xb14 <__stack+0x215>
     b26:	b2 14       	cp	r11, r2
     b28:	18 f4       	brcc	.+6      	; 0xb30 <__stack+0x231>
     b2a:	2b 18       	sub	r2, r11
     b2c:	02 c0       	rjmp	.+4      	; 0xb32 <__stack+0x233>
     b2e:	98 2c       	mov	r9, r8
     b30:	21 2c       	mov	r2, r1
     b32:	a4 fe       	sbrs	r10, 4
     b34:	10 c0       	rjmp	.+32     	; 0xb56 <__stack+0x257>
     b36:	b6 01       	movw	r22, r12
     b38:	80 e3       	ldi	r24, 0x30	; 48
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	0e 94 f6 08 	call	0x11ec	; 0x11ec <fputc>
     b40:	a2 fe       	sbrs	r10, 2
     b42:	17 c0       	rjmp	.+46     	; 0xb72 <__stack+0x273>
     b44:	a1 fc       	sbrc	r10, 1
     b46:	03 c0       	rjmp	.+6      	; 0xb4e <__stack+0x24f>
     b48:	88 e7       	ldi	r24, 0x78	; 120
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	02 c0       	rjmp	.+4      	; 0xb52 <__stack+0x253>
     b4e:	88 e5       	ldi	r24, 0x58	; 88
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	b6 01       	movw	r22, r12
     b54:	0c c0       	rjmp	.+24     	; 0xb6e <__stack+0x26f>
     b56:	8a 2d       	mov	r24, r10
     b58:	86 78       	andi	r24, 0x86	; 134
     b5a:	59 f0       	breq	.+22     	; 0xb72 <__stack+0x273>
     b5c:	a1 fe       	sbrs	r10, 1
     b5e:	02 c0       	rjmp	.+4      	; 0xb64 <__stack+0x265>
     b60:	8b e2       	ldi	r24, 0x2B	; 43
     b62:	01 c0       	rjmp	.+2      	; 0xb66 <__stack+0x267>
     b64:	80 e2       	ldi	r24, 0x20	; 32
     b66:	a7 fc       	sbrc	r10, 7
     b68:	8d e2       	ldi	r24, 0x2D	; 45
     b6a:	b6 01       	movw	r22, r12
     b6c:	90 e0       	ldi	r25, 0x00	; 0
     b6e:	0e 94 f6 08 	call	0x11ec	; 0x11ec <fputc>
     b72:	89 14       	cp	r8, r9
     b74:	38 f4       	brcc	.+14     	; 0xb84 <__stack+0x285>
     b76:	b6 01       	movw	r22, r12
     b78:	80 e3       	ldi	r24, 0x30	; 48
     b7a:	90 e0       	ldi	r25, 0x00	; 0
     b7c:	0e 94 f6 08 	call	0x11ec	; 0x11ec <fputc>
     b80:	9a 94       	dec	r9
     b82:	f7 cf       	rjmp	.-18     	; 0xb72 <__stack+0x273>
     b84:	8a 94       	dec	r8
     b86:	f3 01       	movw	r30, r6
     b88:	e8 0d       	add	r30, r8
     b8a:	f1 1d       	adc	r31, r1
     b8c:	80 81       	ld	r24, Z
     b8e:	b6 01       	movw	r22, r12
     b90:	90 e0       	ldi	r25, 0x00	; 0
     b92:	0e 94 f6 08 	call	0x11ec	; 0x11ec <fputc>
     b96:	81 10       	cpse	r8, r1
     b98:	f5 cf       	rjmp	.-22     	; 0xb84 <__stack+0x285>
     b9a:	22 20       	and	r2, r2
     b9c:	09 f4       	brne	.+2      	; 0xba0 <__stack+0x2a1>
     b9e:	42 ce       	rjmp	.-892    	; 0x824 <vfprintf+0x24>
     ba0:	b6 01       	movw	r22, r12
     ba2:	80 e2       	ldi	r24, 0x20	; 32
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	0e 94 f6 08 	call	0x11ec	; 0x11ec <fputc>
     baa:	2a 94       	dec	r2
     bac:	f6 cf       	rjmp	.-20     	; 0xb9a <__stack+0x29b>
     bae:	f6 01       	movw	r30, r12
     bb0:	86 81       	ldd	r24, Z+6	; 0x06
     bb2:	97 81       	ldd	r25, Z+7	; 0x07
     bb4:	02 c0       	rjmp	.+4      	; 0xbba <__stack+0x2bb>
     bb6:	8f ef       	ldi	r24, 0xFF	; 255
     bb8:	9f ef       	ldi	r25, 0xFF	; 255
     bba:	2b 96       	adiw	r28, 0x0b	; 11
     bbc:	e2 e1       	ldi	r30, 0x12	; 18
     bbe:	0c 94 c8 09 	jmp	0x1390	; 0x1390 <__epilogue_restores__>

00000bc2 <putval>:
     bc2:	20 fd       	sbrc	r18, 0
     bc4:	09 c0       	rjmp	.+18     	; 0xbd8 <putval+0x16>
     bc6:	fc 01       	movw	r30, r24
     bc8:	23 fd       	sbrc	r18, 3
     bca:	05 c0       	rjmp	.+10     	; 0xbd6 <putval+0x14>
     bcc:	22 ff       	sbrs	r18, 2
     bce:	02 c0       	rjmp	.+4      	; 0xbd4 <putval+0x12>
     bd0:	73 83       	std	Z+3, r23	; 0x03
     bd2:	62 83       	std	Z+2, r22	; 0x02
     bd4:	51 83       	std	Z+1, r21	; 0x01
     bd6:	40 83       	st	Z, r20
     bd8:	08 95       	ret

00000bda <mulacc>:
     bda:	44 fd       	sbrc	r20, 4
     bdc:	17 c0       	rjmp	.+46     	; 0xc0c <mulacc+0x32>
     bde:	46 fd       	sbrc	r20, 6
     be0:	17 c0       	rjmp	.+46     	; 0xc10 <mulacc+0x36>
     be2:	ab 01       	movw	r20, r22
     be4:	bc 01       	movw	r22, r24
     be6:	da 01       	movw	r26, r20
     be8:	fb 01       	movw	r30, r22
     bea:	aa 0f       	add	r26, r26
     bec:	bb 1f       	adc	r27, r27
     bee:	ee 1f       	adc	r30, r30
     bf0:	ff 1f       	adc	r31, r31
     bf2:	10 94       	com	r1
     bf4:	d1 f7       	brne	.-12     	; 0xbea <mulacc+0x10>
     bf6:	4a 0f       	add	r20, r26
     bf8:	5b 1f       	adc	r21, r27
     bfa:	6e 1f       	adc	r22, r30
     bfc:	7f 1f       	adc	r23, r31
     bfe:	cb 01       	movw	r24, r22
     c00:	ba 01       	movw	r22, r20
     c02:	66 0f       	add	r22, r22
     c04:	77 1f       	adc	r23, r23
     c06:	88 1f       	adc	r24, r24
     c08:	99 1f       	adc	r25, r25
     c0a:	09 c0       	rjmp	.+18     	; 0xc1e <mulacc+0x44>
     c0c:	33 e0       	ldi	r19, 0x03	; 3
     c0e:	01 c0       	rjmp	.+2      	; 0xc12 <mulacc+0x38>
     c10:	34 e0       	ldi	r19, 0x04	; 4
     c12:	66 0f       	add	r22, r22
     c14:	77 1f       	adc	r23, r23
     c16:	88 1f       	adc	r24, r24
     c18:	99 1f       	adc	r25, r25
     c1a:	31 50       	subi	r19, 0x01	; 1
     c1c:	d1 f7       	brne	.-12     	; 0xc12 <mulacc+0x38>
     c1e:	62 0f       	add	r22, r18
     c20:	71 1d       	adc	r23, r1
     c22:	81 1d       	adc	r24, r1
     c24:	91 1d       	adc	r25, r1
     c26:	08 95       	ret

00000c28 <skip_spaces>:
     c28:	0f 93       	push	r16
     c2a:	1f 93       	push	r17
     c2c:	cf 93       	push	r28
     c2e:	df 93       	push	r29
     c30:	8c 01       	movw	r16, r24
     c32:	c8 01       	movw	r24, r16
     c34:	0e 94 b8 08 	call	0x1170	; 0x1170 <fgetc>
     c38:	ec 01       	movw	r28, r24
     c3a:	97 fd       	sbrc	r25, 7
     c3c:	08 c0       	rjmp	.+16     	; 0xc4e <skip_spaces+0x26>
     c3e:	0e 94 8e 08 	call	0x111c	; 0x111c <isspace>
     c42:	89 2b       	or	r24, r25
     c44:	b1 f7       	brne	.-20     	; 0xc32 <skip_spaces+0xa>
     c46:	b8 01       	movw	r22, r16
     c48:	ce 01       	movw	r24, r28
     c4a:	0e 94 32 09 	call	0x1264	; 0x1264 <ungetc>
     c4e:	ce 01       	movw	r24, r28
     c50:	df 91       	pop	r29
     c52:	cf 91       	pop	r28
     c54:	1f 91       	pop	r17
     c56:	0f 91       	pop	r16
     c58:	08 95       	ret

00000c5a <conv_int>:
     c5a:	8f 92       	push	r8
     c5c:	9f 92       	push	r9
     c5e:	af 92       	push	r10
     c60:	bf 92       	push	r11
     c62:	ef 92       	push	r14
     c64:	ff 92       	push	r15
     c66:	0f 93       	push	r16
     c68:	1f 93       	push	r17
     c6a:	cf 93       	push	r28
     c6c:	df 93       	push	r29
     c6e:	8c 01       	movw	r16, r24
     c70:	d6 2f       	mov	r29, r22
     c72:	7a 01       	movw	r14, r20
     c74:	b2 2e       	mov	r11, r18
     c76:	0e 94 b8 08 	call	0x1170	; 0x1170 <fgetc>
     c7a:	9c 01       	movw	r18, r24
     c7c:	33 27       	eor	r19, r19
     c7e:	2b 32       	cpi	r18, 0x2B	; 43
     c80:	31 05       	cpc	r19, r1
     c82:	31 f0       	breq	.+12     	; 0xc90 <conv_int+0x36>
     c84:	2d 32       	cpi	r18, 0x2D	; 45
     c86:	31 05       	cpc	r19, r1
     c88:	61 f4       	brne	.+24     	; 0xca2 <conv_int+0x48>
     c8a:	8b 2d       	mov	r24, r11
     c8c:	80 68       	ori	r24, 0x80	; 128
     c8e:	b8 2e       	mov	r11, r24
     c90:	d1 50       	subi	r29, 0x01	; 1
     c92:	11 f4       	brne	.+4      	; 0xc98 <conv_int+0x3e>
     c94:	80 e0       	ldi	r24, 0x00	; 0
     c96:	68 c0       	rjmp	.+208    	; 0xd68 <conv_int+0x10e>
     c98:	c8 01       	movw	r24, r16
     c9a:	0e 94 b8 08 	call	0x1170	; 0x1170 <fgetc>
     c9e:	97 fd       	sbrc	r25, 7
     ca0:	f9 cf       	rjmp	.-14     	; 0xc94 <conv_int+0x3a>
     ca2:	cb 2d       	mov	r28, r11
     ca4:	cd 7f       	andi	r28, 0xFD	; 253
     ca6:	2b 2d       	mov	r18, r11
     ca8:	20 73       	andi	r18, 0x30	; 48
     caa:	09 f5       	brne	.+66     	; 0xcee <conv_int+0x94>
     cac:	80 33       	cpi	r24, 0x30	; 48
     cae:	f9 f4       	brne	.+62     	; 0xcee <conv_int+0x94>
     cb0:	aa 24       	eor	r10, r10
     cb2:	aa 94       	dec	r10
     cb4:	ad 0e       	add	r10, r29
     cb6:	09 f4       	brne	.+2      	; 0xcba <conv_int+0x60>
     cb8:	43 c0       	rjmp	.+134    	; 0xd40 <conv_int+0xe6>
     cba:	c8 01       	movw	r24, r16
     cbc:	0e 94 b8 08 	call	0x1170	; 0x1170 <fgetc>
     cc0:	97 fd       	sbrc	r25, 7
     cc2:	3e c0       	rjmp	.+124    	; 0xd40 <conv_int+0xe6>
     cc4:	9c 01       	movw	r18, r24
     cc6:	2f 7d       	andi	r18, 0xDF	; 223
     cc8:	33 27       	eor	r19, r19
     cca:	28 35       	cpi	r18, 0x58	; 88
     ccc:	31 05       	cpc	r19, r1
     cce:	49 f4       	brne	.+18     	; 0xce2 <conv_int+0x88>
     cd0:	c2 64       	ori	r28, 0x42	; 66
     cd2:	d2 50       	subi	r29, 0x02	; 2
     cd4:	a9 f1       	breq	.+106    	; 0xd40 <conv_int+0xe6>
     cd6:	c8 01       	movw	r24, r16
     cd8:	0e 94 b8 08 	call	0x1170	; 0x1170 <fgetc>
     cdc:	97 ff       	sbrs	r25, 7
     cde:	07 c0       	rjmp	.+14     	; 0xcee <conv_int+0x94>
     ce0:	2f c0       	rjmp	.+94     	; 0xd40 <conv_int+0xe6>
     ce2:	b6 fe       	sbrs	r11, 6
     ce4:	02 c0       	rjmp	.+4      	; 0xcea <conv_int+0x90>
     ce6:	c2 60       	ori	r28, 0x02	; 2
     ce8:	01 c0       	rjmp	.+2      	; 0xcec <conv_int+0x92>
     cea:	c2 61       	ori	r28, 0x12	; 18
     cec:	da 2d       	mov	r29, r10
     cee:	81 2c       	mov	r8, r1
     cf0:	91 2c       	mov	r9, r1
     cf2:	54 01       	movw	r10, r8
     cf4:	20 ed       	ldi	r18, 0xD0	; 208
     cf6:	28 0f       	add	r18, r24
     cf8:	28 30       	cpi	r18, 0x08	; 8
     cfa:	80 f0       	brcs	.+32     	; 0xd1c <conv_int+0xc2>
     cfc:	c4 ff       	sbrs	r28, 4
     cfe:	04 c0       	rjmp	.+8      	; 0xd08 <conv_int+0xae>
     d00:	b8 01       	movw	r22, r16
     d02:	0e 94 32 09 	call	0x1264	; 0x1264 <ungetc>
     d06:	19 c0       	rjmp	.+50     	; 0xd3a <conv_int+0xe0>
     d08:	2a 30       	cpi	r18, 0x0A	; 10
     d0a:	40 f0       	brcs	.+16     	; 0xd1c <conv_int+0xc2>
     d0c:	c6 ff       	sbrs	r28, 6
     d0e:	f8 cf       	rjmp	.-16     	; 0xd00 <conv_int+0xa6>
     d10:	2f 7d       	andi	r18, 0xDF	; 223
     d12:	3f ee       	ldi	r19, 0xEF	; 239
     d14:	32 0f       	add	r19, r18
     d16:	36 30       	cpi	r19, 0x06	; 6
     d18:	98 f7       	brcc	.-26     	; 0xd00 <conv_int+0xa6>
     d1a:	27 50       	subi	r18, 0x07	; 7
     d1c:	4c 2f       	mov	r20, r28
     d1e:	c5 01       	movw	r24, r10
     d20:	b4 01       	movw	r22, r8
     d22:	0e 94 ed 05 	call	0xbda	; 0xbda <mulacc>
     d26:	4b 01       	movw	r8, r22
     d28:	5c 01       	movw	r10, r24
     d2a:	c2 60       	ori	r28, 0x02	; 2
     d2c:	d1 50       	subi	r29, 0x01	; 1
     d2e:	59 f0       	breq	.+22     	; 0xd46 <conv_int+0xec>
     d30:	c8 01       	movw	r24, r16
     d32:	0e 94 b8 08 	call	0x1170	; 0x1170 <fgetc>
     d36:	97 ff       	sbrs	r25, 7
     d38:	dd cf       	rjmp	.-70     	; 0xcf4 <conv_int+0x9a>
     d3a:	c1 fd       	sbrc	r28, 1
     d3c:	04 c0       	rjmp	.+8      	; 0xd46 <conv_int+0xec>
     d3e:	aa cf       	rjmp	.-172    	; 0xc94 <conv_int+0x3a>
     d40:	81 2c       	mov	r8, r1
     d42:	91 2c       	mov	r9, r1
     d44:	54 01       	movw	r10, r8
     d46:	c7 ff       	sbrs	r28, 7
     d48:	08 c0       	rjmp	.+16     	; 0xd5a <conv_int+0x100>
     d4a:	b0 94       	com	r11
     d4c:	a0 94       	com	r10
     d4e:	90 94       	com	r9
     d50:	80 94       	com	r8
     d52:	81 1c       	adc	r8, r1
     d54:	91 1c       	adc	r9, r1
     d56:	a1 1c       	adc	r10, r1
     d58:	b1 1c       	adc	r11, r1
     d5a:	2c 2f       	mov	r18, r28
     d5c:	b5 01       	movw	r22, r10
     d5e:	a4 01       	movw	r20, r8
     d60:	c7 01       	movw	r24, r14
     d62:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <putval>
     d66:	81 e0       	ldi	r24, 0x01	; 1
     d68:	df 91       	pop	r29
     d6a:	cf 91       	pop	r28
     d6c:	1f 91       	pop	r17
     d6e:	0f 91       	pop	r16
     d70:	ff 90       	pop	r15
     d72:	ef 90       	pop	r14
     d74:	bf 90       	pop	r11
     d76:	af 90       	pop	r10
     d78:	9f 90       	pop	r9
     d7a:	8f 90       	pop	r8
     d7c:	08 95       	ret

00000d7e <conv_brk>:
     d7e:	a0 e2       	ldi	r26, 0x20	; 32
     d80:	b0 e0       	ldi	r27, 0x00	; 0
     d82:	e5 ec       	ldi	r30, 0xC5	; 197
     d84:	f6 e0       	ldi	r31, 0x06	; 6
     d86:	0c 94 af 09 	jmp	0x135e	; 0x135e <__prologue_saves__+0x6>
     d8a:	5c 01       	movw	r10, r24
     d8c:	96 2e       	mov	r9, r22
     d8e:	7a 01       	movw	r14, r20
     d90:	f9 01       	movw	r30, r18
     d92:	8e 01       	movw	r16, r28
     d94:	0f 5f       	subi	r16, 0xFF	; 255
     d96:	1f 4f       	sbci	r17, 0xFF	; 255
     d98:	68 01       	movw	r12, r16
     d9a:	80 e2       	ldi	r24, 0x20	; 32
     d9c:	d8 01       	movw	r26, r16
     d9e:	1d 92       	st	X+, r1
     da0:	8a 95       	dec	r24
     da2:	e9 f7       	brne	.-6      	; 0xd9e <conv_brk+0x20>
     da4:	d5 01       	movw	r26, r10
     da6:	13 96       	adiw	r26, 0x03	; 3
     da8:	8c 90       	ld	r8, X
     daa:	80 e0       	ldi	r24, 0x00	; 0
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	61 2c       	mov	r6, r1
     db0:	71 2c       	mov	r7, r1
     db2:	30 e0       	ldi	r19, 0x00	; 0
     db4:	61 e0       	ldi	r22, 0x01	; 1
     db6:	70 e0       	ldi	r23, 0x00	; 0
     db8:	83 fc       	sbrc	r8, 3
     dba:	25 91       	lpm	r18, Z+
     dbc:	83 fe       	sbrs	r8, 3
     dbe:	21 91       	ld	r18, Z+
     dc0:	8f 01       	movw	r16, r30
     dc2:	52 2e       	mov	r5, r18
     dc4:	21 11       	cpse	r18, r1
     dc6:	03 c0       	rjmp	.+6      	; 0xdce <conv_brk+0x50>
     dc8:	80 e0       	ldi	r24, 0x00	; 0
     dca:	90 e0       	ldi	r25, 0x00	; 0
     dcc:	92 c0       	rjmp	.+292    	; 0xef2 <conv_brk+0x174>
     dce:	2e 35       	cpi	r18, 0x5E	; 94
     dd0:	11 f4       	brne	.+4      	; 0xdd6 <conv_brk+0x58>
     dd2:	00 97       	sbiw	r24, 0x00	; 0
     dd4:	51 f1       	breq	.+84     	; 0xe2a <conv_brk+0xac>
     dd6:	43 2f       	mov	r20, r19
     dd8:	50 e0       	ldi	r21, 0x00	; 0
     dda:	48 17       	cp	r20, r24
     ddc:	59 07       	cpc	r21, r25
     dde:	3c f4       	brge	.+14     	; 0xdee <conv_brk+0x70>
     de0:	2d 35       	cpi	r18, 0x5D	; 93
     de2:	59 f1       	breq	.+86     	; 0xe3a <conv_brk+0xbc>
     de4:	2d 32       	cpi	r18, 0x2D	; 45
     de6:	19 f4       	brne	.+6      	; 0xdee <conv_brk+0x70>
     de8:	77 20       	and	r7, r7
     dea:	09 f1       	breq	.+66     	; 0xe2e <conv_brk+0xb0>
     dec:	03 c0       	rjmp	.+6      	; 0xdf4 <conv_brk+0x76>
     dee:	77 20       	and	r7, r7
     df0:	09 f4       	brne	.+2      	; 0xdf4 <conv_brk+0x76>
     df2:	6a c0       	rjmp	.+212    	; 0xec8 <conv_brk+0x14a>
     df4:	45 2d       	mov	r20, r5
     df6:	46 95       	lsr	r20
     df8:	46 95       	lsr	r20
     dfa:	46 95       	lsr	r20
     dfc:	d6 01       	movw	r26, r12
     dfe:	a4 0f       	add	r26, r20
     e00:	b1 1d       	adc	r27, r1
     e02:	45 2d       	mov	r20, r5
     e04:	47 70       	andi	r20, 0x07	; 7
     e06:	8b 01       	movw	r16, r22
     e08:	02 c0       	rjmp	.+4      	; 0xe0e <conv_brk+0x90>
     e0a:	00 0f       	add	r16, r16
     e0c:	11 1f       	adc	r17, r17
     e0e:	4a 95       	dec	r20
     e10:	e2 f7       	brpl	.-8      	; 0xe0a <conv_brk+0x8c>
     e12:	a8 01       	movw	r20, r16
     e14:	5c 91       	ld	r21, X
     e16:	45 2b       	or	r20, r21
     e18:	4c 93       	st	X, r20
     e1a:	65 14       	cp	r6, r5
     e1c:	59 f0       	breq	.+22     	; 0xe34 <conv_brk+0xb6>
     e1e:	56 14       	cp	r5, r6
     e20:	10 f4       	brcc	.+4      	; 0xe26 <conv_brk+0xa8>
     e22:	53 94       	inc	r5
     e24:	e7 cf       	rjmp	.-50     	; 0xdf4 <conv_brk+0x76>
     e26:	5a 94       	dec	r5
     e28:	e5 cf       	rjmp	.-54     	; 0xdf4 <conv_brk+0x76>
     e2a:	31 e0       	ldi	r19, 0x01	; 1
     e2c:	04 c0       	rjmp	.+8      	; 0xe36 <conv_brk+0xb8>
     e2e:	77 24       	eor	r7, r7
     e30:	73 94       	inc	r7
     e32:	01 c0       	rjmp	.+2      	; 0xe36 <conv_brk+0xb8>
     e34:	71 2c       	mov	r7, r1
     e36:	01 96       	adiw	r24, 0x01	; 1
     e38:	bf cf       	rjmp	.-130    	; 0xdb8 <conv_brk+0x3a>
     e3a:	77 20       	and	r7, r7
     e3c:	19 f0       	breq	.+6      	; 0xe44 <conv_brk+0xc6>
     e3e:	8e 81       	ldd	r24, Y+6	; 0x06
     e40:	80 62       	ori	r24, 0x20	; 32
     e42:	8e 83       	std	Y+6, r24	; 0x06
     e44:	31 11       	cpse	r19, r1
     e46:	03 c0       	rjmp	.+6      	; 0xe4e <conv_brk+0xd0>
     e48:	88 24       	eor	r8, r8
     e4a:	83 94       	inc	r8
     e4c:	17 c0       	rjmp	.+46     	; 0xe7c <conv_brk+0xfe>
     e4e:	f6 01       	movw	r30, r12
     e50:	9e 01       	movw	r18, r28
     e52:	2f 5d       	subi	r18, 0xDF	; 223
     e54:	3f 4f       	sbci	r19, 0xFF	; 255
     e56:	80 81       	ld	r24, Z
     e58:	80 95       	com	r24
     e5a:	81 93       	st	Z+, r24
     e5c:	2e 17       	cp	r18, r30
     e5e:	3f 07       	cpc	r19, r31
     e60:	d1 f7       	brne	.-12     	; 0xe56 <conv_brk+0xd8>
     e62:	f2 cf       	rjmp	.-28     	; 0xe48 <conv_brk+0xca>
     e64:	e1 14       	cp	r14, r1
     e66:	f1 04       	cpc	r15, r1
     e68:	29 f0       	breq	.+10     	; 0xe74 <conv_brk+0xf6>
     e6a:	d7 01       	movw	r26, r14
     e6c:	8c 93       	st	X, r24
     e6e:	f7 01       	movw	r30, r14
     e70:	31 96       	adiw	r30, 0x01	; 1
     e72:	7f 01       	movw	r14, r30
     e74:	9a 94       	dec	r9
     e76:	81 2c       	mov	r8, r1
     e78:	99 20       	and	r9, r9
     e7a:	f9 f0       	breq	.+62     	; 0xeba <conv_brk+0x13c>
     e7c:	c5 01       	movw	r24, r10
     e7e:	0e 94 b8 08 	call	0x1170	; 0x1170 <fgetc>
     e82:	97 fd       	sbrc	r25, 7
     e84:	18 c0       	rjmp	.+48     	; 0xeb6 <conv_brk+0x138>
     e86:	fc 01       	movw	r30, r24
     e88:	ff 27       	eor	r31, r31
     e8a:	23 e0       	ldi	r18, 0x03	; 3
     e8c:	f5 95       	asr	r31
     e8e:	e7 95       	ror	r30
     e90:	2a 95       	dec	r18
     e92:	e1 f7       	brne	.-8      	; 0xe8c <conv_brk+0x10e>
     e94:	ec 0d       	add	r30, r12
     e96:	fd 1d       	adc	r31, r13
     e98:	20 81       	ld	r18, Z
     e9a:	30 e0       	ldi	r19, 0x00	; 0
     e9c:	ac 01       	movw	r20, r24
     e9e:	47 70       	andi	r20, 0x07	; 7
     ea0:	55 27       	eor	r21, r21
     ea2:	02 c0       	rjmp	.+4      	; 0xea8 <conv_brk+0x12a>
     ea4:	35 95       	asr	r19
     ea6:	27 95       	ror	r18
     ea8:	4a 95       	dec	r20
     eaa:	e2 f7       	brpl	.-8      	; 0xea4 <conv_brk+0x126>
     eac:	20 fd       	sbrc	r18, 0
     eae:	da cf       	rjmp	.-76     	; 0xe64 <conv_brk+0xe6>
     eb0:	b5 01       	movw	r22, r10
     eb2:	0e 94 32 09 	call	0x1264	; 0x1264 <ungetc>
     eb6:	81 10       	cpse	r8, r1
     eb8:	87 cf       	rjmp	.-242    	; 0xdc8 <conv_brk+0x4a>
     eba:	e1 14       	cp	r14, r1
     ebc:	f1 04       	cpc	r15, r1
     ebe:	11 f0       	breq	.+4      	; 0xec4 <conv_brk+0x146>
     ec0:	d7 01       	movw	r26, r14
     ec2:	1c 92       	st	X, r1
     ec4:	c8 01       	movw	r24, r16
     ec6:	15 c0       	rjmp	.+42     	; 0xef2 <conv_brk+0x174>
     ec8:	42 2f       	mov	r20, r18
     eca:	46 95       	lsr	r20
     ecc:	46 95       	lsr	r20
     ece:	46 95       	lsr	r20
     ed0:	d6 01       	movw	r26, r12
     ed2:	a4 0f       	add	r26, r20
     ed4:	b1 1d       	adc	r27, r1
     ed6:	42 2f       	mov	r20, r18
     ed8:	47 70       	andi	r20, 0x07	; 7
     eda:	8b 01       	movw	r16, r22
     edc:	02 c0       	rjmp	.+4      	; 0xee2 <conv_brk+0x164>
     ede:	00 0f       	add	r16, r16
     ee0:	11 1f       	adc	r17, r17
     ee2:	4a 95       	dec	r20
     ee4:	e2 f7       	brpl	.-8      	; 0xede <conv_brk+0x160>
     ee6:	a8 01       	movw	r20, r16
     ee8:	5c 91       	ld	r21, X
     eea:	45 2b       	or	r20, r21
     eec:	4c 93       	st	X, r20
     eee:	62 2e       	mov	r6, r18
     ef0:	a2 cf       	rjmp	.-188    	; 0xe36 <conv_brk+0xb8>
     ef2:	a0 96       	adiw	r28, 0x20	; 32
     ef4:	ef e0       	ldi	r30, 0x0F	; 15
     ef6:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <__epilogue_restores__+0x6>

00000efa <vfscanf>:
     efa:	a0 e0       	ldi	r26, 0x00	; 0
     efc:	b0 e0       	ldi	r27, 0x00	; 0
     efe:	e3 e8       	ldi	r30, 0x83	; 131
     f00:	f7 e0       	ldi	r31, 0x07	; 7
     f02:	0c 94 af 09 	jmp	0x135e	; 0x135e <__prologue_saves__+0x6>
     f06:	6c 01       	movw	r12, r24
     f08:	eb 01       	movw	r28, r22
     f0a:	5a 01       	movw	r10, r20
     f0c:	fc 01       	movw	r30, r24
     f0e:	17 82       	std	Z+7, r1	; 0x07
     f10:	16 82       	std	Z+6, r1	; 0x06
     f12:	51 2c       	mov	r5, r1
     f14:	f6 01       	movw	r30, r12
     f16:	e3 80       	ldd	r14, Z+3	; 0x03
     f18:	fe 01       	movw	r30, r28
     f1a:	e3 fc       	sbrc	r14, 3
     f1c:	85 91       	lpm	r24, Z+
     f1e:	e3 fe       	sbrs	r14, 3
     f20:	81 91       	ld	r24, Z+
     f22:	18 2f       	mov	r17, r24
     f24:	ef 01       	movw	r28, r30
     f26:	88 23       	and	r24, r24
     f28:	09 f4       	brne	.+2      	; 0xf2c <vfscanf+0x32>
     f2a:	ee c0       	rjmp	.+476    	; 0x1108 <vfscanf+0x20e>
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	0e 94 8e 08 	call	0x111c	; 0x111c <isspace>
     f32:	89 2b       	or	r24, r25
     f34:	21 f0       	breq	.+8      	; 0xf3e <vfscanf+0x44>
     f36:	c6 01       	movw	r24, r12
     f38:	0e 94 14 06 	call	0xc28	; 0xc28 <skip_spaces>
     f3c:	eb cf       	rjmp	.-42     	; 0xf14 <vfscanf+0x1a>
     f3e:	15 32       	cpi	r17, 0x25	; 37
     f40:	41 f4       	brne	.+16     	; 0xf52 <vfscanf+0x58>
     f42:	fe 01       	movw	r30, r28
     f44:	e3 fc       	sbrc	r14, 3
     f46:	15 91       	lpm	r17, Z+
     f48:	e3 fe       	sbrs	r14, 3
     f4a:	11 91       	ld	r17, Z+
     f4c:	ef 01       	movw	r28, r30
     f4e:	15 32       	cpi	r17, 0x25	; 37
     f50:	81 f4       	brne	.+32     	; 0xf72 <vfscanf+0x78>
     f52:	c6 01       	movw	r24, r12
     f54:	0e 94 b8 08 	call	0x1170	; 0x1170 <fgetc>
     f58:	97 fd       	sbrc	r25, 7
     f5a:	d4 c0       	rjmp	.+424    	; 0x1104 <vfscanf+0x20a>
     f5c:	41 2f       	mov	r20, r17
     f5e:	50 e0       	ldi	r21, 0x00	; 0
     f60:	9c 01       	movw	r18, r24
     f62:	33 27       	eor	r19, r19
     f64:	24 17       	cp	r18, r20
     f66:	35 07       	cpc	r19, r21
     f68:	a9 f2       	breq	.-86     	; 0xf14 <vfscanf+0x1a>
     f6a:	b6 01       	movw	r22, r12
     f6c:	0e 94 32 09 	call	0x1264	; 0x1264 <ungetc>
     f70:	cb c0       	rjmp	.+406    	; 0x1108 <vfscanf+0x20e>
     f72:	1a 32       	cpi	r17, 0x2A	; 42
     f74:	39 f4       	brne	.+14     	; 0xf84 <vfscanf+0x8a>
     f76:	e3 fc       	sbrc	r14, 3
     f78:	15 91       	lpm	r17, Z+
     f7a:	e3 fe       	sbrs	r14, 3
     f7c:	11 91       	ld	r17, Z+
     f7e:	ef 01       	movw	r28, r30
     f80:	01 e0       	ldi	r16, 0x01	; 1
     f82:	01 c0       	rjmp	.+2      	; 0xf86 <vfscanf+0x8c>
     f84:	00 e0       	ldi	r16, 0x00	; 0
     f86:	f1 2c       	mov	r15, r1
     f88:	20 ed       	ldi	r18, 0xD0	; 208
     f8a:	21 0f       	add	r18, r17
     f8c:	2a 30       	cpi	r18, 0x0A	; 10
     f8e:	80 f4       	brcc	.+32     	; 0xfb0 <vfscanf+0xb6>
     f90:	02 60       	ori	r16, 0x02	; 2
     f92:	6f 2d       	mov	r22, r15
     f94:	70 e0       	ldi	r23, 0x00	; 0
     f96:	80 e0       	ldi	r24, 0x00	; 0
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	40 e2       	ldi	r20, 0x20	; 32
     f9c:	0e 94 ed 05 	call	0xbda	; 0xbda <mulacc>
     fa0:	f6 2e       	mov	r15, r22
     fa2:	fe 01       	movw	r30, r28
     fa4:	e3 fc       	sbrc	r14, 3
     fa6:	15 91       	lpm	r17, Z+
     fa8:	e3 fe       	sbrs	r14, 3
     faa:	11 91       	ld	r17, Z+
     fac:	ef 01       	movw	r28, r30
     fae:	ec cf       	rjmp	.-40     	; 0xf88 <vfscanf+0x8e>
     fb0:	01 ff       	sbrs	r16, 1
     fb2:	03 c0       	rjmp	.+6      	; 0xfba <vfscanf+0xc0>
     fb4:	f1 10       	cpse	r15, r1
     fb6:	03 c0       	rjmp	.+6      	; 0xfbe <vfscanf+0xc4>
     fb8:	a7 c0       	rjmp	.+334    	; 0x1108 <vfscanf+0x20e>
     fba:	ff 24       	eor	r15, r15
     fbc:	fa 94       	dec	r15
     fbe:	18 36       	cpi	r17, 0x68	; 104
     fc0:	19 f0       	breq	.+6      	; 0xfc8 <vfscanf+0xce>
     fc2:	1c 36       	cpi	r17, 0x6C	; 108
     fc4:	51 f0       	breq	.+20     	; 0xfda <vfscanf+0xe0>
     fc6:	10 c0       	rjmp	.+32     	; 0xfe8 <vfscanf+0xee>
     fc8:	fe 01       	movw	r30, r28
     fca:	e3 fc       	sbrc	r14, 3
     fcc:	15 91       	lpm	r17, Z+
     fce:	e3 fe       	sbrs	r14, 3
     fd0:	11 91       	ld	r17, Z+
     fd2:	ef 01       	movw	r28, r30
     fd4:	18 36       	cpi	r17, 0x68	; 104
     fd6:	41 f4       	brne	.+16     	; 0xfe8 <vfscanf+0xee>
     fd8:	08 60       	ori	r16, 0x08	; 8
     fda:	04 60       	ori	r16, 0x04	; 4
     fdc:	fe 01       	movw	r30, r28
     fde:	e3 fc       	sbrc	r14, 3
     fe0:	15 91       	lpm	r17, Z+
     fe2:	e3 fe       	sbrs	r14, 3
     fe4:	11 91       	ld	r17, Z+
     fe6:	ef 01       	movw	r28, r30
     fe8:	11 23       	and	r17, r17
     fea:	09 f4       	brne	.+2      	; 0xfee <vfscanf+0xf4>
     fec:	8d c0       	rjmp	.+282    	; 0x1108 <vfscanf+0x20e>
     fee:	61 2f       	mov	r22, r17
     ff0:	70 e0       	ldi	r23, 0x00	; 0
     ff2:	88 e6       	ldi	r24, 0x68	; 104
     ff4:	90 e0       	ldi	r25, 0x00	; 0
     ff6:	0e 94 97 08 	call	0x112e	; 0x112e <strchr_P>
     ffa:	89 2b       	or	r24, r25
     ffc:	09 f4       	brne	.+2      	; 0x1000 <vfscanf+0x106>
     ffe:	84 c0       	rjmp	.+264    	; 0x1108 <vfscanf+0x20e>
    1000:	00 fd       	sbrc	r16, 0
    1002:	07 c0       	rjmp	.+14     	; 0x1012 <vfscanf+0x118>
    1004:	f5 01       	movw	r30, r10
    1006:	80 80       	ld	r8, Z
    1008:	91 80       	ldd	r9, Z+1	; 0x01
    100a:	c5 01       	movw	r24, r10
    100c:	02 96       	adiw	r24, 0x02	; 2
    100e:	5c 01       	movw	r10, r24
    1010:	02 c0       	rjmp	.+4      	; 0x1016 <vfscanf+0x11c>
    1012:	81 2c       	mov	r8, r1
    1014:	91 2c       	mov	r9, r1
    1016:	1e 36       	cpi	r17, 0x6E	; 110
    1018:	51 f4       	brne	.+20     	; 0x102e <vfscanf+0x134>
    101a:	f6 01       	movw	r30, r12
    101c:	46 81       	ldd	r20, Z+6	; 0x06
    101e:	57 81       	ldd	r21, Z+7	; 0x07
    1020:	60 e0       	ldi	r22, 0x00	; 0
    1022:	70 e0       	ldi	r23, 0x00	; 0
    1024:	20 2f       	mov	r18, r16
    1026:	c4 01       	movw	r24, r8
    1028:	0e 94 e1 05 	call	0xbc2	; 0xbc2 <putval>
    102c:	73 cf       	rjmp	.-282    	; 0xf14 <vfscanf+0x1a>
    102e:	13 36       	cpi	r17, 0x63	; 99
    1030:	a9 f4       	brne	.+42     	; 0x105c <vfscanf+0x162>
    1032:	01 fd       	sbrc	r16, 1
    1034:	02 c0       	rjmp	.+4      	; 0x103a <vfscanf+0x140>
    1036:	ff 24       	eor	r15, r15
    1038:	f3 94       	inc	r15
    103a:	c6 01       	movw	r24, r12
    103c:	0e 94 b8 08 	call	0x1170	; 0x1170 <fgetc>
    1040:	97 fd       	sbrc	r25, 7
    1042:	60 c0       	rjmp	.+192    	; 0x1104 <vfscanf+0x20a>
    1044:	81 14       	cp	r8, r1
    1046:	91 04       	cpc	r9, r1
    1048:	29 f0       	breq	.+10     	; 0x1054 <vfscanf+0x15a>
    104a:	f4 01       	movw	r30, r8
    104c:	80 83       	st	Z, r24
    104e:	c4 01       	movw	r24, r8
    1050:	01 96       	adiw	r24, 0x01	; 1
    1052:	4c 01       	movw	r8, r24
    1054:	fa 94       	dec	r15
    1056:	f1 10       	cpse	r15, r1
    1058:	f0 cf       	rjmp	.-32     	; 0x103a <vfscanf+0x140>
    105a:	50 c0       	rjmp	.+160    	; 0x10fc <vfscanf+0x202>
    105c:	1b 35       	cpi	r17, 0x5B	; 91
    105e:	59 f4       	brne	.+22     	; 0x1076 <vfscanf+0x17c>
    1060:	9e 01       	movw	r18, r28
    1062:	a4 01       	movw	r20, r8
    1064:	6f 2d       	mov	r22, r15
    1066:	c6 01       	movw	r24, r12
    1068:	0e 94 bf 06 	call	0xd7e	; 0xd7e <conv_brk>
    106c:	ec 01       	movw	r28, r24
    106e:	89 2b       	or	r24, r25
    1070:	09 f0       	breq	.+2      	; 0x1074 <vfscanf+0x17a>
    1072:	44 c0       	rjmp	.+136    	; 0x10fc <vfscanf+0x202>
    1074:	3e c0       	rjmp	.+124    	; 0x10f2 <vfscanf+0x1f8>
    1076:	c6 01       	movw	r24, r12
    1078:	0e 94 14 06 	call	0xc28	; 0xc28 <skip_spaces>
    107c:	97 fd       	sbrc	r25, 7
    107e:	42 c0       	rjmp	.+132    	; 0x1104 <vfscanf+0x20a>
    1080:	1f 36       	cpi	r17, 0x6F	; 111
    1082:	61 f1       	breq	.+88     	; 0x10dc <vfscanf+0x1e2>
    1084:	28 f4       	brcc	.+10     	; 0x1090 <vfscanf+0x196>
    1086:	14 36       	cpi	r17, 0x64	; 100
    1088:	39 f1       	breq	.+78     	; 0x10d8 <vfscanf+0x1de>
    108a:	19 36       	cpi	r17, 0x69	; 105
    108c:	51 f1       	breq	.+84     	; 0x10e2 <vfscanf+0x1e8>
    108e:	28 c0       	rjmp	.+80     	; 0x10e0 <vfscanf+0x1e6>
    1090:	13 37       	cpi	r17, 0x73	; 115
    1092:	71 f0       	breq	.+28     	; 0x10b0 <vfscanf+0x1b6>
    1094:	15 37       	cpi	r17, 0x75	; 117
    1096:	01 f1       	breq	.+64     	; 0x10d8 <vfscanf+0x1de>
    1098:	23 c0       	rjmp	.+70     	; 0x10e0 <vfscanf+0x1e6>
    109a:	81 14       	cp	r8, r1
    109c:	91 04       	cpc	r9, r1
    109e:	29 f0       	breq	.+10     	; 0x10aa <vfscanf+0x1b0>
    10a0:	f4 01       	movw	r30, r8
    10a2:	60 82       	st	Z, r6
    10a4:	c4 01       	movw	r24, r8
    10a6:	01 96       	adiw	r24, 0x01	; 1
    10a8:	4c 01       	movw	r8, r24
    10aa:	fa 94       	dec	r15
    10ac:	ff 20       	and	r15, r15
    10ae:	71 f0       	breq	.+28     	; 0x10cc <vfscanf+0x1d2>
    10b0:	c6 01       	movw	r24, r12
    10b2:	0e 94 b8 08 	call	0x1170	; 0x1170 <fgetc>
    10b6:	3c 01       	movw	r6, r24
    10b8:	97 fd       	sbrc	r25, 7
    10ba:	08 c0       	rjmp	.+16     	; 0x10cc <vfscanf+0x1d2>
    10bc:	0e 94 8e 08 	call	0x111c	; 0x111c <isspace>
    10c0:	89 2b       	or	r24, r25
    10c2:	59 f3       	breq	.-42     	; 0x109a <vfscanf+0x1a0>
    10c4:	b6 01       	movw	r22, r12
    10c6:	c3 01       	movw	r24, r6
    10c8:	0e 94 32 09 	call	0x1264	; 0x1264 <ungetc>
    10cc:	81 14       	cp	r8, r1
    10ce:	91 04       	cpc	r9, r1
    10d0:	a9 f0       	breq	.+42     	; 0x10fc <vfscanf+0x202>
    10d2:	f4 01       	movw	r30, r8
    10d4:	10 82       	st	Z, r1
    10d6:	12 c0       	rjmp	.+36     	; 0x10fc <vfscanf+0x202>
    10d8:	00 62       	ori	r16, 0x20	; 32
    10da:	03 c0       	rjmp	.+6      	; 0x10e2 <vfscanf+0x1e8>
    10dc:	00 61       	ori	r16, 0x10	; 16
    10de:	01 c0       	rjmp	.+2      	; 0x10e2 <vfscanf+0x1e8>
    10e0:	00 64       	ori	r16, 0x40	; 64
    10e2:	20 2f       	mov	r18, r16
    10e4:	a4 01       	movw	r20, r8
    10e6:	6f 2d       	mov	r22, r15
    10e8:	c6 01       	movw	r24, r12
    10ea:	0e 94 2d 06 	call	0xc5a	; 0xc5a <conv_int>
    10ee:	81 11       	cpse	r24, r1
    10f0:	05 c0       	rjmp	.+10     	; 0x10fc <vfscanf+0x202>
    10f2:	f6 01       	movw	r30, r12
    10f4:	83 81       	ldd	r24, Z+3	; 0x03
    10f6:	80 73       	andi	r24, 0x30	; 48
    10f8:	29 f4       	brne	.+10     	; 0x1104 <vfscanf+0x20a>
    10fa:	06 c0       	rjmp	.+12     	; 0x1108 <vfscanf+0x20e>
    10fc:	00 fd       	sbrc	r16, 0
    10fe:	0a cf       	rjmp	.-492    	; 0xf14 <vfscanf+0x1a>
    1100:	53 94       	inc	r5
    1102:	08 cf       	rjmp	.-496    	; 0xf14 <vfscanf+0x1a>
    1104:	55 20       	and	r5, r5
    1106:	19 f0       	breq	.+6      	; 0x110e <vfscanf+0x214>
    1108:	85 2d       	mov	r24, r5
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	02 c0       	rjmp	.+4      	; 0x1112 <vfscanf+0x218>
    110e:	8f ef       	ldi	r24, 0xFF	; 255
    1110:	9f ef       	ldi	r25, 0xFF	; 255
    1112:	cd b7       	in	r28, 0x3d	; 61
    1114:	de b7       	in	r29, 0x3e	; 62
    1116:	ef e0       	ldi	r30, 0x0F	; 15
    1118:	0c 94 cb 09 	jmp	0x1396	; 0x1396 <__epilogue_restores__+0x6>

0000111c <isspace>:
    111c:	91 11       	cpse	r25, r1
    111e:	0c 94 a9 09 	jmp	0x1352	; 0x1352 <__ctype_isfalse>
    1122:	80 32       	cpi	r24, 0x20	; 32
    1124:	19 f0       	breq	.+6      	; 0x112c <isspace+0x10>
    1126:	89 50       	subi	r24, 0x09	; 9
    1128:	85 50       	subi	r24, 0x05	; 5
    112a:	c8 f7       	brcc	.-14     	; 0x111e <isspace+0x2>
    112c:	08 95       	ret

0000112e <strchr_P>:
    112e:	fc 01       	movw	r30, r24
    1130:	05 90       	lpm	r0, Z+
    1132:	06 16       	cp	r0, r22
    1134:	21 f0       	breq	.+8      	; 0x113e <strchr_P+0x10>
    1136:	00 20       	and	r0, r0
    1138:	d9 f7       	brne	.-10     	; 0x1130 <strchr_P+0x2>
    113a:	c0 01       	movw	r24, r0
    113c:	08 95       	ret
    113e:	31 97       	sbiw	r30, 0x01	; 1
    1140:	cf 01       	movw	r24, r30
    1142:	08 95       	ret

00001144 <strnlen_P>:
    1144:	fc 01       	movw	r30, r24
    1146:	05 90       	lpm	r0, Z+
    1148:	61 50       	subi	r22, 0x01	; 1
    114a:	70 40       	sbci	r23, 0x00	; 0
    114c:	01 10       	cpse	r0, r1
    114e:	d8 f7       	brcc	.-10     	; 0x1146 <strnlen_P+0x2>
    1150:	80 95       	com	r24
    1152:	90 95       	com	r25
    1154:	8e 0f       	add	r24, r30
    1156:	9f 1f       	adc	r25, r31
    1158:	08 95       	ret

0000115a <strnlen>:
    115a:	fc 01       	movw	r30, r24
    115c:	61 50       	subi	r22, 0x01	; 1
    115e:	70 40       	sbci	r23, 0x00	; 0
    1160:	01 90       	ld	r0, Z+
    1162:	01 10       	cpse	r0, r1
    1164:	d8 f7       	brcc	.-10     	; 0x115c <strnlen+0x2>
    1166:	80 95       	com	r24
    1168:	90 95       	com	r25
    116a:	8e 0f       	add	r24, r30
    116c:	9f 1f       	adc	r25, r31
    116e:	08 95       	ret

00001170 <fgetc>:
    1170:	cf 93       	push	r28
    1172:	df 93       	push	r29
    1174:	ec 01       	movw	r28, r24
    1176:	2b 81       	ldd	r18, Y+3	; 0x03
    1178:	20 ff       	sbrs	r18, 0
    117a:	33 c0       	rjmp	.+102    	; 0x11e2 <fgetc+0x72>
    117c:	26 ff       	sbrs	r18, 6
    117e:	0a c0       	rjmp	.+20     	; 0x1194 <fgetc+0x24>
    1180:	2f 7b       	andi	r18, 0xBF	; 191
    1182:	2b 83       	std	Y+3, r18	; 0x03
    1184:	8e 81       	ldd	r24, Y+6	; 0x06
    1186:	9f 81       	ldd	r25, Y+7	; 0x07
    1188:	01 96       	adiw	r24, 0x01	; 1
    118a:	9f 83       	std	Y+7, r25	; 0x07
    118c:	8e 83       	std	Y+6, r24	; 0x06
    118e:	8a 81       	ldd	r24, Y+2	; 0x02
    1190:	90 e0       	ldi	r25, 0x00	; 0
    1192:	29 c0       	rjmp	.+82     	; 0x11e6 <fgetc+0x76>
    1194:	22 ff       	sbrs	r18, 2
    1196:	0f c0       	rjmp	.+30     	; 0x11b6 <fgetc+0x46>
    1198:	e8 81       	ld	r30, Y
    119a:	f9 81       	ldd	r31, Y+1	; 0x01
    119c:	80 81       	ld	r24, Z
    119e:	08 2e       	mov	r0, r24
    11a0:	00 0c       	add	r0, r0
    11a2:	99 0b       	sbc	r25, r25
    11a4:	00 97       	sbiw	r24, 0x00	; 0
    11a6:	19 f4       	brne	.+6      	; 0x11ae <fgetc+0x3e>
    11a8:	20 62       	ori	r18, 0x20	; 32
    11aa:	2b 83       	std	Y+3, r18	; 0x03
    11ac:	1a c0       	rjmp	.+52     	; 0x11e2 <fgetc+0x72>
    11ae:	31 96       	adiw	r30, 0x01	; 1
    11b0:	f9 83       	std	Y+1, r31	; 0x01
    11b2:	e8 83       	st	Y, r30
    11b4:	0e c0       	rjmp	.+28     	; 0x11d2 <fgetc+0x62>
    11b6:	ea 85       	ldd	r30, Y+10	; 0x0a
    11b8:	fb 85       	ldd	r31, Y+11	; 0x0b
    11ba:	09 95       	icall
    11bc:	97 ff       	sbrs	r25, 7
    11be:	09 c0       	rjmp	.+18     	; 0x11d2 <fgetc+0x62>
    11c0:	2b 81       	ldd	r18, Y+3	; 0x03
    11c2:	01 96       	adiw	r24, 0x01	; 1
    11c4:	11 f0       	breq	.+4      	; 0x11ca <fgetc+0x5a>
    11c6:	80 e2       	ldi	r24, 0x20	; 32
    11c8:	01 c0       	rjmp	.+2      	; 0x11cc <fgetc+0x5c>
    11ca:	80 e1       	ldi	r24, 0x10	; 16
    11cc:	82 2b       	or	r24, r18
    11ce:	8b 83       	std	Y+3, r24	; 0x03
    11d0:	08 c0       	rjmp	.+16     	; 0x11e2 <fgetc+0x72>
    11d2:	2e 81       	ldd	r18, Y+6	; 0x06
    11d4:	3f 81       	ldd	r19, Y+7	; 0x07
    11d6:	2f 5f       	subi	r18, 0xFF	; 255
    11d8:	3f 4f       	sbci	r19, 0xFF	; 255
    11da:	3f 83       	std	Y+7, r19	; 0x07
    11dc:	2e 83       	std	Y+6, r18	; 0x06
    11de:	99 27       	eor	r25, r25
    11e0:	02 c0       	rjmp	.+4      	; 0x11e6 <fgetc+0x76>
    11e2:	8f ef       	ldi	r24, 0xFF	; 255
    11e4:	9f ef       	ldi	r25, 0xFF	; 255
    11e6:	df 91       	pop	r29
    11e8:	cf 91       	pop	r28
    11ea:	08 95       	ret

000011ec <fputc>:
    11ec:	0f 93       	push	r16
    11ee:	1f 93       	push	r17
    11f0:	cf 93       	push	r28
    11f2:	df 93       	push	r29
    11f4:	fb 01       	movw	r30, r22
    11f6:	23 81       	ldd	r18, Z+3	; 0x03
    11f8:	21 fd       	sbrc	r18, 1
    11fa:	03 c0       	rjmp	.+6      	; 0x1202 <fputc+0x16>
    11fc:	8f ef       	ldi	r24, 0xFF	; 255
    11fe:	9f ef       	ldi	r25, 0xFF	; 255
    1200:	2c c0       	rjmp	.+88     	; 0x125a <fputc+0x6e>
    1202:	22 ff       	sbrs	r18, 2
    1204:	16 c0       	rjmp	.+44     	; 0x1232 <fputc+0x46>
    1206:	46 81       	ldd	r20, Z+6	; 0x06
    1208:	57 81       	ldd	r21, Z+7	; 0x07
    120a:	24 81       	ldd	r18, Z+4	; 0x04
    120c:	35 81       	ldd	r19, Z+5	; 0x05
    120e:	42 17       	cp	r20, r18
    1210:	53 07       	cpc	r21, r19
    1212:	44 f4       	brge	.+16     	; 0x1224 <fputc+0x38>
    1214:	a0 81       	ld	r26, Z
    1216:	b1 81       	ldd	r27, Z+1	; 0x01
    1218:	9d 01       	movw	r18, r26
    121a:	2f 5f       	subi	r18, 0xFF	; 255
    121c:	3f 4f       	sbci	r19, 0xFF	; 255
    121e:	31 83       	std	Z+1, r19	; 0x01
    1220:	20 83       	st	Z, r18
    1222:	8c 93       	st	X, r24
    1224:	26 81       	ldd	r18, Z+6	; 0x06
    1226:	37 81       	ldd	r19, Z+7	; 0x07
    1228:	2f 5f       	subi	r18, 0xFF	; 255
    122a:	3f 4f       	sbci	r19, 0xFF	; 255
    122c:	37 83       	std	Z+7, r19	; 0x07
    122e:	26 83       	std	Z+6, r18	; 0x06
    1230:	14 c0       	rjmp	.+40     	; 0x125a <fputc+0x6e>
    1232:	8b 01       	movw	r16, r22
    1234:	ec 01       	movw	r28, r24
    1236:	fb 01       	movw	r30, r22
    1238:	00 84       	ldd	r0, Z+8	; 0x08
    123a:	f1 85       	ldd	r31, Z+9	; 0x09
    123c:	e0 2d       	mov	r30, r0
    123e:	09 95       	icall
    1240:	89 2b       	or	r24, r25
    1242:	e1 f6       	brne	.-72     	; 0x11fc <fputc+0x10>
    1244:	d8 01       	movw	r26, r16
    1246:	16 96       	adiw	r26, 0x06	; 6
    1248:	8d 91       	ld	r24, X+
    124a:	9c 91       	ld	r25, X
    124c:	17 97       	sbiw	r26, 0x07	; 7
    124e:	01 96       	adiw	r24, 0x01	; 1
    1250:	17 96       	adiw	r26, 0x07	; 7
    1252:	9c 93       	st	X, r25
    1254:	8e 93       	st	-X, r24
    1256:	16 97       	sbiw	r26, 0x06	; 6
    1258:	ce 01       	movw	r24, r28
    125a:	df 91       	pop	r29
    125c:	cf 91       	pop	r28
    125e:	1f 91       	pop	r17
    1260:	0f 91       	pop	r16
    1262:	08 95       	ret

00001264 <ungetc>:
    1264:	fb 01       	movw	r30, r22
    1266:	23 81       	ldd	r18, Z+3	; 0x03
    1268:	20 ff       	sbrs	r18, 0
    126a:	12 c0       	rjmp	.+36     	; 0x1290 <ungetc+0x2c>
    126c:	26 fd       	sbrc	r18, 6
    126e:	10 c0       	rjmp	.+32     	; 0x1290 <ungetc+0x2c>
    1270:	8f 3f       	cpi	r24, 0xFF	; 255
    1272:	3f ef       	ldi	r19, 0xFF	; 255
    1274:	93 07       	cpc	r25, r19
    1276:	61 f0       	breq	.+24     	; 0x1290 <ungetc+0x2c>
    1278:	82 83       	std	Z+2, r24	; 0x02
    127a:	2f 7d       	andi	r18, 0xDF	; 223
    127c:	20 64       	ori	r18, 0x40	; 64
    127e:	23 83       	std	Z+3, r18	; 0x03
    1280:	26 81       	ldd	r18, Z+6	; 0x06
    1282:	37 81       	ldd	r19, Z+7	; 0x07
    1284:	21 50       	subi	r18, 0x01	; 1
    1286:	31 09       	sbc	r19, r1
    1288:	37 83       	std	Z+7, r19	; 0x07
    128a:	26 83       	std	Z+6, r18	; 0x06
    128c:	99 27       	eor	r25, r25
    128e:	08 95       	ret
    1290:	8f ef       	ldi	r24, 0xFF	; 255
    1292:	9f ef       	ldi	r25, 0xFF	; 255
    1294:	08 95       	ret

00001296 <__ultoa_invert>:
    1296:	fa 01       	movw	r30, r20
    1298:	aa 27       	eor	r26, r26
    129a:	28 30       	cpi	r18, 0x08	; 8
    129c:	51 f1       	breq	.+84     	; 0x12f2 <__ultoa_invert+0x5c>
    129e:	20 31       	cpi	r18, 0x10	; 16
    12a0:	81 f1       	breq	.+96     	; 0x1302 <__ultoa_invert+0x6c>
    12a2:	e8 94       	clt
    12a4:	6f 93       	push	r22
    12a6:	6e 7f       	andi	r22, 0xFE	; 254
    12a8:	6e 5f       	subi	r22, 0xFE	; 254
    12aa:	7f 4f       	sbci	r23, 0xFF	; 255
    12ac:	8f 4f       	sbci	r24, 0xFF	; 255
    12ae:	9f 4f       	sbci	r25, 0xFF	; 255
    12b0:	af 4f       	sbci	r26, 0xFF	; 255
    12b2:	b1 e0       	ldi	r27, 0x01	; 1
    12b4:	3e d0       	rcall	.+124    	; 0x1332 <__ultoa_invert+0x9c>
    12b6:	b4 e0       	ldi	r27, 0x04	; 4
    12b8:	3c d0       	rcall	.+120    	; 0x1332 <__ultoa_invert+0x9c>
    12ba:	67 0f       	add	r22, r23
    12bc:	78 1f       	adc	r23, r24
    12be:	89 1f       	adc	r24, r25
    12c0:	9a 1f       	adc	r25, r26
    12c2:	a1 1d       	adc	r26, r1
    12c4:	68 0f       	add	r22, r24
    12c6:	79 1f       	adc	r23, r25
    12c8:	8a 1f       	adc	r24, r26
    12ca:	91 1d       	adc	r25, r1
    12cc:	a1 1d       	adc	r26, r1
    12ce:	6a 0f       	add	r22, r26
    12d0:	71 1d       	adc	r23, r1
    12d2:	81 1d       	adc	r24, r1
    12d4:	91 1d       	adc	r25, r1
    12d6:	a1 1d       	adc	r26, r1
    12d8:	20 d0       	rcall	.+64     	; 0x131a <__ultoa_invert+0x84>
    12da:	09 f4       	brne	.+2      	; 0x12de <__ultoa_invert+0x48>
    12dc:	68 94       	set
    12de:	3f 91       	pop	r19
    12e0:	2a e0       	ldi	r18, 0x0A	; 10
    12e2:	26 9f       	mul	r18, r22
    12e4:	11 24       	eor	r1, r1
    12e6:	30 19       	sub	r19, r0
    12e8:	30 5d       	subi	r19, 0xD0	; 208
    12ea:	31 93       	st	Z+, r19
    12ec:	de f6       	brtc	.-74     	; 0x12a4 <__ultoa_invert+0xe>
    12ee:	cf 01       	movw	r24, r30
    12f0:	08 95       	ret
    12f2:	46 2f       	mov	r20, r22
    12f4:	47 70       	andi	r20, 0x07	; 7
    12f6:	40 5d       	subi	r20, 0xD0	; 208
    12f8:	41 93       	st	Z+, r20
    12fa:	b3 e0       	ldi	r27, 0x03	; 3
    12fc:	0f d0       	rcall	.+30     	; 0x131c <__ultoa_invert+0x86>
    12fe:	c9 f7       	brne	.-14     	; 0x12f2 <__ultoa_invert+0x5c>
    1300:	f6 cf       	rjmp	.-20     	; 0x12ee <__ultoa_invert+0x58>
    1302:	46 2f       	mov	r20, r22
    1304:	4f 70       	andi	r20, 0x0F	; 15
    1306:	40 5d       	subi	r20, 0xD0	; 208
    1308:	4a 33       	cpi	r20, 0x3A	; 58
    130a:	18 f0       	brcs	.+6      	; 0x1312 <__ultoa_invert+0x7c>
    130c:	49 5d       	subi	r20, 0xD9	; 217
    130e:	31 fd       	sbrc	r19, 1
    1310:	40 52       	subi	r20, 0x20	; 32
    1312:	41 93       	st	Z+, r20
    1314:	02 d0       	rcall	.+4      	; 0x131a <__ultoa_invert+0x84>
    1316:	a9 f7       	brne	.-22     	; 0x1302 <__ultoa_invert+0x6c>
    1318:	ea cf       	rjmp	.-44     	; 0x12ee <__ultoa_invert+0x58>
    131a:	b4 e0       	ldi	r27, 0x04	; 4
    131c:	a6 95       	lsr	r26
    131e:	97 95       	ror	r25
    1320:	87 95       	ror	r24
    1322:	77 95       	ror	r23
    1324:	67 95       	ror	r22
    1326:	ba 95       	dec	r27
    1328:	c9 f7       	brne	.-14     	; 0x131c <__ultoa_invert+0x86>
    132a:	00 97       	sbiw	r24, 0x00	; 0
    132c:	61 05       	cpc	r22, r1
    132e:	71 05       	cpc	r23, r1
    1330:	08 95       	ret
    1332:	9b 01       	movw	r18, r22
    1334:	ac 01       	movw	r20, r24
    1336:	0a 2e       	mov	r0, r26
    1338:	06 94       	lsr	r0
    133a:	57 95       	ror	r21
    133c:	47 95       	ror	r20
    133e:	37 95       	ror	r19
    1340:	27 95       	ror	r18
    1342:	ba 95       	dec	r27
    1344:	c9 f7       	brne	.-14     	; 0x1338 <__ultoa_invert+0xa2>
    1346:	62 0f       	add	r22, r18
    1348:	73 1f       	adc	r23, r19
    134a:	84 1f       	adc	r24, r20
    134c:	95 1f       	adc	r25, r21
    134e:	a0 1d       	adc	r26, r0
    1350:	08 95       	ret

00001352 <__ctype_isfalse>:
    1352:	99 27       	eor	r25, r25
    1354:	88 27       	eor	r24, r24

00001356 <__ctype_istrue>:
    1356:	08 95       	ret

00001358 <__prologue_saves__>:
    1358:	2f 92       	push	r2
    135a:	3f 92       	push	r3
    135c:	4f 92       	push	r4
    135e:	5f 92       	push	r5
    1360:	6f 92       	push	r6
    1362:	7f 92       	push	r7
    1364:	8f 92       	push	r8
    1366:	9f 92       	push	r9
    1368:	af 92       	push	r10
    136a:	bf 92       	push	r11
    136c:	cf 92       	push	r12
    136e:	df 92       	push	r13
    1370:	ef 92       	push	r14
    1372:	ff 92       	push	r15
    1374:	0f 93       	push	r16
    1376:	1f 93       	push	r17
    1378:	cf 93       	push	r28
    137a:	df 93       	push	r29
    137c:	cd b7       	in	r28, 0x3d	; 61
    137e:	de b7       	in	r29, 0x3e	; 62
    1380:	ca 1b       	sub	r28, r26
    1382:	db 0b       	sbc	r29, r27
    1384:	0f b6       	in	r0, 0x3f	; 63
    1386:	f8 94       	cli
    1388:	de bf       	out	0x3e, r29	; 62
    138a:	0f be       	out	0x3f, r0	; 63
    138c:	cd bf       	out	0x3d, r28	; 61
    138e:	09 94       	ijmp

00001390 <__epilogue_restores__>:
    1390:	2a 88       	ldd	r2, Y+18	; 0x12
    1392:	39 88       	ldd	r3, Y+17	; 0x11
    1394:	48 88       	ldd	r4, Y+16	; 0x10
    1396:	5f 84       	ldd	r5, Y+15	; 0x0f
    1398:	6e 84       	ldd	r6, Y+14	; 0x0e
    139a:	7d 84       	ldd	r7, Y+13	; 0x0d
    139c:	8c 84       	ldd	r8, Y+12	; 0x0c
    139e:	9b 84       	ldd	r9, Y+11	; 0x0b
    13a0:	aa 84       	ldd	r10, Y+10	; 0x0a
    13a2:	b9 84       	ldd	r11, Y+9	; 0x09
    13a4:	c8 84       	ldd	r12, Y+8	; 0x08
    13a6:	df 80       	ldd	r13, Y+7	; 0x07
    13a8:	ee 80       	ldd	r14, Y+6	; 0x06
    13aa:	fd 80       	ldd	r15, Y+5	; 0x05
    13ac:	0c 81       	ldd	r16, Y+4	; 0x04
    13ae:	1b 81       	ldd	r17, Y+3	; 0x03
    13b0:	aa 81       	ldd	r26, Y+2	; 0x02
    13b2:	b9 81       	ldd	r27, Y+1	; 0x01
    13b4:	ce 0f       	add	r28, r30
    13b6:	d1 1d       	adc	r29, r1
    13b8:	0f b6       	in	r0, 0x3f	; 63
    13ba:	f8 94       	cli
    13bc:	de bf       	out	0x3e, r29	; 62
    13be:	0f be       	out	0x3f, r0	; 63
    13c0:	cd bf       	out	0x3d, r28	; 61
    13c2:	ed 01       	movw	r28, r26
    13c4:	08 95       	ret

000013c6 <_exit>:
    13c6:	f8 94       	cli

000013c8 <__stop_program>:
    13c8:	ff cf       	rjmp	.-2      	; 0x13c8 <__stop_program>
