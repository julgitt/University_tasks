
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000194  00800100  000014bc  00001550  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000014bc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000014  00800294  00800294  000016e4  2**0
                  ALLOC
  3 .stab         00000dbc  00000000  00000000  000016e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000fdb  00000000  00000000  000024a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  0000347b  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000348c  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  000034cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  00003ac0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  00004062  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  0000407c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
       4:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       8:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      18:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      1c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      20:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      24:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      2c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      34:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      38:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      44:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      48:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      4c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      54:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      58:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      5c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      60:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      64:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	63 64       	ori	r22, 0x43	; 67
      6a:	69 6e       	ori	r22, 0xE9	; 233
      6c:	6f 70       	andi	r22, 0x0F	; 15
      6e:	73 75       	andi	r23, 0x53	; 83
      70:	78 58       	subi	r23, 0x88	; 136
      72:	5b 00       	.word	0x005b	; ????

00000074 <__ctors_end>:
      74:	11 24       	eor	r1, r1
      76:	1f be       	out	0x3f, r1	; 63
      78:	cf ef       	ldi	r28, 0xFF	; 255
      7a:	d8 e0       	ldi	r29, 0x08	; 8
      7c:	de bf       	out	0x3e, r29	; 62
      7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
      80:	12 e0       	ldi	r17, 0x02	; 2
      82:	a0 e0       	ldi	r26, 0x00	; 0
      84:	b1 e0       	ldi	r27, 0x01	; 1
      86:	ec eb       	ldi	r30, 0xBC	; 188
      88:	f4 e1       	ldi	r31, 0x14	; 20
      8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
      8c:	05 90       	lpm	r0, Z+
      8e:	0d 92       	st	X+, r0
      90:	a4 39       	cpi	r26, 0x94	; 148
      92:	b1 07       	cpc	r27, r17
      94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
      96:	22 e0       	ldi	r18, 0x02	; 2
      98:	a4 e9       	ldi	r26, 0x94	; 148
      9a:	b2 e0       	ldi	r27, 0x02	; 2
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	a8 3a       	cpi	r26, 0xA8	; 168
      a2:	b2 07       	cpc	r27, r18
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
      a6:	0e 94 2b 03 	call	0x656	; 0x656 <main>
      aa:	0c 94 5c 0a 	jmp	0x14b8	; 0x14b8 <_exit>

000000ae <__bad_interrupt>:
      ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <i2cInit>:
#include "i2c.h"
void i2cInit() {
      b2:	cf 93       	push	r28
      b4:	df 93       	push	r29
      b6:	cd b7       	in	r28, 0x3d	; 61
      b8:	de b7       	in	r29, 0x3e	; 62
  // ustaw bitrate
  // 8MHz / (16+2*TWBR*1) ~= 100kHz
  TWBR = 32;
      ba:	88 eb       	ldi	r24, 0xB8	; 184
      bc:	90 e0       	ldi	r25, 0x00	; 0
      be:	20 e2       	ldi	r18, 0x20	; 32
      c0:	fc 01       	movw	r30, r24
      c2:	20 83       	st	Z, r18
  // uruchom TWI
  TWCR |= _BV(TWEN);
      c4:	8c eb       	ldi	r24, 0xBC	; 188
      c6:	90 e0       	ldi	r25, 0x00	; 0
      c8:	2c eb       	ldi	r18, 0xBC	; 188
      ca:	30 e0       	ldi	r19, 0x00	; 0
      cc:	f9 01       	movw	r30, r18
      ce:	20 81       	ld	r18, Z
      d0:	24 60       	ori	r18, 0x04	; 4
      d2:	fc 01       	movw	r30, r24
      d4:	20 83       	st	Z, r18
}
      d6:	00 00       	nop
      d8:	df 91       	pop	r29
      da:	cf 91       	pop	r28
      dc:	08 95       	ret

000000de <i2cWaitForComplete>:
void i2cWaitForComplete() {
      de:	cf 93       	push	r28
      e0:	df 93       	push	r29
      e2:	cd b7       	in	r28, 0x3d	; 61
      e4:	de b7       	in	r29, 0x3e	; 62
  // czekaj na flagę TWINT
  while(!(TWCR & _BV(TWINT)));
      e6:	00 00       	nop
      e8:	8c eb       	ldi	r24, 0xBC	; 188
      ea:	90 e0       	ldi	r25, 0x00	; 0
      ec:	fc 01       	movw	r30, r24
      ee:	80 81       	ld	r24, Z
      f0:	88 23       	and	r24, r24
      f2:	d4 f7       	brge	.-12     	; 0xe8 <i2cWaitForComplete+0xa>
}
      f4:	00 00       	nop
      f6:	df 91       	pop	r29
      f8:	cf 91       	pop	r28
      fa:	08 95       	ret

000000fc <i2cStart>:
void i2cStart() {
      fc:	cf 93       	push	r28
      fe:	df 93       	push	r29
     100:	cd b7       	in	r28, 0x3d	; 61
     102:	de b7       	in	r29, 0x3e	; 62
  // wyślij warunek startu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTA);
     104:	8c eb       	ldi	r24, 0xBC	; 188
     106:	90 e0       	ldi	r25, 0x00	; 0
     108:	24 ea       	ldi	r18, 0xA4	; 164
     10a:	fc 01       	movw	r30, r24
     10c:	20 83       	st	Z, r18
  i2cWaitForComplete();
     10e:	0e 94 6f 00 	call	0xde	; 0xde <i2cWaitForComplete>
}
     112:	00 00       	nop
     114:	df 91       	pop	r29
     116:	cf 91       	pop	r28
     118:	08 95       	ret

0000011a <i2cStop>:
void i2cStop() {
     11a:	cf 93       	push	r28
     11c:	df 93       	push	r29
     11e:	cd b7       	in	r28, 0x3d	; 61
     120:	de b7       	in	r29, 0x3e	; 62
  // wyślij warunek stopu
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWSTO);
     122:	8c eb       	ldi	r24, 0xBC	; 188
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	24 e9       	ldi	r18, 0x94	; 148
     128:	fc 01       	movw	r30, r24
     12a:	20 83       	st	Z, r18
}
     12c:	00 00       	nop
     12e:	df 91       	pop	r29
     130:	cf 91       	pop	r28
     132:	08 95       	ret

00000134 <i2cReset>:
void i2cReset() {
     134:	cf 93       	push	r28
     136:	df 93       	push	r29
     138:	cd b7       	in	r28, 0x3d	; 61
     13a:	de b7       	in	r29, 0x3e	; 62
  // wyślij warunek stopu i wyłącz TWI
  TWCR = _BV(TWINT) | _BV(TWSTO);
     13c:	8c eb       	ldi	r24, 0xBC	; 188
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	20 e9       	ldi	r18, 0x90	; 144
     142:	fc 01       	movw	r30, r24
     144:	20 83       	st	Z, r18
}
     146:	00 00       	nop
     148:	df 91       	pop	r29
     14a:	cf 91       	pop	r28
     14c:	08 95       	ret

0000014e <i2cReadAck>:
uint8_t i2cReadAck() {
     14e:	cf 93       	push	r28
     150:	df 93       	push	r29
     152:	cd b7       	in	r28, 0x3d	; 61
     154:	de b7       	in	r29, 0x3e	; 62
  // odczytaj dane, wyślij ACK
  TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWEA);
     156:	8c eb       	ldi	r24, 0xBC	; 188
     158:	90 e0       	ldi	r25, 0x00	; 0
     15a:	24 ec       	ldi	r18, 0xC4	; 196
     15c:	fc 01       	movw	r30, r24
     15e:	20 83       	st	Z, r18
  i2cWaitForComplete();
     160:	0e 94 6f 00 	call	0xde	; 0xde <i2cWaitForComplete>
  return TWDR;
     164:	8b eb       	ldi	r24, 0xBB	; 187
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	fc 01       	movw	r30, r24
     16a:	80 81       	ld	r24, Z
}
     16c:	df 91       	pop	r29
     16e:	cf 91       	pop	r28
     170:	08 95       	ret

00000172 <i2cReadNoAck>:
uint8_t i2cReadNoAck() {
     172:	cf 93       	push	r28
     174:	df 93       	push	r29
     176:	cd b7       	in	r28, 0x3d	; 61
     178:	de b7       	in	r29, 0x3e	; 62
  // odczytaj dane, wyślij NOACK
  TWCR = _BV(TWINT) | _BV(TWEN);
     17a:	8c eb       	ldi	r24, 0xBC	; 188
     17c:	90 e0       	ldi	r25, 0x00	; 0
     17e:	24 e8       	ldi	r18, 0x84	; 132
     180:	fc 01       	movw	r30, r24
     182:	20 83       	st	Z, r18
  i2cWaitForComplete();
     184:	0e 94 6f 00 	call	0xde	; 0xde <i2cWaitForComplete>
  return TWDR;
     188:	8b eb       	ldi	r24, 0xBB	; 187
     18a:	90 e0       	ldi	r25, 0x00	; 0
     18c:	fc 01       	movw	r30, r24
     18e:	80 81       	ld	r24, Z
}
     190:	df 91       	pop	r29
     192:	cf 91       	pop	r28
     194:	08 95       	ret

00000196 <i2cSend>:
void i2cSend(uint8_t data) {
     196:	cf 93       	push	r28
     198:	df 93       	push	r29
     19a:	1f 92       	push	r1
     19c:	cd b7       	in	r28, 0x3d	; 61
     19e:	de b7       	in	r29, 0x3e	; 62
     1a0:	89 83       	std	Y+1, r24	; 0x01
  // wyślij dane
  TWDR = data;
     1a2:	8b eb       	ldi	r24, 0xBB	; 187
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	29 81       	ldd	r18, Y+1	; 0x01
     1a8:	fc 01       	movw	r30, r24
     1aa:	20 83       	st	Z, r18
  TWCR = _BV(TWINT) | _BV(TWEN);
     1ac:	8c eb       	ldi	r24, 0xBC	; 188
     1ae:	90 e0       	ldi	r25, 0x00	; 0
     1b0:	24 e8       	ldi	r18, 0x84	; 132
     1b2:	fc 01       	movw	r30, r24
     1b4:	20 83       	st	Z, r18
  i2cWaitForComplete();
     1b6:	0e 94 6f 00 	call	0xde	; 0xde <i2cWaitForComplete>
}
     1ba:	00 00       	nop
     1bc:	0f 90       	pop	r0
     1be:	df 91       	pop	r29
     1c0:	cf 91       	pop	r28
     1c2:	08 95       	ret

000001c4 <uart_init>:
#define BAUD 9600                          // baudrate
#define UBRR_VALUE ((F_CPU)/16/(BAUD)-1)   // zgodnie ze wzorem

// inicjalizacja UART
void uart_init()
{
     1c4:	cf 93       	push	r28
     1c6:	df 93       	push	r29
     1c8:	cd b7       	in	r28, 0x3d	; 61
     1ca:	de b7       	in	r29, 0x3e	; 62
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
     1cc:	84 ec       	ldi	r24, 0xC4	; 196
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	27 e6       	ldi	r18, 0x67	; 103
     1d2:	30 e0       	ldi	r19, 0x00	; 0
     1d4:	fc 01       	movw	r30, r24
     1d6:	31 83       	std	Z+1, r19	; 0x01
     1d8:	20 83       	st	Z, r18
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
     1da:	80 ec       	ldi	r24, 0xC0	; 192
     1dc:	90 e0       	ldi	r25, 0x00	; 0
     1de:	fc 01       	movw	r30, r24
     1e0:	10 82       	st	Z, r1
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
     1e2:	81 ec       	ldi	r24, 0xC1	; 193
     1e4:	90 e0       	ldi	r25, 0x00	; 0
     1e6:	28 e1       	ldi	r18, 0x18	; 24
     1e8:	fc 01       	movw	r30, r24
     1ea:	20 83       	st	Z, r18
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
     1ec:	82 ec       	ldi	r24, 0xC2	; 194
     1ee:	90 e0       	ldi	r25, 0x00	; 0
     1f0:	26 e0       	ldi	r18, 0x06	; 6
     1f2:	fc 01       	movw	r30, r24
     1f4:	20 83       	st	Z, r18
}
     1f6:	00 00       	nop
     1f8:	df 91       	pop	r29
     1fa:	cf 91       	pop	r28
     1fc:	08 95       	ret

000001fe <uart_transmit>:

// transmisja jednego znaku
int uart_transmit(char data, FILE *stream)
{
     1fe:	cf 93       	push	r28
     200:	df 93       	push	r29
     202:	00 d0       	rcall	.+0      	; 0x204 <uart_transmit+0x6>
     204:	1f 92       	push	r1
     206:	cd b7       	in	r28, 0x3d	; 61
     208:	de b7       	in	r29, 0x3e	; 62
     20a:	89 83       	std	Y+1, r24	; 0x01
     20c:	7b 83       	std	Y+3, r23	; 0x03
     20e:	6a 83       	std	Y+2, r22	; 0x02
  // czekaj aż transmiter gotowy
  while(!(UCSR0A & _BV(UDRE0)));
     210:	00 00       	nop
     212:	80 ec       	ldi	r24, 0xC0	; 192
     214:	90 e0       	ldi	r25, 0x00	; 0
     216:	fc 01       	movw	r30, r24
     218:	80 81       	ld	r24, Z
     21a:	88 2f       	mov	r24, r24
     21c:	90 e0       	ldi	r25, 0x00	; 0
     21e:	80 72       	andi	r24, 0x20	; 32
     220:	99 27       	eor	r25, r25
     222:	89 2b       	or	r24, r25
     224:	b1 f3       	breq	.-20     	; 0x212 <uart_transmit+0x14>
  UDR0 = data;
     226:	86 ec       	ldi	r24, 0xC6	; 198
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	29 81       	ldd	r18, Y+1	; 0x01
     22c:	fc 01       	movw	r30, r24
     22e:	20 83       	st	Z, r18
  return 0;
     230:	80 e0       	ldi	r24, 0x00	; 0
     232:	90 e0       	ldi	r25, 0x00	; 0
}
     234:	0f 90       	pop	r0
     236:	0f 90       	pop	r0
     238:	0f 90       	pop	r0
     23a:	df 91       	pop	r29
     23c:	cf 91       	pop	r28
     23e:	08 95       	ret

00000240 <uart_receive>:

// odczyt jednego znaku
int uart_receive(FILE *stream)
{
     240:	cf 93       	push	r28
     242:	df 93       	push	r29
     244:	00 d0       	rcall	.+0      	; 0x246 <uart_receive+0x6>
     246:	cd b7       	in	r28, 0x3d	; 61
     248:	de b7       	in	r29, 0x3e	; 62
     24a:	9a 83       	std	Y+2, r25	; 0x02
     24c:	89 83       	std	Y+1, r24	; 0x01
  // czekaj aż znak dostępny
  while (!(UCSR0A & _BV(RXC0)));
     24e:	00 00       	nop
     250:	80 ec       	ldi	r24, 0xC0	; 192
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	fc 01       	movw	r30, r24
     256:	80 81       	ld	r24, Z
     258:	88 23       	and	r24, r24
     25a:	d4 f7       	brge	.-12     	; 0x250 <uart_receive+0x10>
  return UDR0;
     25c:	86 ec       	ldi	r24, 0xC6	; 198
     25e:	90 e0       	ldi	r25, 0x00	; 0
     260:	fc 01       	movw	r30, r24
     262:	80 81       	ld	r24, Z
     264:	88 2f       	mov	r24, r24
     266:	90 e0       	ldi	r25, 0x00	; 0
}
     268:	0f 90       	pop	r0
     26a:	0f 90       	pop	r0
     26c:	df 91       	pop	r29
     26e:	cf 91       	pop	r28
     270:	08 95       	ret

00000272 <write>:
    }
    

const uint8_t eeprom_addr = 0xa0;

static inline void write (uint16_t addr, uint8_t val) {
     272:	cf 93       	push	r28
     274:	df 93       	push	r29
     276:	00 d0       	rcall	.+0      	; 0x278 <write+0x6>
     278:	1f 92       	push	r1
     27a:	cd b7       	in	r28, 0x3d	; 61
     27c:	de b7       	in	r29, 0x3e	; 62
     27e:	9a 83       	std	Y+2, r25	; 0x02
     280:	89 83       	std	Y+1, r24	; 0x01
     282:	6b 83       	std	Y+3, r22	; 0x03
  i2cStart();
     284:	0e 94 7e 00 	call	0xfc	; 0xfc <i2cStart>
  i2cCheck(0x08, "I2C start");
     288:	89 eb       	ldi	r24, 0xB9	; 185
     28a:	90 e0       	ldi	r25, 0x00	; 0
     28c:	fc 01       	movw	r30, r24
     28e:	80 81       	ld	r24, Z
     290:	88 2f       	mov	r24, r24
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	88 7f       	andi	r24, 0xF8	; 248
     296:	99 27       	eor	r25, r25
     298:	08 97       	sbiw	r24, 0x08	; 8
     29a:	d1 f0       	breq	.+52     	; 0x2d0 <write+0x5e>
     29c:	89 eb       	ldi	r24, 0xB9	; 185
     29e:	90 e0       	ldi	r25, 0x00	; 0
     2a0:	fc 01       	movw	r30, r24
     2a2:	80 81       	ld	r24, Z
     2a4:	88 2f       	mov	r24, r24
     2a6:	90 e0       	ldi	r25, 0x00	; 0
     2a8:	88 7f       	andi	r24, 0xF8	; 248
     2aa:	99 27       	eor	r25, r25
     2ac:	29 2f       	mov	r18, r25
     2ae:	2f 93       	push	r18
     2b0:	8f 93       	push	r24
     2b2:	81 e0       	ldi	r24, 0x01	; 1
     2b4:	91 e0       	ldi	r25, 0x01	; 1
     2b6:	89 2f       	mov	r24, r25
     2b8:	8f 93       	push	r24
     2ba:	81 e0       	ldi	r24, 0x01	; 1
     2bc:	91 e0       	ldi	r25, 0x01	; 1
     2be:	8f 93       	push	r24
     2c0:	0e 94 1d 04 	call	0x83a	; 0x83a <printf>
     2c4:	0f 90       	pop	r0
     2c6:	0f 90       	pop	r0
     2c8:	0f 90       	pop	r0
     2ca:	0f 90       	pop	r0
     2cc:	0e 94 9a 00 	call	0x134	; 0x134 <i2cReset>
    
  i2cSend(eeprom_addr | ((addr & 0x100) >> 7));
     2d0:	89 81       	ldd	r24, Y+1	; 0x01
     2d2:	9a 81       	ldd	r25, Y+2	; 0x02
     2d4:	88 27       	eor	r24, r24
     2d6:	91 70       	andi	r25, 0x01	; 1
     2d8:	88 0f       	add	r24, r24
     2da:	89 2f       	mov	r24, r25
     2dc:	88 1f       	adc	r24, r24
     2de:	99 0b       	sbc	r25, r25
     2e0:	91 95       	neg	r25
     2e2:	98 2f       	mov	r25, r24
     2e4:	80 ea       	ldi	r24, 0xA0	; 160
     2e6:	89 2b       	or	r24, r25
     2e8:	0e 94 cb 00 	call	0x196	; 0x196 <i2cSend>
  i2cCheck(0x18, "I2C EEPROM write request");
     2ec:	89 eb       	ldi	r24, 0xB9	; 185
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	fc 01       	movw	r30, r24
     2f2:	80 81       	ld	r24, Z
     2f4:	88 2f       	mov	r24, r24
     2f6:	90 e0       	ldi	r25, 0x00	; 0
     2f8:	88 7f       	andi	r24, 0xF8	; 248
     2fa:	99 27       	eor	r25, r25
     2fc:	48 97       	sbiw	r24, 0x18	; 24
     2fe:	d1 f0       	breq	.+52     	; 0x334 <write+0xc2>
     300:	89 eb       	ldi	r24, 0xB9	; 185
     302:	90 e0       	ldi	r25, 0x00	; 0
     304:	fc 01       	movw	r30, r24
     306:	80 81       	ld	r24, Z
     308:	88 2f       	mov	r24, r24
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	88 7f       	andi	r24, 0xF8	; 248
     30e:	99 27       	eor	r25, r25
     310:	29 2f       	mov	r18, r25
     312:	2f 93       	push	r18
     314:	8f 93       	push	r24
     316:	82 e2       	ldi	r24, 0x22	; 34
     318:	91 e0       	ldi	r25, 0x01	; 1
     31a:	89 2f       	mov	r24, r25
     31c:	8f 93       	push	r24
     31e:	82 e2       	ldi	r24, 0x22	; 34
     320:	91 e0       	ldi	r25, 0x01	; 1
     322:	8f 93       	push	r24
     324:	0e 94 1d 04 	call	0x83a	; 0x83a <printf>
     328:	0f 90       	pop	r0
     32a:	0f 90       	pop	r0
     32c:	0f 90       	pop	r0
     32e:	0f 90       	pop	r0
     330:	0e 94 9a 00 	call	0x134	; 0x134 <i2cReset>
  i2cSend(addr & 0xff);
     334:	89 81       	ldd	r24, Y+1	; 0x01
     336:	0e 94 cb 00 	call	0x196	; 0x196 <i2cSend>
  i2cCheck(0x28, "I2C EEPROM set address");
     33a:	89 eb       	ldi	r24, 0xB9	; 185
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	fc 01       	movw	r30, r24
     340:	80 81       	ld	r24, Z
     342:	88 2f       	mov	r24, r24
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	88 7f       	andi	r24, 0xF8	; 248
     348:	99 27       	eor	r25, r25
     34a:	88 97       	sbiw	r24, 0x28	; 40
     34c:	d1 f0       	breq	.+52     	; 0x382 <write+0x110>
     34e:	89 eb       	ldi	r24, 0xB9	; 185
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	fc 01       	movw	r30, r24
     354:	80 81       	ld	r24, Z
     356:	88 2f       	mov	r24, r24
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	88 7f       	andi	r24, 0xF8	; 248
     35c:	99 27       	eor	r25, r25
     35e:	29 2f       	mov	r18, r25
     360:	2f 93       	push	r18
     362:	8f 93       	push	r24
     364:	82 e5       	ldi	r24, 0x52	; 82
     366:	91 e0       	ldi	r25, 0x01	; 1
     368:	89 2f       	mov	r24, r25
     36a:	8f 93       	push	r24
     36c:	82 e5       	ldi	r24, 0x52	; 82
     36e:	91 e0       	ldi	r25, 0x01	; 1
     370:	8f 93       	push	r24
     372:	0e 94 1d 04 	call	0x83a	; 0x83a <printf>
     376:	0f 90       	pop	r0
     378:	0f 90       	pop	r0
     37a:	0f 90       	pop	r0
     37c:	0f 90       	pop	r0
     37e:	0e 94 9a 00 	call	0x134	; 0x134 <i2cReset>

  i2cSend(val);
     382:	8b 81       	ldd	r24, Y+3	; 0x03
     384:	0e 94 cb 00 	call	0x196	; 0x196 <i2cSend>
  //i2cCheck(0x28, "I2C EEPROM send value ");
  
  i2cStop();
     388:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cStop>
  i2cCheck(0xf8, "I2C stop");
     38c:	89 eb       	ldi	r24, 0xB9	; 185
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	fc 01       	movw	r30, r24
     392:	80 81       	ld	r24, Z
     394:	88 2f       	mov	r24, r24
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	88 7f       	andi	r24, 0xF8	; 248
     39a:	99 27       	eor	r25, r25
     39c:	88 3f       	cpi	r24, 0xF8	; 248
     39e:	91 05       	cpc	r25, r1
     3a0:	d1 f0       	breq	.+52     	; 0x3d6 <write+0x164>
     3a2:	89 eb       	ldi	r24, 0xB9	; 185
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	fc 01       	movw	r30, r24
     3a8:	80 81       	ld	r24, Z
     3aa:	88 2f       	mov	r24, r24
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	88 7f       	andi	r24, 0xF8	; 248
     3b0:	99 27       	eor	r25, r25
     3b2:	29 2f       	mov	r18, r25
     3b4:	2f 93       	push	r18
     3b6:	8f 93       	push	r24
     3b8:	80 e8       	ldi	r24, 0x80	; 128
     3ba:	91 e0       	ldi	r25, 0x01	; 1
     3bc:	89 2f       	mov	r24, r25
     3be:	8f 93       	push	r24
     3c0:	80 e8       	ldi	r24, 0x80	; 128
     3c2:	91 e0       	ldi	r25, 0x01	; 1
     3c4:	8f 93       	push	r24
     3c6:	0e 94 1d 04 	call	0x83a	; 0x83a <printf>
     3ca:	0f 90       	pop	r0
     3cc:	0f 90       	pop	r0
     3ce:	0f 90       	pop	r0
     3d0:	0f 90       	pop	r0
     3d2:	0e 94 9a 00 	call	0x134	; 0x134 <i2cReset>
}
     3d6:	00 00       	nop
     3d8:	0f 90       	pop	r0
     3da:	0f 90       	pop	r0
     3dc:	0f 90       	pop	r0
     3de:	df 91       	pop	r29
     3e0:	cf 91       	pop	r28
     3e2:	08 95       	ret

000003e4 <read>:

static inline int read (uint16_t addr) {
     3e4:	cf 93       	push	r28
     3e6:	df 93       	push	r29
     3e8:	00 d0       	rcall	.+0      	; 0x3ea <read+0x6>
     3ea:	1f 92       	push	r1
     3ec:	cd b7       	in	r28, 0x3d	; 61
     3ee:	de b7       	in	r29, 0x3e	; 62
     3f0:	9b 83       	std	Y+3, r25	; 0x03
     3f2:	8a 83       	std	Y+2, r24	; 0x02
  i2cStart();
     3f4:	0e 94 7e 00 	call	0xfc	; 0xfc <i2cStart>
  i2cCheck(0x08, "I2C start");
     3f8:	89 eb       	ldi	r24, 0xB9	; 185
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	fc 01       	movw	r30, r24
     3fe:	80 81       	ld	r24, Z
     400:	88 2f       	mov	r24, r24
     402:	90 e0       	ldi	r25, 0x00	; 0
     404:	88 7f       	andi	r24, 0xF8	; 248
     406:	99 27       	eor	r25, r25
     408:	08 97       	sbiw	r24, 0x08	; 8
     40a:	d1 f0       	breq	.+52     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
     40c:	89 eb       	ldi	r24, 0xB9	; 185
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	fc 01       	movw	r30, r24
     412:	80 81       	ld	r24, Z
     414:	88 2f       	mov	r24, r24
     416:	90 e0       	ldi	r25, 0x00	; 0
     418:	88 7f       	andi	r24, 0xF8	; 248
     41a:	99 27       	eor	r25, r25
     41c:	29 2f       	mov	r18, r25
     41e:	2f 93       	push	r18
     420:	8f 93       	push	r24
     422:	81 e0       	ldi	r24, 0x01	; 1
     424:	91 e0       	ldi	r25, 0x01	; 1
     426:	89 2f       	mov	r24, r25
     428:	8f 93       	push	r24
     42a:	81 e0       	ldi	r24, 0x01	; 1
     42c:	91 e0       	ldi	r25, 0x01	; 1
     42e:	8f 93       	push	r24
     430:	0e 94 1d 04 	call	0x83a	; 0x83a <printf>
     434:	0f 90       	pop	r0
     436:	0f 90       	pop	r0
     438:	0f 90       	pop	r0
     43a:	0f 90       	pop	r0
     43c:	0e 94 9a 00 	call	0x134	; 0x134 <i2cReset>
    
  // dummy write  
  i2cSend(eeprom_addr | ((addr & 0x100) >> 7));
     440:	8a 81       	ldd	r24, Y+2	; 0x02
     442:	9b 81       	ldd	r25, Y+3	; 0x03
     444:	88 27       	eor	r24, r24
     446:	91 70       	andi	r25, 0x01	; 1
     448:	88 0f       	add	r24, r24
     44a:	89 2f       	mov	r24, r25
     44c:	88 1f       	adc	r24, r24
     44e:	99 0b       	sbc	r25, r25
     450:	91 95       	neg	r25
     452:	98 2f       	mov	r25, r24
     454:	80 ea       	ldi	r24, 0xA0	; 160
     456:	89 2b       	or	r24, r25
     458:	0e 94 cb 00 	call	0x196	; 0x196 <i2cSend>
  i2cCheck(0x18, "I2C EEPROM write request");
     45c:	89 eb       	ldi	r24, 0xB9	; 185
     45e:	90 e0       	ldi	r25, 0x00	; 0
     460:	fc 01       	movw	r30, r24
     462:	80 81       	ld	r24, Z
     464:	88 2f       	mov	r24, r24
     466:	90 e0       	ldi	r25, 0x00	; 0
     468:	88 7f       	andi	r24, 0xF8	; 248
     46a:	99 27       	eor	r25, r25
     46c:	48 97       	sbiw	r24, 0x18	; 24
     46e:	d1 f0       	breq	.+52     	; 0x4a4 <__EEPROM_REGION_LENGTH__+0xa4>
     470:	89 eb       	ldi	r24, 0xB9	; 185
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	fc 01       	movw	r30, r24
     476:	80 81       	ld	r24, Z
     478:	88 2f       	mov	r24, r24
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	88 7f       	andi	r24, 0xF8	; 248
     47e:	99 27       	eor	r25, r25
     480:	29 2f       	mov	r18, r25
     482:	2f 93       	push	r18
     484:	8f 93       	push	r24
     486:	82 e2       	ldi	r24, 0x22	; 34
     488:	91 e0       	ldi	r25, 0x01	; 1
     48a:	89 2f       	mov	r24, r25
     48c:	8f 93       	push	r24
     48e:	82 e2       	ldi	r24, 0x22	; 34
     490:	91 e0       	ldi	r25, 0x01	; 1
     492:	8f 93       	push	r24
     494:	0e 94 1d 04 	call	0x83a	; 0x83a <printf>
     498:	0f 90       	pop	r0
     49a:	0f 90       	pop	r0
     49c:	0f 90       	pop	r0
     49e:	0f 90       	pop	r0
     4a0:	0e 94 9a 00 	call	0x134	; 0x134 <i2cReset>
  i2cSend(addr & 0xff);
     4a4:	8a 81       	ldd	r24, Y+2	; 0x02
     4a6:	0e 94 cb 00 	call	0x196	; 0x196 <i2cSend>
  i2cCheck(0x28, "I2C EEPROM set address");
     4aa:	89 eb       	ldi	r24, 0xB9	; 185
     4ac:	90 e0       	ldi	r25, 0x00	; 0
     4ae:	fc 01       	movw	r30, r24
     4b0:	80 81       	ld	r24, Z
     4b2:	88 2f       	mov	r24, r24
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	88 7f       	andi	r24, 0xF8	; 248
     4b8:	99 27       	eor	r25, r25
     4ba:	88 97       	sbiw	r24, 0x28	; 40
     4bc:	d1 f0       	breq	.+52     	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
     4be:	89 eb       	ldi	r24, 0xB9	; 185
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	fc 01       	movw	r30, r24
     4c4:	80 81       	ld	r24, Z
     4c6:	88 2f       	mov	r24, r24
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	88 7f       	andi	r24, 0xF8	; 248
     4cc:	99 27       	eor	r25, r25
     4ce:	29 2f       	mov	r18, r25
     4d0:	2f 93       	push	r18
     4d2:	8f 93       	push	r24
     4d4:	82 e5       	ldi	r24, 0x52	; 82
     4d6:	91 e0       	ldi	r25, 0x01	; 1
     4d8:	89 2f       	mov	r24, r25
     4da:	8f 93       	push	r24
     4dc:	82 e5       	ldi	r24, 0x52	; 82
     4de:	91 e0       	ldi	r25, 0x01	; 1
     4e0:	8f 93       	push	r24
     4e2:	0e 94 1d 04 	call	0x83a	; 0x83a <printf>
     4e6:	0f 90       	pop	r0
     4e8:	0f 90       	pop	r0
     4ea:	0f 90       	pop	r0
     4ec:	0f 90       	pop	r0
     4ee:	0e 94 9a 00 	call	0x134	; 0x134 <i2cReset>
  
  // read
  i2cStart();
     4f2:	0e 94 7e 00 	call	0xfc	; 0xfc <i2cStart>
  i2cCheck(0x10, "I2C second start");
     4f6:	89 eb       	ldi	r24, 0xB9	; 185
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	fc 01       	movw	r30, r24
     4fc:	80 81       	ld	r24, Z
     4fe:	88 2f       	mov	r24, r24
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	88 7f       	andi	r24, 0xF8	; 248
     504:	99 27       	eor	r25, r25
     506:	40 97       	sbiw	r24, 0x10	; 16
     508:	d1 f0       	breq	.+52     	; 0x53e <__EEPROM_REGION_LENGTH__+0x13e>
     50a:	89 eb       	ldi	r24, 0xB9	; 185
     50c:	90 e0       	ldi	r25, 0x00	; 0
     50e:	fc 01       	movw	r30, r24
     510:	80 81       	ld	r24, Z
     512:	88 2f       	mov	r24, r24
     514:	90 e0       	ldi	r25, 0x00	; 0
     516:	88 7f       	andi	r24, 0xF8	; 248
     518:	99 27       	eor	r25, r25
     51a:	29 2f       	mov	r18, r25
     51c:	2f 93       	push	r18
     51e:	8f 93       	push	r24
     520:	80 ea       	ldi	r24, 0xA0	; 160
     522:	91 e0       	ldi	r25, 0x01	; 1
     524:	89 2f       	mov	r24, r25
     526:	8f 93       	push	r24
     528:	80 ea       	ldi	r24, 0xA0	; 160
     52a:	91 e0       	ldi	r25, 0x01	; 1
     52c:	8f 93       	push	r24
     52e:	0e 94 1d 04 	call	0x83a	; 0x83a <printf>
     532:	0f 90       	pop	r0
     534:	0f 90       	pop	r0
     536:	0f 90       	pop	r0
     538:	0f 90       	pop	r0
     53a:	0e 94 9a 00 	call	0x134	; 0x134 <i2cReset>

  i2cSend(eeprom_addr | 0x1 | ((addr & 0x100) >> 7));
     53e:	8a 81       	ldd	r24, Y+2	; 0x02
     540:	9b 81       	ldd	r25, Y+3	; 0x03
     542:	88 27       	eor	r24, r24
     544:	91 70       	andi	r25, 0x01	; 1
     546:	88 0f       	add	r24, r24
     548:	89 2f       	mov	r24, r25
     54a:	88 1f       	adc	r24, r24
     54c:	99 0b       	sbc	r25, r25
     54e:	91 95       	neg	r25
     550:	98 2f       	mov	r25, r24
     552:	80 ea       	ldi	r24, 0xA0	; 160
     554:	89 2b       	or	r24, r25
     556:	81 60       	ori	r24, 0x01	; 1
     558:	0e 94 cb 00 	call	0x196	; 0x196 <i2cSend>
  i2cCheck(0x40, "I2C EEPROM read request");
     55c:	89 eb       	ldi	r24, 0xB9	; 185
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	fc 01       	movw	r30, r24
     562:	80 81       	ld	r24, Z
     564:	88 2f       	mov	r24, r24
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	88 7f       	andi	r24, 0xF8	; 248
     56a:	99 27       	eor	r25, r25
     56c:	80 34       	cpi	r24, 0x40	; 64
     56e:	91 05       	cpc	r25, r1
     570:	d1 f0       	breq	.+52     	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
     572:	89 eb       	ldi	r24, 0xB9	; 185
     574:	90 e0       	ldi	r25, 0x00	; 0
     576:	fc 01       	movw	r30, r24
     578:	80 81       	ld	r24, Z
     57a:	88 2f       	mov	r24, r24
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	88 7f       	andi	r24, 0xF8	; 248
     580:	99 27       	eor	r25, r25
     582:	29 2f       	mov	r18, r25
     584:	2f 93       	push	r18
     586:	8f 93       	push	r24
     588:	88 ec       	ldi	r24, 0xC8	; 200
     58a:	91 e0       	ldi	r25, 0x01	; 1
     58c:	89 2f       	mov	r24, r25
     58e:	8f 93       	push	r24
     590:	88 ec       	ldi	r24, 0xC8	; 200
     592:	91 e0       	ldi	r25, 0x01	; 1
     594:	8f 93       	push	r24
     596:	0e 94 1d 04 	call	0x83a	; 0x83a <printf>
     59a:	0f 90       	pop	r0
     59c:	0f 90       	pop	r0
     59e:	0f 90       	pop	r0
     5a0:	0f 90       	pop	r0
     5a2:	0e 94 9a 00 	call	0x134	; 0x134 <i2cReset>

  uint8_t data = i2cReadNoAck();
     5a6:	0e 94 b9 00 	call	0x172	; 0x172 <i2cReadNoAck>
     5aa:	89 83       	std	Y+1, r24	; 0x01
  i2cCheck(0x58, "I2C EEPROM read");
     5ac:	89 eb       	ldi	r24, 0xB9	; 185
     5ae:	90 e0       	ldi	r25, 0x00	; 0
     5b0:	fc 01       	movw	r30, r24
     5b2:	80 81       	ld	r24, Z
     5b4:	88 2f       	mov	r24, r24
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	88 7f       	andi	r24, 0xF8	; 248
     5ba:	99 27       	eor	r25, r25
     5bc:	88 35       	cpi	r24, 0x58	; 88
     5be:	91 05       	cpc	r25, r1
     5c0:	d1 f0       	breq	.+52     	; 0x5f6 <__EEPROM_REGION_LENGTH__+0x1f6>
     5c2:	89 eb       	ldi	r24, 0xB9	; 185
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	fc 01       	movw	r30, r24
     5c8:	80 81       	ld	r24, Z
     5ca:	88 2f       	mov	r24, r24
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	88 7f       	andi	r24, 0xF8	; 248
     5d0:	99 27       	eor	r25, r25
     5d2:	29 2f       	mov	r18, r25
     5d4:	2f 93       	push	r18
     5d6:	8f 93       	push	r24
     5d8:	87 ef       	ldi	r24, 0xF7	; 247
     5da:	91 e0       	ldi	r25, 0x01	; 1
     5dc:	89 2f       	mov	r24, r25
     5de:	8f 93       	push	r24
     5e0:	87 ef       	ldi	r24, 0xF7	; 247
     5e2:	91 e0       	ldi	r25, 0x01	; 1
     5e4:	8f 93       	push	r24
     5e6:	0e 94 1d 04 	call	0x83a	; 0x83a <printf>
     5ea:	0f 90       	pop	r0
     5ec:	0f 90       	pop	r0
     5ee:	0f 90       	pop	r0
     5f0:	0f 90       	pop	r0
     5f2:	0e 94 9a 00 	call	0x134	; 0x134 <i2cReset>
  
  i2cStop();
     5f6:	0e 94 8d 00 	call	0x11a	; 0x11a <i2cStop>
  i2cCheck(0xf8, "I2C stop");
     5fa:	89 eb       	ldi	r24, 0xB9	; 185
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	fc 01       	movw	r30, r24
     600:	80 81       	ld	r24, Z
     602:	88 2f       	mov	r24, r24
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	88 7f       	andi	r24, 0xF8	; 248
     608:	99 27       	eor	r25, r25
     60a:	88 3f       	cpi	r24, 0xF8	; 248
     60c:	91 05       	cpc	r25, r1
     60e:	d1 f0       	breq	.+52     	; 0x644 <__EEPROM_REGION_LENGTH__+0x244>
     610:	89 eb       	ldi	r24, 0xB9	; 185
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	fc 01       	movw	r30, r24
     616:	80 81       	ld	r24, Z
     618:	88 2f       	mov	r24, r24
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	88 7f       	andi	r24, 0xF8	; 248
     61e:	99 27       	eor	r25, r25
     620:	29 2f       	mov	r18, r25
     622:	2f 93       	push	r18
     624:	8f 93       	push	r24
     626:	80 e8       	ldi	r24, 0x80	; 128
     628:	91 e0       	ldi	r25, 0x01	; 1
     62a:	89 2f       	mov	r24, r25
     62c:	8f 93       	push	r24
     62e:	80 e8       	ldi	r24, 0x80	; 128
     630:	91 e0       	ldi	r25, 0x01	; 1
     632:	8f 93       	push	r24
     634:	0e 94 1d 04 	call	0x83a	; 0x83a <printf>
     638:	0f 90       	pop	r0
     63a:	0f 90       	pop	r0
     63c:	0f 90       	pop	r0
     63e:	0f 90       	pop	r0
     640:	0e 94 9a 00 	call	0x134	; 0x134 <i2cReset>
  return data;
     644:	89 81       	ldd	r24, Y+1	; 0x01
     646:	88 2f       	mov	r24, r24
     648:	90 e0       	ldi	r25, 0x00	; 0
}
     64a:	0f 90       	pop	r0
     64c:	0f 90       	pop	r0
     64e:	0f 90       	pop	r0
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	08 95       	ret

00000656 <main>:

int main()
{
     656:	cf 93       	push	r28
     658:	df 93       	push	r29
     65a:	cd b7       	in	r28, 0x3d	; 61
     65c:	de b7       	in	r29, 0x3e	; 62
     65e:	2e 97       	sbiw	r28, 0x0e	; 14
     660:	0f b6       	in	r0, 0x3f	; 63
     662:	f8 94       	cli
     664:	de bf       	out	0x3e, r29	; 62
     666:	0f be       	out	0x3f, r0	; 63
     668:	cd bf       	out	0x3d, r28	; 61
  // zainicjalizuj UART
  uart_init();
     66a:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <uart_init>
  // skonfiguruj strumienie wejścia/wyjścia
  fdev_setup_stream(&uart_file, uart_transmit, uart_receive, _FDEV_SETUP_RW);
     66e:	8f ef       	ldi	r24, 0xFF	; 255
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	90 93 9d 02 	sts	0x029D, r25	; 0x80029d <__data_end+0x9>
     676:	80 93 9c 02 	sts	0x029C, r24	; 0x80029c <__data_end+0x8>
     67a:	80 e2       	ldi	r24, 0x20	; 32
     67c:	91 e0       	ldi	r25, 0x01	; 1
     67e:	90 93 9f 02 	sts	0x029F, r25	; 0x80029f <__data_end+0xb>
     682:	80 93 9e 02 	sts	0x029E, r24	; 0x80029e <__data_end+0xa>
     686:	83 e0       	ldi	r24, 0x03	; 3
     688:	80 93 97 02 	sts	0x0297, r24	; 0x800297 <__data_end+0x3>
     68c:	10 92 a1 02 	sts	0x02A1, r1	; 0x8002a1 <__data_end+0xd>
     690:	10 92 a0 02 	sts	0x02A0, r1	; 0x8002a0 <__data_end+0xc>
  stdin = stdout = stderr = &uart_file;
     694:	84 e9       	ldi	r24, 0x94	; 148
     696:	92 e0       	ldi	r25, 0x02	; 2
     698:	90 93 a7 02 	sts	0x02A7, r25	; 0x8002a7 <__iob+0x5>
     69c:	80 93 a6 02 	sts	0x02A6, r24	; 0x8002a6 <__iob+0x4>
     6a0:	80 91 a6 02 	lds	r24, 0x02A6	; 0x8002a6 <__iob+0x4>
     6a4:	90 91 a7 02 	lds	r25, 0x02A7	; 0x8002a7 <__iob+0x5>
     6a8:	90 93 a5 02 	sts	0x02A5, r25	; 0x8002a5 <__iob+0x3>
     6ac:	80 93 a4 02 	sts	0x02A4, r24	; 0x8002a4 <__iob+0x2>
     6b0:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <__iob+0x2>
     6b4:	90 91 a5 02 	lds	r25, 0x02A5	; 0x8002a5 <__iob+0x3>
     6b8:	90 93 a3 02 	sts	0x02A3, r25	; 0x8002a3 <__iob+0x1>
     6bc:	80 93 a2 02 	sts	0x02A2, r24	; 0x8002a2 <__iob>

  // zainicjalizuj I2C
  i2cInit();
     6c0:	0e 94 59 00 	call	0xb2	; 0xb2 <i2cInit>


  uint16_t addr = 0;
     6c4:	1b 82       	std	Y+3, r1	; 0x03
     6c6:	1a 82       	std	Y+2, r1	; 0x02
  volatile uint8_t val = 0;
     6c8:	1c 82       	std	Y+4, r1	; 0x04
  char command[10];

  while(1) {
    scanf("%s", command);
     6ca:	ce 01       	movw	r24, r28
     6cc:	05 96       	adiw	r24, 0x05	; 5
     6ce:	29 2f       	mov	r18, r25
     6d0:	2f 93       	push	r18
     6d2:	8f 93       	push	r24
     6d4:	8e e1       	ldi	r24, 0x1E	; 30
     6d6:	92 e0       	ldi	r25, 0x02	; 2
     6d8:	89 2f       	mov	r24, r25
     6da:	8f 93       	push	r24
     6dc:	8e e1       	ldi	r24, 0x1E	; 30
     6de:	92 e0       	ldi	r25, 0x02	; 2
     6e0:	8f 93       	push	r24
     6e2:	0e 94 63 04 	call	0x8c6	; 0x8c6 <scanf>
     6e6:	0f 90       	pop	r0
     6e8:	0f 90       	pop	r0
     6ea:	0f 90       	pop	r0
     6ec:	0f 90       	pop	r0

    if (strcmp(command, "read") == 0) {
     6ee:	ce 01       	movw	r24, r28
     6f0:	05 96       	adiw	r24, 0x05	; 5
     6f2:	61 e2       	ldi	r22, 0x21	; 33
     6f4:	72 e0       	ldi	r23, 0x02	; 2
     6f6:	0e 94 14 04 	call	0x828	; 0x828 <strcmp>
     6fa:	89 2b       	or	r24, r25
     6fc:	d1 f5       	brne	.+116    	; 0x772 <main+0x11c>
      scanf("%x", &addr);
     6fe:	ce 01       	movw	r24, r28
     700:	02 96       	adiw	r24, 0x02	; 2
     702:	29 2f       	mov	r18, r25
     704:	2f 93       	push	r18
     706:	8f 93       	push	r24
     708:	86 e2       	ldi	r24, 0x26	; 38
     70a:	92 e0       	ldi	r25, 0x02	; 2
     70c:	89 2f       	mov	r24, r25
     70e:	8f 93       	push	r24
     710:	86 e2       	ldi	r24, 0x26	; 38
     712:	92 e0       	ldi	r25, 0x02	; 2
     714:	8f 93       	push	r24
     716:	0e 94 63 04 	call	0x8c6	; 0x8c6 <scanf>
     71a:	0f 90       	pop	r0
     71c:	0f 90       	pop	r0
     71e:	0f 90       	pop	r0
     720:	0f 90       	pop	r0
      
      uint8_t res = read(addr);
     722:	8a 81       	ldd	r24, Y+2	; 0x02
     724:	9b 81       	ldd	r25, Y+3	; 0x03
     726:	0e 94 f2 01 	call	0x3e4	; 0x3e4 <read>
     72a:	89 83       	std	Y+1, r24	; 0x01
      printf("Read: %.3x: hex:%x dec:%d\r\n", addr, res, res);
     72c:	89 81       	ldd	r24, Y+1	; 0x01
     72e:	48 2f       	mov	r20, r24
     730:	50 e0       	ldi	r21, 0x00	; 0
     732:	89 81       	ldd	r24, Y+1	; 0x01
     734:	28 2f       	mov	r18, r24
     736:	30 e0       	ldi	r19, 0x00	; 0
     738:	8a 81       	ldd	r24, Y+2	; 0x02
     73a:	9b 81       	ldd	r25, Y+3	; 0x03
     73c:	65 2f       	mov	r22, r21
     73e:	6f 93       	push	r22
     740:	4f 93       	push	r20
     742:	43 2f       	mov	r20, r19
     744:	4f 93       	push	r20
     746:	2f 93       	push	r18
     748:	29 2f       	mov	r18, r25
     74a:	2f 93       	push	r18
     74c:	8f 93       	push	r24
     74e:	89 e2       	ldi	r24, 0x29	; 41
     750:	92 e0       	ldi	r25, 0x02	; 2
     752:	89 2f       	mov	r24, r25
     754:	8f 93       	push	r24
     756:	89 e2       	ldi	r24, 0x29	; 41
     758:	92 e0       	ldi	r25, 0x02	; 2
     75a:	8f 93       	push	r24
     75c:	0e 94 1d 04 	call	0x83a	; 0x83a <printf>
     760:	8d b7       	in	r24, 0x3d	; 61
     762:	9e b7       	in	r25, 0x3e	; 62
     764:	08 96       	adiw	r24, 0x08	; 8
     766:	0f b6       	in	r0, 0x3f	; 63
     768:	f8 94       	cli
     76a:	de bf       	out	0x3e, r29	; 62
     76c:	0f be       	out	0x3f, r0	; 63
     76e:	cd bf       	out	0x3d, r28	; 61
     770:	ac cf       	rjmp	.-168    	; 0x6ca <main+0x74>
    }
    else if (strcmp(command, "write") == 0) {
     772:	ce 01       	movw	r24, r28
     774:	05 96       	adiw	r24, 0x05	; 5
     776:	65 e4       	ldi	r22, 0x45	; 69
     778:	72 e0       	ldi	r23, 0x02	; 2
     77a:	0e 94 14 04 	call	0x828	; 0x828 <strcmp>
     77e:	89 2b       	or	r24, r25
     780:	09 f0       	breq	.+2      	; 0x784 <main+0x12e>
     782:	4d c0       	rjmp	.+154    	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
      scanf("%x", &addr);
     784:	ce 01       	movw	r24, r28
     786:	02 96       	adiw	r24, 0x02	; 2
     788:	29 2f       	mov	r18, r25
     78a:	2f 93       	push	r18
     78c:	8f 93       	push	r24
     78e:	86 e2       	ldi	r24, 0x26	; 38
     790:	92 e0       	ldi	r25, 0x02	; 2
     792:	89 2f       	mov	r24, r25
     794:	8f 93       	push	r24
     796:	86 e2       	ldi	r24, 0x26	; 38
     798:	92 e0       	ldi	r25, 0x02	; 2
     79a:	8f 93       	push	r24
     79c:	0e 94 63 04 	call	0x8c6	; 0x8c6 <scanf>
     7a0:	0f 90       	pop	r0
     7a2:	0f 90       	pop	r0
     7a4:	0f 90       	pop	r0
     7a6:	0f 90       	pop	r0
      scanf("%d", &val);
     7a8:	ce 01       	movw	r24, r28
     7aa:	04 96       	adiw	r24, 0x04	; 4
     7ac:	29 2f       	mov	r18, r25
     7ae:	2f 93       	push	r18
     7b0:	8f 93       	push	r24
     7b2:	8b e4       	ldi	r24, 0x4B	; 75
     7b4:	92 e0       	ldi	r25, 0x02	; 2
     7b6:	89 2f       	mov	r24, r25
     7b8:	8f 93       	push	r24
     7ba:	8b e4       	ldi	r24, 0x4B	; 75
     7bc:	92 e0       	ldi	r25, 0x02	; 2
     7be:	8f 93       	push	r24
     7c0:	0e 94 63 04 	call	0x8c6	; 0x8c6 <scanf>
     7c4:	0f 90       	pop	r0
     7c6:	0f 90       	pop	r0
     7c8:	0f 90       	pop	r0
     7ca:	0f 90       	pop	r0

      write(addr, val);
     7cc:	2c 81       	ldd	r18, Y+4	; 0x04
     7ce:	8a 81       	ldd	r24, Y+2	; 0x02
     7d0:	9b 81       	ldd	r25, Y+3	; 0x03
     7d2:	62 2f       	mov	r22, r18
     7d4:	0e 94 39 01 	call	0x272	; 0x272 <write>
      printf("Write: %.3x: hex:%x dec:%d\r\n", addr, val, val);
     7d8:	8c 81       	ldd	r24, Y+4	; 0x04
     7da:	48 2f       	mov	r20, r24
     7dc:	50 e0       	ldi	r21, 0x00	; 0
     7de:	8c 81       	ldd	r24, Y+4	; 0x04
     7e0:	28 2f       	mov	r18, r24
     7e2:	30 e0       	ldi	r19, 0x00	; 0
     7e4:	8a 81       	ldd	r24, Y+2	; 0x02
     7e6:	9b 81       	ldd	r25, Y+3	; 0x03
     7e8:	65 2f       	mov	r22, r21
     7ea:	6f 93       	push	r22
     7ec:	4f 93       	push	r20
     7ee:	43 2f       	mov	r20, r19
     7f0:	4f 93       	push	r20
     7f2:	2f 93       	push	r18
     7f4:	29 2f       	mov	r18, r25
     7f6:	2f 93       	push	r18
     7f8:	8f 93       	push	r24
     7fa:	8e e4       	ldi	r24, 0x4E	; 78
     7fc:	92 e0       	ldi	r25, 0x02	; 2
     7fe:	89 2f       	mov	r24, r25
     800:	8f 93       	push	r24
     802:	8e e4       	ldi	r24, 0x4E	; 78
     804:	92 e0       	ldi	r25, 0x02	; 2
     806:	8f 93       	push	r24
     808:	0e 94 1d 04 	call	0x83a	; 0x83a <printf>
     80c:	8d b7       	in	r24, 0x3d	; 61
     80e:	9e b7       	in	r25, 0x3e	; 62
     810:	08 96       	adiw	r24, 0x08	; 8
     812:	0f b6       	in	r0, 0x3f	; 63
     814:	f8 94       	cli
     816:	de bf       	out	0x3e, r29	; 62
     818:	0f be       	out	0x3f, r0	; 63
     81a:	cd bf       	out	0x3d, r28	; 61
     81c:	56 cf       	rjmp	.-340    	; 0x6ca <main+0x74>
    }
    else
      printf("Invalid command. Use write/read instead\r\n");
     81e:	8b e6       	ldi	r24, 0x6B	; 107
     820:	92 e0       	ldi	r25, 0x02	; 2
     822:	0e 94 33 04 	call	0x866	; 0x866 <puts>
  }
     826:	51 cf       	rjmp	.-350    	; 0x6ca <main+0x74>

00000828 <strcmp>:
     828:	fb 01       	movw	r30, r22
     82a:	dc 01       	movw	r26, r24
     82c:	8d 91       	ld	r24, X+
     82e:	01 90       	ld	r0, Z+
     830:	80 19       	sub	r24, r0
     832:	01 10       	cpse	r0, r1
     834:	d9 f3       	breq	.-10     	; 0x82c <strcmp+0x4>
     836:	99 0b       	sbc	r25, r25
     838:	08 95       	ret

0000083a <printf>:
     83a:	a0 e0       	ldi	r26, 0x00	; 0
     83c:	b0 e0       	ldi	r27, 0x00	; 0
     83e:	e3 e2       	ldi	r30, 0x23	; 35
     840:	f4 e0       	ldi	r31, 0x04	; 4
     842:	0c 94 35 0a 	jmp	0x146a	; 0x146a <__prologue_saves__+0x20>
     846:	ae 01       	movw	r20, r28
     848:	4b 5f       	subi	r20, 0xFB	; 251
     84a:	5f 4f       	sbci	r21, 0xFF	; 255
     84c:	fa 01       	movw	r30, r20
     84e:	61 91       	ld	r22, Z+
     850:	71 91       	ld	r23, Z+
     852:	af 01       	movw	r20, r30
     854:	80 91 a4 02 	lds	r24, 0x02A4	; 0x8002a4 <__iob+0x2>
     858:	90 91 a5 02 	lds	r25, 0x02A5	; 0x8002a5 <__iob+0x3>
     85c:	0e 94 79 04 	call	0x8f2	; 0x8f2 <vfprintf>
     860:	e2 e0       	ldi	r30, 0x02	; 2
     862:	0c 94 51 0a 	jmp	0x14a2	; 0x14a2 <__epilogue_restores__+0x20>

00000866 <puts>:
     866:	0f 93       	push	r16
     868:	1f 93       	push	r17
     86a:	cf 93       	push	r28
     86c:	df 93       	push	r29
     86e:	e0 91 a4 02 	lds	r30, 0x02A4	; 0x8002a4 <__iob+0x2>
     872:	f0 91 a5 02 	lds	r31, 0x02A5	; 0x8002a5 <__iob+0x3>
     876:	23 81       	ldd	r18, Z+3	; 0x03
     878:	21 ff       	sbrs	r18, 1
     87a:	1b c0       	rjmp	.+54     	; 0x8b2 <puts+0x4c>
     87c:	8c 01       	movw	r16, r24
     87e:	d0 e0       	ldi	r29, 0x00	; 0
     880:	c0 e0       	ldi	r28, 0x00	; 0
     882:	f8 01       	movw	r30, r16
     884:	81 91       	ld	r24, Z+
     886:	8f 01       	movw	r16, r30
     888:	60 91 a4 02 	lds	r22, 0x02A4	; 0x8002a4 <__iob+0x2>
     88c:	70 91 a5 02 	lds	r23, 0x02A5	; 0x8002a5 <__iob+0x3>
     890:	db 01       	movw	r26, r22
     892:	18 96       	adiw	r26, 0x08	; 8
     894:	ed 91       	ld	r30, X+
     896:	fc 91       	ld	r31, X
     898:	19 97       	sbiw	r26, 0x09	; 9
     89a:	88 23       	and	r24, r24
     89c:	31 f0       	breq	.+12     	; 0x8aa <puts+0x44>
     89e:	09 95       	icall
     8a0:	89 2b       	or	r24, r25
     8a2:	79 f3       	breq	.-34     	; 0x882 <puts+0x1c>
     8a4:	df ef       	ldi	r29, 0xFF	; 255
     8a6:	cf ef       	ldi	r28, 0xFF	; 255
     8a8:	ec cf       	rjmp	.-40     	; 0x882 <puts+0x1c>
     8aa:	8a e0       	ldi	r24, 0x0A	; 10
     8ac:	09 95       	icall
     8ae:	89 2b       	or	r24, r25
     8b0:	19 f0       	breq	.+6      	; 0x8b8 <puts+0x52>
     8b2:	8f ef       	ldi	r24, 0xFF	; 255
     8b4:	9f ef       	ldi	r25, 0xFF	; 255
     8b6:	02 c0       	rjmp	.+4      	; 0x8bc <puts+0x56>
     8b8:	8d 2f       	mov	r24, r29
     8ba:	9c 2f       	mov	r25, r28
     8bc:	df 91       	pop	r29
     8be:	cf 91       	pop	r28
     8c0:	1f 91       	pop	r17
     8c2:	0f 91       	pop	r16
     8c4:	08 95       	ret

000008c6 <scanf>:
     8c6:	a0 e0       	ldi	r26, 0x00	; 0
     8c8:	b0 e0       	ldi	r27, 0x00	; 0
     8ca:	e9 e6       	ldi	r30, 0x69	; 105
     8cc:	f4 e0       	ldi	r31, 0x04	; 4
     8ce:	0c 94 35 0a 	jmp	0x146a	; 0x146a <__prologue_saves__+0x20>
     8d2:	ae 01       	movw	r20, r28
     8d4:	4b 5f       	subi	r20, 0xFB	; 251
     8d6:	5f 4f       	sbci	r21, 0xFF	; 255
     8d8:	fa 01       	movw	r30, r20
     8da:	61 91       	ld	r22, Z+
     8dc:	71 91       	ld	r23, Z+
     8de:	af 01       	movw	r20, r30
     8e0:	80 91 a2 02 	lds	r24, 0x02A2	; 0x8002a2 <__iob>
     8e4:	90 91 a3 02 	lds	r25, 0x02A3	; 0x8002a3 <__iob+0x1>
     8e8:	0e 94 f6 07 	call	0xfec	; 0xfec <vfscanf>
     8ec:	e2 e0       	ldi	r30, 0x02	; 2
     8ee:	0c 94 51 0a 	jmp	0x14a2	; 0x14a2 <__epilogue_restores__+0x20>

000008f2 <vfprintf>:
     8f2:	ab e0       	ldi	r26, 0x0B	; 11
     8f4:	b0 e0       	ldi	r27, 0x00	; 0
     8f6:	ef e7       	ldi	r30, 0x7F	; 127
     8f8:	f4 e0       	ldi	r31, 0x04	; 4
     8fa:	0c 94 25 0a 	jmp	0x144a	; 0x144a <__prologue_saves__>
     8fe:	6c 01       	movw	r12, r24
     900:	7b 01       	movw	r14, r22
     902:	8a 01       	movw	r16, r20
     904:	fc 01       	movw	r30, r24
     906:	17 82       	std	Z+7, r1	; 0x07
     908:	16 82       	std	Z+6, r1	; 0x06
     90a:	83 81       	ldd	r24, Z+3	; 0x03
     90c:	81 ff       	sbrs	r24, 1
     90e:	cc c1       	rjmp	.+920    	; 0xca8 <__stack+0x3a9>
     910:	ce 01       	movw	r24, r28
     912:	01 96       	adiw	r24, 0x01	; 1
     914:	3c 01       	movw	r6, r24
     916:	f6 01       	movw	r30, r12
     918:	93 81       	ldd	r25, Z+3	; 0x03
     91a:	f7 01       	movw	r30, r14
     91c:	93 fd       	sbrc	r25, 3
     91e:	85 91       	lpm	r24, Z+
     920:	93 ff       	sbrs	r25, 3
     922:	81 91       	ld	r24, Z+
     924:	7f 01       	movw	r14, r30
     926:	88 23       	and	r24, r24
     928:	09 f4       	brne	.+2      	; 0x92c <__stack+0x2d>
     92a:	ba c1       	rjmp	.+884    	; 0xca0 <__stack+0x3a1>
     92c:	85 32       	cpi	r24, 0x25	; 37
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0x3f>
     930:	93 fd       	sbrc	r25, 3
     932:	85 91       	lpm	r24, Z+
     934:	93 ff       	sbrs	r25, 3
     936:	81 91       	ld	r24, Z+
     938:	7f 01       	movw	r14, r30
     93a:	85 32       	cpi	r24, 0x25	; 37
     93c:	29 f4       	brne	.+10     	; 0x948 <__stack+0x49>
     93e:	b6 01       	movw	r22, r12
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	0e 94 6f 09 	call	0x12de	; 0x12de <fputc>
     946:	e7 cf       	rjmp	.-50     	; 0x916 <__stack+0x17>
     948:	91 2c       	mov	r9, r1
     94a:	21 2c       	mov	r2, r1
     94c:	31 2c       	mov	r3, r1
     94e:	ff e1       	ldi	r31, 0x1F	; 31
     950:	f3 15       	cp	r31, r3
     952:	d8 f0       	brcs	.+54     	; 0x98a <__stack+0x8b>
     954:	8b 32       	cpi	r24, 0x2B	; 43
     956:	79 f0       	breq	.+30     	; 0x976 <__stack+0x77>
     958:	38 f4       	brcc	.+14     	; 0x968 <__stack+0x69>
     95a:	80 32       	cpi	r24, 0x20	; 32
     95c:	79 f0       	breq	.+30     	; 0x97c <__stack+0x7d>
     95e:	83 32       	cpi	r24, 0x23	; 35
     960:	a1 f4       	brne	.+40     	; 0x98a <__stack+0x8b>
     962:	23 2d       	mov	r18, r3
     964:	20 61       	ori	r18, 0x10	; 16
     966:	1d c0       	rjmp	.+58     	; 0x9a2 <__stack+0xa3>
     968:	8d 32       	cpi	r24, 0x2D	; 45
     96a:	61 f0       	breq	.+24     	; 0x984 <__stack+0x85>
     96c:	80 33       	cpi	r24, 0x30	; 48
     96e:	69 f4       	brne	.+26     	; 0x98a <__stack+0x8b>
     970:	23 2d       	mov	r18, r3
     972:	21 60       	ori	r18, 0x01	; 1
     974:	16 c0       	rjmp	.+44     	; 0x9a2 <__stack+0xa3>
     976:	83 2d       	mov	r24, r3
     978:	82 60       	ori	r24, 0x02	; 2
     97a:	38 2e       	mov	r3, r24
     97c:	e3 2d       	mov	r30, r3
     97e:	e4 60       	ori	r30, 0x04	; 4
     980:	3e 2e       	mov	r3, r30
     982:	2a c0       	rjmp	.+84     	; 0x9d8 <__stack+0xd9>
     984:	f3 2d       	mov	r31, r3
     986:	f8 60       	ori	r31, 0x08	; 8
     988:	1d c0       	rjmp	.+58     	; 0x9c4 <__stack+0xc5>
     98a:	37 fc       	sbrc	r3, 7
     98c:	2d c0       	rjmp	.+90     	; 0x9e8 <__stack+0xe9>
     98e:	20 ed       	ldi	r18, 0xD0	; 208
     990:	28 0f       	add	r18, r24
     992:	2a 30       	cpi	r18, 0x0A	; 10
     994:	40 f0       	brcs	.+16     	; 0x9a6 <__stack+0xa7>
     996:	8e 32       	cpi	r24, 0x2E	; 46
     998:	b9 f4       	brne	.+46     	; 0x9c8 <__stack+0xc9>
     99a:	36 fc       	sbrc	r3, 6
     99c:	81 c1       	rjmp	.+770    	; 0xca0 <__stack+0x3a1>
     99e:	23 2d       	mov	r18, r3
     9a0:	20 64       	ori	r18, 0x40	; 64
     9a2:	32 2e       	mov	r3, r18
     9a4:	19 c0       	rjmp	.+50     	; 0x9d8 <__stack+0xd9>
     9a6:	36 fe       	sbrs	r3, 6
     9a8:	06 c0       	rjmp	.+12     	; 0x9b6 <__stack+0xb7>
     9aa:	8a e0       	ldi	r24, 0x0A	; 10
     9ac:	98 9e       	mul	r9, r24
     9ae:	20 0d       	add	r18, r0
     9b0:	11 24       	eor	r1, r1
     9b2:	92 2e       	mov	r9, r18
     9b4:	11 c0       	rjmp	.+34     	; 0x9d8 <__stack+0xd9>
     9b6:	ea e0       	ldi	r30, 0x0A	; 10
     9b8:	2e 9e       	mul	r2, r30
     9ba:	20 0d       	add	r18, r0
     9bc:	11 24       	eor	r1, r1
     9be:	22 2e       	mov	r2, r18
     9c0:	f3 2d       	mov	r31, r3
     9c2:	f0 62       	ori	r31, 0x20	; 32
     9c4:	3f 2e       	mov	r3, r31
     9c6:	08 c0       	rjmp	.+16     	; 0x9d8 <__stack+0xd9>
     9c8:	8c 36       	cpi	r24, 0x6C	; 108
     9ca:	21 f4       	brne	.+8      	; 0x9d4 <__stack+0xd5>
     9cc:	83 2d       	mov	r24, r3
     9ce:	80 68       	ori	r24, 0x80	; 128
     9d0:	38 2e       	mov	r3, r24
     9d2:	02 c0       	rjmp	.+4      	; 0x9d8 <__stack+0xd9>
     9d4:	88 36       	cpi	r24, 0x68	; 104
     9d6:	41 f4       	brne	.+16     	; 0x9e8 <__stack+0xe9>
     9d8:	f7 01       	movw	r30, r14
     9da:	93 fd       	sbrc	r25, 3
     9dc:	85 91       	lpm	r24, Z+
     9de:	93 ff       	sbrs	r25, 3
     9e0:	81 91       	ld	r24, Z+
     9e2:	7f 01       	movw	r14, r30
     9e4:	81 11       	cpse	r24, r1
     9e6:	b3 cf       	rjmp	.-154    	; 0x94e <__stack+0x4f>
     9e8:	98 2f       	mov	r25, r24
     9ea:	9f 7d       	andi	r25, 0xDF	; 223
     9ec:	95 54       	subi	r25, 0x45	; 69
     9ee:	93 30       	cpi	r25, 0x03	; 3
     9f0:	28 f4       	brcc	.+10     	; 0x9fc <__stack+0xfd>
     9f2:	0c 5f       	subi	r16, 0xFC	; 252
     9f4:	1f 4f       	sbci	r17, 0xFF	; 255
     9f6:	9f e3       	ldi	r25, 0x3F	; 63
     9f8:	99 83       	std	Y+1, r25	; 0x01
     9fa:	0d c0       	rjmp	.+26     	; 0xa16 <__stack+0x117>
     9fc:	83 36       	cpi	r24, 0x63	; 99
     9fe:	31 f0       	breq	.+12     	; 0xa0c <__stack+0x10d>
     a00:	83 37       	cpi	r24, 0x73	; 115
     a02:	71 f0       	breq	.+28     	; 0xa20 <__stack+0x121>
     a04:	83 35       	cpi	r24, 0x53	; 83
     a06:	09 f0       	breq	.+2      	; 0xa0a <__stack+0x10b>
     a08:	59 c0       	rjmp	.+178    	; 0xabc <__stack+0x1bd>
     a0a:	21 c0       	rjmp	.+66     	; 0xa4e <__stack+0x14f>
     a0c:	f8 01       	movw	r30, r16
     a0e:	80 81       	ld	r24, Z
     a10:	89 83       	std	Y+1, r24	; 0x01
     a12:	0e 5f       	subi	r16, 0xFE	; 254
     a14:	1f 4f       	sbci	r17, 0xFF	; 255
     a16:	88 24       	eor	r8, r8
     a18:	83 94       	inc	r8
     a1a:	91 2c       	mov	r9, r1
     a1c:	53 01       	movw	r10, r6
     a1e:	13 c0       	rjmp	.+38     	; 0xa46 <__stack+0x147>
     a20:	28 01       	movw	r4, r16
     a22:	f2 e0       	ldi	r31, 0x02	; 2
     a24:	4f 0e       	add	r4, r31
     a26:	51 1c       	adc	r5, r1
     a28:	f8 01       	movw	r30, r16
     a2a:	a0 80       	ld	r10, Z
     a2c:	b1 80       	ldd	r11, Z+1	; 0x01
     a2e:	36 fe       	sbrs	r3, 6
     a30:	03 c0       	rjmp	.+6      	; 0xa38 <__stack+0x139>
     a32:	69 2d       	mov	r22, r9
     a34:	70 e0       	ldi	r23, 0x00	; 0
     a36:	02 c0       	rjmp	.+4      	; 0xa3c <__stack+0x13d>
     a38:	6f ef       	ldi	r22, 0xFF	; 255
     a3a:	7f ef       	ldi	r23, 0xFF	; 255
     a3c:	c5 01       	movw	r24, r10
     a3e:	0e 94 26 09 	call	0x124c	; 0x124c <strnlen>
     a42:	4c 01       	movw	r8, r24
     a44:	82 01       	movw	r16, r4
     a46:	f3 2d       	mov	r31, r3
     a48:	ff 77       	andi	r31, 0x7F	; 127
     a4a:	3f 2e       	mov	r3, r31
     a4c:	16 c0       	rjmp	.+44     	; 0xa7a <__stack+0x17b>
     a4e:	28 01       	movw	r4, r16
     a50:	22 e0       	ldi	r18, 0x02	; 2
     a52:	42 0e       	add	r4, r18
     a54:	51 1c       	adc	r5, r1
     a56:	f8 01       	movw	r30, r16
     a58:	a0 80       	ld	r10, Z
     a5a:	b1 80       	ldd	r11, Z+1	; 0x01
     a5c:	36 fe       	sbrs	r3, 6
     a5e:	03 c0       	rjmp	.+6      	; 0xa66 <__stack+0x167>
     a60:	69 2d       	mov	r22, r9
     a62:	70 e0       	ldi	r23, 0x00	; 0
     a64:	02 c0       	rjmp	.+4      	; 0xa6a <__stack+0x16b>
     a66:	6f ef       	ldi	r22, 0xFF	; 255
     a68:	7f ef       	ldi	r23, 0xFF	; 255
     a6a:	c5 01       	movw	r24, r10
     a6c:	0e 94 1b 09 	call	0x1236	; 0x1236 <strnlen_P>
     a70:	4c 01       	movw	r8, r24
     a72:	f3 2d       	mov	r31, r3
     a74:	f0 68       	ori	r31, 0x80	; 128
     a76:	3f 2e       	mov	r3, r31
     a78:	82 01       	movw	r16, r4
     a7a:	33 fc       	sbrc	r3, 3
     a7c:	1b c0       	rjmp	.+54     	; 0xab4 <__stack+0x1b5>
     a7e:	82 2d       	mov	r24, r2
     a80:	90 e0       	ldi	r25, 0x00	; 0
     a82:	88 16       	cp	r8, r24
     a84:	99 06       	cpc	r9, r25
     a86:	b0 f4       	brcc	.+44     	; 0xab4 <__stack+0x1b5>
     a88:	b6 01       	movw	r22, r12
     a8a:	80 e2       	ldi	r24, 0x20	; 32
     a8c:	90 e0       	ldi	r25, 0x00	; 0
     a8e:	0e 94 6f 09 	call	0x12de	; 0x12de <fputc>
     a92:	2a 94       	dec	r2
     a94:	f4 cf       	rjmp	.-24     	; 0xa7e <__stack+0x17f>
     a96:	f5 01       	movw	r30, r10
     a98:	37 fc       	sbrc	r3, 7
     a9a:	85 91       	lpm	r24, Z+
     a9c:	37 fe       	sbrs	r3, 7
     a9e:	81 91       	ld	r24, Z+
     aa0:	5f 01       	movw	r10, r30
     aa2:	b6 01       	movw	r22, r12
     aa4:	90 e0       	ldi	r25, 0x00	; 0
     aa6:	0e 94 6f 09 	call	0x12de	; 0x12de <fputc>
     aaa:	21 10       	cpse	r2, r1
     aac:	2a 94       	dec	r2
     aae:	21 e0       	ldi	r18, 0x01	; 1
     ab0:	82 1a       	sub	r8, r18
     ab2:	91 08       	sbc	r9, r1
     ab4:	81 14       	cp	r8, r1
     ab6:	91 04       	cpc	r9, r1
     ab8:	71 f7       	brne	.-36     	; 0xa96 <__stack+0x197>
     aba:	e8 c0       	rjmp	.+464    	; 0xc8c <__stack+0x38d>
     abc:	84 36       	cpi	r24, 0x64	; 100
     abe:	11 f0       	breq	.+4      	; 0xac4 <__stack+0x1c5>
     ac0:	89 36       	cpi	r24, 0x69	; 105
     ac2:	41 f5       	brne	.+80     	; 0xb14 <__stack+0x215>
     ac4:	f8 01       	movw	r30, r16
     ac6:	37 fe       	sbrs	r3, 7
     ac8:	07 c0       	rjmp	.+14     	; 0xad8 <__stack+0x1d9>
     aca:	60 81       	ld	r22, Z
     acc:	71 81       	ldd	r23, Z+1	; 0x01
     ace:	82 81       	ldd	r24, Z+2	; 0x02
     ad0:	93 81       	ldd	r25, Z+3	; 0x03
     ad2:	0c 5f       	subi	r16, 0xFC	; 252
     ad4:	1f 4f       	sbci	r17, 0xFF	; 255
     ad6:	08 c0       	rjmp	.+16     	; 0xae8 <__stack+0x1e9>
     ad8:	60 81       	ld	r22, Z
     ada:	71 81       	ldd	r23, Z+1	; 0x01
     adc:	07 2e       	mov	r0, r23
     ade:	00 0c       	add	r0, r0
     ae0:	88 0b       	sbc	r24, r24
     ae2:	99 0b       	sbc	r25, r25
     ae4:	0e 5f       	subi	r16, 0xFE	; 254
     ae6:	1f 4f       	sbci	r17, 0xFF	; 255
     ae8:	f3 2d       	mov	r31, r3
     aea:	ff 76       	andi	r31, 0x6F	; 111
     aec:	3f 2e       	mov	r3, r31
     aee:	97 ff       	sbrs	r25, 7
     af0:	09 c0       	rjmp	.+18     	; 0xb04 <__stack+0x205>
     af2:	90 95       	com	r25
     af4:	80 95       	com	r24
     af6:	70 95       	com	r23
     af8:	61 95       	neg	r22
     afa:	7f 4f       	sbci	r23, 0xFF	; 255
     afc:	8f 4f       	sbci	r24, 0xFF	; 255
     afe:	9f 4f       	sbci	r25, 0xFF	; 255
     b00:	f0 68       	ori	r31, 0x80	; 128
     b02:	3f 2e       	mov	r3, r31
     b04:	2a e0       	ldi	r18, 0x0A	; 10
     b06:	30 e0       	ldi	r19, 0x00	; 0
     b08:	a3 01       	movw	r20, r6
     b0a:	0e 94 c4 09 	call	0x1388	; 0x1388 <__ultoa_invert>
     b0e:	88 2e       	mov	r8, r24
     b10:	86 18       	sub	r8, r6
     b12:	45 c0       	rjmp	.+138    	; 0xb9e <__stack+0x29f>
     b14:	85 37       	cpi	r24, 0x75	; 117
     b16:	31 f4       	brne	.+12     	; 0xb24 <__stack+0x225>
     b18:	23 2d       	mov	r18, r3
     b1a:	2f 7e       	andi	r18, 0xEF	; 239
     b1c:	b2 2e       	mov	r11, r18
     b1e:	2a e0       	ldi	r18, 0x0A	; 10
     b20:	30 e0       	ldi	r19, 0x00	; 0
     b22:	25 c0       	rjmp	.+74     	; 0xb6e <__stack+0x26f>
     b24:	93 2d       	mov	r25, r3
     b26:	99 7f       	andi	r25, 0xF9	; 249
     b28:	b9 2e       	mov	r11, r25
     b2a:	8f 36       	cpi	r24, 0x6F	; 111
     b2c:	c1 f0       	breq	.+48     	; 0xb5e <__stack+0x25f>
     b2e:	18 f4       	brcc	.+6      	; 0xb36 <__stack+0x237>
     b30:	88 35       	cpi	r24, 0x58	; 88
     b32:	79 f0       	breq	.+30     	; 0xb52 <__stack+0x253>
     b34:	b5 c0       	rjmp	.+362    	; 0xca0 <__stack+0x3a1>
     b36:	80 37       	cpi	r24, 0x70	; 112
     b38:	19 f0       	breq	.+6      	; 0xb40 <__stack+0x241>
     b3a:	88 37       	cpi	r24, 0x78	; 120
     b3c:	21 f0       	breq	.+8      	; 0xb46 <__stack+0x247>
     b3e:	b0 c0       	rjmp	.+352    	; 0xca0 <__stack+0x3a1>
     b40:	e9 2f       	mov	r30, r25
     b42:	e0 61       	ori	r30, 0x10	; 16
     b44:	be 2e       	mov	r11, r30
     b46:	b4 fe       	sbrs	r11, 4
     b48:	0d c0       	rjmp	.+26     	; 0xb64 <__stack+0x265>
     b4a:	fb 2d       	mov	r31, r11
     b4c:	f4 60       	ori	r31, 0x04	; 4
     b4e:	bf 2e       	mov	r11, r31
     b50:	09 c0       	rjmp	.+18     	; 0xb64 <__stack+0x265>
     b52:	34 fe       	sbrs	r3, 4
     b54:	0a c0       	rjmp	.+20     	; 0xb6a <__stack+0x26b>
     b56:	29 2f       	mov	r18, r25
     b58:	26 60       	ori	r18, 0x06	; 6
     b5a:	b2 2e       	mov	r11, r18
     b5c:	06 c0       	rjmp	.+12     	; 0xb6a <__stack+0x26b>
     b5e:	28 e0       	ldi	r18, 0x08	; 8
     b60:	30 e0       	ldi	r19, 0x00	; 0
     b62:	05 c0       	rjmp	.+10     	; 0xb6e <__stack+0x26f>
     b64:	20 e1       	ldi	r18, 0x10	; 16
     b66:	30 e0       	ldi	r19, 0x00	; 0
     b68:	02 c0       	rjmp	.+4      	; 0xb6e <__stack+0x26f>
     b6a:	20 e1       	ldi	r18, 0x10	; 16
     b6c:	32 e0       	ldi	r19, 0x02	; 2
     b6e:	f8 01       	movw	r30, r16
     b70:	b7 fe       	sbrs	r11, 7
     b72:	07 c0       	rjmp	.+14     	; 0xb82 <__stack+0x283>
     b74:	60 81       	ld	r22, Z
     b76:	71 81       	ldd	r23, Z+1	; 0x01
     b78:	82 81       	ldd	r24, Z+2	; 0x02
     b7a:	93 81       	ldd	r25, Z+3	; 0x03
     b7c:	0c 5f       	subi	r16, 0xFC	; 252
     b7e:	1f 4f       	sbci	r17, 0xFF	; 255
     b80:	06 c0       	rjmp	.+12     	; 0xb8e <__stack+0x28f>
     b82:	60 81       	ld	r22, Z
     b84:	71 81       	ldd	r23, Z+1	; 0x01
     b86:	80 e0       	ldi	r24, 0x00	; 0
     b88:	90 e0       	ldi	r25, 0x00	; 0
     b8a:	0e 5f       	subi	r16, 0xFE	; 254
     b8c:	1f 4f       	sbci	r17, 0xFF	; 255
     b8e:	a3 01       	movw	r20, r6
     b90:	0e 94 c4 09 	call	0x1388	; 0x1388 <__ultoa_invert>
     b94:	88 2e       	mov	r8, r24
     b96:	86 18       	sub	r8, r6
     b98:	fb 2d       	mov	r31, r11
     b9a:	ff 77       	andi	r31, 0x7F	; 127
     b9c:	3f 2e       	mov	r3, r31
     b9e:	36 fe       	sbrs	r3, 6
     ba0:	0d c0       	rjmp	.+26     	; 0xbbc <__stack+0x2bd>
     ba2:	23 2d       	mov	r18, r3
     ba4:	2e 7f       	andi	r18, 0xFE	; 254
     ba6:	a2 2e       	mov	r10, r18
     ba8:	89 14       	cp	r8, r9
     baa:	58 f4       	brcc	.+22     	; 0xbc2 <__stack+0x2c3>
     bac:	34 fe       	sbrs	r3, 4
     bae:	0b c0       	rjmp	.+22     	; 0xbc6 <__stack+0x2c7>
     bb0:	32 fc       	sbrc	r3, 2
     bb2:	09 c0       	rjmp	.+18     	; 0xbc6 <__stack+0x2c7>
     bb4:	83 2d       	mov	r24, r3
     bb6:	8e 7e       	andi	r24, 0xEE	; 238
     bb8:	a8 2e       	mov	r10, r24
     bba:	05 c0       	rjmp	.+10     	; 0xbc6 <__stack+0x2c7>
     bbc:	b8 2c       	mov	r11, r8
     bbe:	a3 2c       	mov	r10, r3
     bc0:	03 c0       	rjmp	.+6      	; 0xbc8 <__stack+0x2c9>
     bc2:	b8 2c       	mov	r11, r8
     bc4:	01 c0       	rjmp	.+2      	; 0xbc8 <__stack+0x2c9>
     bc6:	b9 2c       	mov	r11, r9
     bc8:	a4 fe       	sbrs	r10, 4
     bca:	0f c0       	rjmp	.+30     	; 0xbea <__stack+0x2eb>
     bcc:	fe 01       	movw	r30, r28
     bce:	e8 0d       	add	r30, r8
     bd0:	f1 1d       	adc	r31, r1
     bd2:	80 81       	ld	r24, Z
     bd4:	80 33       	cpi	r24, 0x30	; 48
     bd6:	21 f4       	brne	.+8      	; 0xbe0 <__stack+0x2e1>
     bd8:	9a 2d       	mov	r25, r10
     bda:	99 7e       	andi	r25, 0xE9	; 233
     bdc:	a9 2e       	mov	r10, r25
     bde:	09 c0       	rjmp	.+18     	; 0xbf2 <__stack+0x2f3>
     be0:	a2 fe       	sbrs	r10, 2
     be2:	06 c0       	rjmp	.+12     	; 0xbf0 <__stack+0x2f1>
     be4:	b3 94       	inc	r11
     be6:	b3 94       	inc	r11
     be8:	04 c0       	rjmp	.+8      	; 0xbf2 <__stack+0x2f3>
     bea:	8a 2d       	mov	r24, r10
     bec:	86 78       	andi	r24, 0x86	; 134
     bee:	09 f0       	breq	.+2      	; 0xbf2 <__stack+0x2f3>
     bf0:	b3 94       	inc	r11
     bf2:	a3 fc       	sbrc	r10, 3
     bf4:	11 c0       	rjmp	.+34     	; 0xc18 <__stack+0x319>
     bf6:	a0 fe       	sbrs	r10, 0
     bf8:	06 c0       	rjmp	.+12     	; 0xc06 <__stack+0x307>
     bfa:	b2 14       	cp	r11, r2
     bfc:	88 f4       	brcc	.+34     	; 0xc20 <__stack+0x321>
     bfe:	28 0c       	add	r2, r8
     c00:	92 2c       	mov	r9, r2
     c02:	9b 18       	sub	r9, r11
     c04:	0e c0       	rjmp	.+28     	; 0xc22 <__stack+0x323>
     c06:	b2 14       	cp	r11, r2
     c08:	60 f4       	brcc	.+24     	; 0xc22 <__stack+0x323>
     c0a:	b6 01       	movw	r22, r12
     c0c:	80 e2       	ldi	r24, 0x20	; 32
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	0e 94 6f 09 	call	0x12de	; 0x12de <fputc>
     c14:	b3 94       	inc	r11
     c16:	f7 cf       	rjmp	.-18     	; 0xc06 <__stack+0x307>
     c18:	b2 14       	cp	r11, r2
     c1a:	18 f4       	brcc	.+6      	; 0xc22 <__stack+0x323>
     c1c:	2b 18       	sub	r2, r11
     c1e:	02 c0       	rjmp	.+4      	; 0xc24 <__stack+0x325>
     c20:	98 2c       	mov	r9, r8
     c22:	21 2c       	mov	r2, r1
     c24:	a4 fe       	sbrs	r10, 4
     c26:	10 c0       	rjmp	.+32     	; 0xc48 <__stack+0x349>
     c28:	b6 01       	movw	r22, r12
     c2a:	80 e3       	ldi	r24, 0x30	; 48
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	0e 94 6f 09 	call	0x12de	; 0x12de <fputc>
     c32:	a2 fe       	sbrs	r10, 2
     c34:	17 c0       	rjmp	.+46     	; 0xc64 <__stack+0x365>
     c36:	a1 fc       	sbrc	r10, 1
     c38:	03 c0       	rjmp	.+6      	; 0xc40 <__stack+0x341>
     c3a:	88 e7       	ldi	r24, 0x78	; 120
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	02 c0       	rjmp	.+4      	; 0xc44 <__stack+0x345>
     c40:	88 e5       	ldi	r24, 0x58	; 88
     c42:	90 e0       	ldi	r25, 0x00	; 0
     c44:	b6 01       	movw	r22, r12
     c46:	0c c0       	rjmp	.+24     	; 0xc60 <__stack+0x361>
     c48:	8a 2d       	mov	r24, r10
     c4a:	86 78       	andi	r24, 0x86	; 134
     c4c:	59 f0       	breq	.+22     	; 0xc64 <__stack+0x365>
     c4e:	a1 fe       	sbrs	r10, 1
     c50:	02 c0       	rjmp	.+4      	; 0xc56 <__stack+0x357>
     c52:	8b e2       	ldi	r24, 0x2B	; 43
     c54:	01 c0       	rjmp	.+2      	; 0xc58 <__stack+0x359>
     c56:	80 e2       	ldi	r24, 0x20	; 32
     c58:	a7 fc       	sbrc	r10, 7
     c5a:	8d e2       	ldi	r24, 0x2D	; 45
     c5c:	b6 01       	movw	r22, r12
     c5e:	90 e0       	ldi	r25, 0x00	; 0
     c60:	0e 94 6f 09 	call	0x12de	; 0x12de <fputc>
     c64:	89 14       	cp	r8, r9
     c66:	38 f4       	brcc	.+14     	; 0xc76 <__stack+0x377>
     c68:	b6 01       	movw	r22, r12
     c6a:	80 e3       	ldi	r24, 0x30	; 48
     c6c:	90 e0       	ldi	r25, 0x00	; 0
     c6e:	0e 94 6f 09 	call	0x12de	; 0x12de <fputc>
     c72:	9a 94       	dec	r9
     c74:	f7 cf       	rjmp	.-18     	; 0xc64 <__stack+0x365>
     c76:	8a 94       	dec	r8
     c78:	f3 01       	movw	r30, r6
     c7a:	e8 0d       	add	r30, r8
     c7c:	f1 1d       	adc	r31, r1
     c7e:	80 81       	ld	r24, Z
     c80:	b6 01       	movw	r22, r12
     c82:	90 e0       	ldi	r25, 0x00	; 0
     c84:	0e 94 6f 09 	call	0x12de	; 0x12de <fputc>
     c88:	81 10       	cpse	r8, r1
     c8a:	f5 cf       	rjmp	.-22     	; 0xc76 <__stack+0x377>
     c8c:	22 20       	and	r2, r2
     c8e:	09 f4       	brne	.+2      	; 0xc92 <__stack+0x393>
     c90:	42 ce       	rjmp	.-892    	; 0x916 <__stack+0x17>
     c92:	b6 01       	movw	r22, r12
     c94:	80 e2       	ldi	r24, 0x20	; 32
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	0e 94 6f 09 	call	0x12de	; 0x12de <fputc>
     c9c:	2a 94       	dec	r2
     c9e:	f6 cf       	rjmp	.-20     	; 0xc8c <__stack+0x38d>
     ca0:	f6 01       	movw	r30, r12
     ca2:	86 81       	ldd	r24, Z+6	; 0x06
     ca4:	97 81       	ldd	r25, Z+7	; 0x07
     ca6:	02 c0       	rjmp	.+4      	; 0xcac <__stack+0x3ad>
     ca8:	8f ef       	ldi	r24, 0xFF	; 255
     caa:	9f ef       	ldi	r25, 0xFF	; 255
     cac:	2b 96       	adiw	r28, 0x0b	; 11
     cae:	e2 e1       	ldi	r30, 0x12	; 18
     cb0:	0c 94 41 0a 	jmp	0x1482	; 0x1482 <__epilogue_restores__>

00000cb4 <putval>:
     cb4:	20 fd       	sbrc	r18, 0
     cb6:	09 c0       	rjmp	.+18     	; 0xcca <putval+0x16>
     cb8:	fc 01       	movw	r30, r24
     cba:	23 fd       	sbrc	r18, 3
     cbc:	05 c0       	rjmp	.+10     	; 0xcc8 <putval+0x14>
     cbe:	22 ff       	sbrs	r18, 2
     cc0:	02 c0       	rjmp	.+4      	; 0xcc6 <putval+0x12>
     cc2:	73 83       	std	Z+3, r23	; 0x03
     cc4:	62 83       	std	Z+2, r22	; 0x02
     cc6:	51 83       	std	Z+1, r21	; 0x01
     cc8:	40 83       	st	Z, r20
     cca:	08 95       	ret

00000ccc <mulacc>:
     ccc:	44 fd       	sbrc	r20, 4
     cce:	17 c0       	rjmp	.+46     	; 0xcfe <mulacc+0x32>
     cd0:	46 fd       	sbrc	r20, 6
     cd2:	17 c0       	rjmp	.+46     	; 0xd02 <mulacc+0x36>
     cd4:	ab 01       	movw	r20, r22
     cd6:	bc 01       	movw	r22, r24
     cd8:	da 01       	movw	r26, r20
     cda:	fb 01       	movw	r30, r22
     cdc:	aa 0f       	add	r26, r26
     cde:	bb 1f       	adc	r27, r27
     ce0:	ee 1f       	adc	r30, r30
     ce2:	ff 1f       	adc	r31, r31
     ce4:	10 94       	com	r1
     ce6:	d1 f7       	brne	.-12     	; 0xcdc <mulacc+0x10>
     ce8:	4a 0f       	add	r20, r26
     cea:	5b 1f       	adc	r21, r27
     cec:	6e 1f       	adc	r22, r30
     cee:	7f 1f       	adc	r23, r31
     cf0:	cb 01       	movw	r24, r22
     cf2:	ba 01       	movw	r22, r20
     cf4:	66 0f       	add	r22, r22
     cf6:	77 1f       	adc	r23, r23
     cf8:	88 1f       	adc	r24, r24
     cfa:	99 1f       	adc	r25, r25
     cfc:	09 c0       	rjmp	.+18     	; 0xd10 <mulacc+0x44>
     cfe:	33 e0       	ldi	r19, 0x03	; 3
     d00:	01 c0       	rjmp	.+2      	; 0xd04 <mulacc+0x38>
     d02:	34 e0       	ldi	r19, 0x04	; 4
     d04:	66 0f       	add	r22, r22
     d06:	77 1f       	adc	r23, r23
     d08:	88 1f       	adc	r24, r24
     d0a:	99 1f       	adc	r25, r25
     d0c:	31 50       	subi	r19, 0x01	; 1
     d0e:	d1 f7       	brne	.-12     	; 0xd04 <mulacc+0x38>
     d10:	62 0f       	add	r22, r18
     d12:	71 1d       	adc	r23, r1
     d14:	81 1d       	adc	r24, r1
     d16:	91 1d       	adc	r25, r1
     d18:	08 95       	ret

00000d1a <skip_spaces>:
     d1a:	0f 93       	push	r16
     d1c:	1f 93       	push	r17
     d1e:	cf 93       	push	r28
     d20:	df 93       	push	r29
     d22:	8c 01       	movw	r16, r24
     d24:	c8 01       	movw	r24, r16
     d26:	0e 94 31 09 	call	0x1262	; 0x1262 <fgetc>
     d2a:	ec 01       	movw	r28, r24
     d2c:	97 fd       	sbrc	r25, 7
     d2e:	08 c0       	rjmp	.+16     	; 0xd40 <skip_spaces+0x26>
     d30:	0e 94 07 09 	call	0x120e	; 0x120e <isspace>
     d34:	89 2b       	or	r24, r25
     d36:	b1 f7       	brne	.-20     	; 0xd24 <skip_spaces+0xa>
     d38:	b8 01       	movw	r22, r16
     d3a:	ce 01       	movw	r24, r28
     d3c:	0e 94 ab 09 	call	0x1356	; 0x1356 <ungetc>
     d40:	ce 01       	movw	r24, r28
     d42:	df 91       	pop	r29
     d44:	cf 91       	pop	r28
     d46:	1f 91       	pop	r17
     d48:	0f 91       	pop	r16
     d4a:	08 95       	ret

00000d4c <conv_int>:
     d4c:	8f 92       	push	r8
     d4e:	9f 92       	push	r9
     d50:	af 92       	push	r10
     d52:	bf 92       	push	r11
     d54:	ef 92       	push	r14
     d56:	ff 92       	push	r15
     d58:	0f 93       	push	r16
     d5a:	1f 93       	push	r17
     d5c:	cf 93       	push	r28
     d5e:	df 93       	push	r29
     d60:	8c 01       	movw	r16, r24
     d62:	d6 2f       	mov	r29, r22
     d64:	7a 01       	movw	r14, r20
     d66:	b2 2e       	mov	r11, r18
     d68:	0e 94 31 09 	call	0x1262	; 0x1262 <fgetc>
     d6c:	9c 01       	movw	r18, r24
     d6e:	33 27       	eor	r19, r19
     d70:	2b 32       	cpi	r18, 0x2B	; 43
     d72:	31 05       	cpc	r19, r1
     d74:	31 f0       	breq	.+12     	; 0xd82 <conv_int+0x36>
     d76:	2d 32       	cpi	r18, 0x2D	; 45
     d78:	31 05       	cpc	r19, r1
     d7a:	61 f4       	brne	.+24     	; 0xd94 <conv_int+0x48>
     d7c:	8b 2d       	mov	r24, r11
     d7e:	80 68       	ori	r24, 0x80	; 128
     d80:	b8 2e       	mov	r11, r24
     d82:	d1 50       	subi	r29, 0x01	; 1
     d84:	11 f4       	brne	.+4      	; 0xd8a <conv_int+0x3e>
     d86:	80 e0       	ldi	r24, 0x00	; 0
     d88:	68 c0       	rjmp	.+208    	; 0xe5a <conv_int+0x10e>
     d8a:	c8 01       	movw	r24, r16
     d8c:	0e 94 31 09 	call	0x1262	; 0x1262 <fgetc>
     d90:	97 fd       	sbrc	r25, 7
     d92:	f9 cf       	rjmp	.-14     	; 0xd86 <conv_int+0x3a>
     d94:	cb 2d       	mov	r28, r11
     d96:	cd 7f       	andi	r28, 0xFD	; 253
     d98:	2b 2d       	mov	r18, r11
     d9a:	20 73       	andi	r18, 0x30	; 48
     d9c:	09 f5       	brne	.+66     	; 0xde0 <conv_int+0x94>
     d9e:	80 33       	cpi	r24, 0x30	; 48
     da0:	f9 f4       	brne	.+62     	; 0xde0 <conv_int+0x94>
     da2:	aa 24       	eor	r10, r10
     da4:	aa 94       	dec	r10
     da6:	ad 0e       	add	r10, r29
     da8:	09 f4       	brne	.+2      	; 0xdac <conv_int+0x60>
     daa:	43 c0       	rjmp	.+134    	; 0xe32 <conv_int+0xe6>
     dac:	c8 01       	movw	r24, r16
     dae:	0e 94 31 09 	call	0x1262	; 0x1262 <fgetc>
     db2:	97 fd       	sbrc	r25, 7
     db4:	3e c0       	rjmp	.+124    	; 0xe32 <conv_int+0xe6>
     db6:	9c 01       	movw	r18, r24
     db8:	2f 7d       	andi	r18, 0xDF	; 223
     dba:	33 27       	eor	r19, r19
     dbc:	28 35       	cpi	r18, 0x58	; 88
     dbe:	31 05       	cpc	r19, r1
     dc0:	49 f4       	brne	.+18     	; 0xdd4 <conv_int+0x88>
     dc2:	c2 64       	ori	r28, 0x42	; 66
     dc4:	d2 50       	subi	r29, 0x02	; 2
     dc6:	a9 f1       	breq	.+106    	; 0xe32 <conv_int+0xe6>
     dc8:	c8 01       	movw	r24, r16
     dca:	0e 94 31 09 	call	0x1262	; 0x1262 <fgetc>
     dce:	97 ff       	sbrs	r25, 7
     dd0:	07 c0       	rjmp	.+14     	; 0xde0 <conv_int+0x94>
     dd2:	2f c0       	rjmp	.+94     	; 0xe32 <conv_int+0xe6>
     dd4:	b6 fe       	sbrs	r11, 6
     dd6:	02 c0       	rjmp	.+4      	; 0xddc <conv_int+0x90>
     dd8:	c2 60       	ori	r28, 0x02	; 2
     dda:	01 c0       	rjmp	.+2      	; 0xdde <conv_int+0x92>
     ddc:	c2 61       	ori	r28, 0x12	; 18
     dde:	da 2d       	mov	r29, r10
     de0:	81 2c       	mov	r8, r1
     de2:	91 2c       	mov	r9, r1
     de4:	54 01       	movw	r10, r8
     de6:	20 ed       	ldi	r18, 0xD0	; 208
     de8:	28 0f       	add	r18, r24
     dea:	28 30       	cpi	r18, 0x08	; 8
     dec:	80 f0       	brcs	.+32     	; 0xe0e <conv_int+0xc2>
     dee:	c4 ff       	sbrs	r28, 4
     df0:	04 c0       	rjmp	.+8      	; 0xdfa <conv_int+0xae>
     df2:	b8 01       	movw	r22, r16
     df4:	0e 94 ab 09 	call	0x1356	; 0x1356 <ungetc>
     df8:	19 c0       	rjmp	.+50     	; 0xe2c <conv_int+0xe0>
     dfa:	2a 30       	cpi	r18, 0x0A	; 10
     dfc:	40 f0       	brcs	.+16     	; 0xe0e <conv_int+0xc2>
     dfe:	c6 ff       	sbrs	r28, 6
     e00:	f8 cf       	rjmp	.-16     	; 0xdf2 <conv_int+0xa6>
     e02:	2f 7d       	andi	r18, 0xDF	; 223
     e04:	3f ee       	ldi	r19, 0xEF	; 239
     e06:	32 0f       	add	r19, r18
     e08:	36 30       	cpi	r19, 0x06	; 6
     e0a:	98 f7       	brcc	.-26     	; 0xdf2 <conv_int+0xa6>
     e0c:	27 50       	subi	r18, 0x07	; 7
     e0e:	4c 2f       	mov	r20, r28
     e10:	c5 01       	movw	r24, r10
     e12:	b4 01       	movw	r22, r8
     e14:	0e 94 66 06 	call	0xccc	; 0xccc <mulacc>
     e18:	4b 01       	movw	r8, r22
     e1a:	5c 01       	movw	r10, r24
     e1c:	c2 60       	ori	r28, 0x02	; 2
     e1e:	d1 50       	subi	r29, 0x01	; 1
     e20:	59 f0       	breq	.+22     	; 0xe38 <conv_int+0xec>
     e22:	c8 01       	movw	r24, r16
     e24:	0e 94 31 09 	call	0x1262	; 0x1262 <fgetc>
     e28:	97 ff       	sbrs	r25, 7
     e2a:	dd cf       	rjmp	.-70     	; 0xde6 <conv_int+0x9a>
     e2c:	c1 fd       	sbrc	r28, 1
     e2e:	04 c0       	rjmp	.+8      	; 0xe38 <conv_int+0xec>
     e30:	aa cf       	rjmp	.-172    	; 0xd86 <conv_int+0x3a>
     e32:	81 2c       	mov	r8, r1
     e34:	91 2c       	mov	r9, r1
     e36:	54 01       	movw	r10, r8
     e38:	c7 ff       	sbrs	r28, 7
     e3a:	08 c0       	rjmp	.+16     	; 0xe4c <conv_int+0x100>
     e3c:	b0 94       	com	r11
     e3e:	a0 94       	com	r10
     e40:	90 94       	com	r9
     e42:	80 94       	com	r8
     e44:	81 1c       	adc	r8, r1
     e46:	91 1c       	adc	r9, r1
     e48:	a1 1c       	adc	r10, r1
     e4a:	b1 1c       	adc	r11, r1
     e4c:	2c 2f       	mov	r18, r28
     e4e:	b5 01       	movw	r22, r10
     e50:	a4 01       	movw	r20, r8
     e52:	c7 01       	movw	r24, r14
     e54:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <putval>
     e58:	81 e0       	ldi	r24, 0x01	; 1
     e5a:	df 91       	pop	r29
     e5c:	cf 91       	pop	r28
     e5e:	1f 91       	pop	r17
     e60:	0f 91       	pop	r16
     e62:	ff 90       	pop	r15
     e64:	ef 90       	pop	r14
     e66:	bf 90       	pop	r11
     e68:	af 90       	pop	r10
     e6a:	9f 90       	pop	r9
     e6c:	8f 90       	pop	r8
     e6e:	08 95       	ret

00000e70 <conv_brk>:
     e70:	a0 e2       	ldi	r26, 0x20	; 32
     e72:	b0 e0       	ldi	r27, 0x00	; 0
     e74:	ee e3       	ldi	r30, 0x3E	; 62
     e76:	f7 e0       	ldi	r31, 0x07	; 7
     e78:	0c 94 28 0a 	jmp	0x1450	; 0x1450 <__prologue_saves__+0x6>
     e7c:	5c 01       	movw	r10, r24
     e7e:	96 2e       	mov	r9, r22
     e80:	7a 01       	movw	r14, r20
     e82:	f9 01       	movw	r30, r18
     e84:	8e 01       	movw	r16, r28
     e86:	0f 5f       	subi	r16, 0xFF	; 255
     e88:	1f 4f       	sbci	r17, 0xFF	; 255
     e8a:	68 01       	movw	r12, r16
     e8c:	80 e2       	ldi	r24, 0x20	; 32
     e8e:	d8 01       	movw	r26, r16
     e90:	1d 92       	st	X+, r1
     e92:	8a 95       	dec	r24
     e94:	e9 f7       	brne	.-6      	; 0xe90 <conv_brk+0x20>
     e96:	d5 01       	movw	r26, r10
     e98:	13 96       	adiw	r26, 0x03	; 3
     e9a:	8c 90       	ld	r8, X
     e9c:	80 e0       	ldi	r24, 0x00	; 0
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	61 2c       	mov	r6, r1
     ea2:	71 2c       	mov	r7, r1
     ea4:	30 e0       	ldi	r19, 0x00	; 0
     ea6:	61 e0       	ldi	r22, 0x01	; 1
     ea8:	70 e0       	ldi	r23, 0x00	; 0
     eaa:	83 fc       	sbrc	r8, 3
     eac:	25 91       	lpm	r18, Z+
     eae:	83 fe       	sbrs	r8, 3
     eb0:	21 91       	ld	r18, Z+
     eb2:	8f 01       	movw	r16, r30
     eb4:	52 2e       	mov	r5, r18
     eb6:	21 11       	cpse	r18, r1
     eb8:	03 c0       	rjmp	.+6      	; 0xec0 <conv_brk+0x50>
     eba:	80 e0       	ldi	r24, 0x00	; 0
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	92 c0       	rjmp	.+292    	; 0xfe4 <conv_brk+0x174>
     ec0:	2e 35       	cpi	r18, 0x5E	; 94
     ec2:	11 f4       	brne	.+4      	; 0xec8 <conv_brk+0x58>
     ec4:	00 97       	sbiw	r24, 0x00	; 0
     ec6:	51 f1       	breq	.+84     	; 0xf1c <conv_brk+0xac>
     ec8:	43 2f       	mov	r20, r19
     eca:	50 e0       	ldi	r21, 0x00	; 0
     ecc:	48 17       	cp	r20, r24
     ece:	59 07       	cpc	r21, r25
     ed0:	3c f4       	brge	.+14     	; 0xee0 <conv_brk+0x70>
     ed2:	2d 35       	cpi	r18, 0x5D	; 93
     ed4:	59 f1       	breq	.+86     	; 0xf2c <conv_brk+0xbc>
     ed6:	2d 32       	cpi	r18, 0x2D	; 45
     ed8:	19 f4       	brne	.+6      	; 0xee0 <conv_brk+0x70>
     eda:	77 20       	and	r7, r7
     edc:	09 f1       	breq	.+66     	; 0xf20 <conv_brk+0xb0>
     ede:	03 c0       	rjmp	.+6      	; 0xee6 <conv_brk+0x76>
     ee0:	77 20       	and	r7, r7
     ee2:	09 f4       	brne	.+2      	; 0xee6 <conv_brk+0x76>
     ee4:	6a c0       	rjmp	.+212    	; 0xfba <conv_brk+0x14a>
     ee6:	45 2d       	mov	r20, r5
     ee8:	46 95       	lsr	r20
     eea:	46 95       	lsr	r20
     eec:	46 95       	lsr	r20
     eee:	d6 01       	movw	r26, r12
     ef0:	a4 0f       	add	r26, r20
     ef2:	b1 1d       	adc	r27, r1
     ef4:	45 2d       	mov	r20, r5
     ef6:	47 70       	andi	r20, 0x07	; 7
     ef8:	8b 01       	movw	r16, r22
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <conv_brk+0x90>
     efc:	00 0f       	add	r16, r16
     efe:	11 1f       	adc	r17, r17
     f00:	4a 95       	dec	r20
     f02:	e2 f7       	brpl	.-8      	; 0xefc <conv_brk+0x8c>
     f04:	a8 01       	movw	r20, r16
     f06:	5c 91       	ld	r21, X
     f08:	45 2b       	or	r20, r21
     f0a:	4c 93       	st	X, r20
     f0c:	65 14       	cp	r6, r5
     f0e:	59 f0       	breq	.+22     	; 0xf26 <conv_brk+0xb6>
     f10:	56 14       	cp	r5, r6
     f12:	10 f4       	brcc	.+4      	; 0xf18 <conv_brk+0xa8>
     f14:	53 94       	inc	r5
     f16:	e7 cf       	rjmp	.-50     	; 0xee6 <conv_brk+0x76>
     f18:	5a 94       	dec	r5
     f1a:	e5 cf       	rjmp	.-54     	; 0xee6 <conv_brk+0x76>
     f1c:	31 e0       	ldi	r19, 0x01	; 1
     f1e:	04 c0       	rjmp	.+8      	; 0xf28 <conv_brk+0xb8>
     f20:	77 24       	eor	r7, r7
     f22:	73 94       	inc	r7
     f24:	01 c0       	rjmp	.+2      	; 0xf28 <conv_brk+0xb8>
     f26:	71 2c       	mov	r7, r1
     f28:	01 96       	adiw	r24, 0x01	; 1
     f2a:	bf cf       	rjmp	.-130    	; 0xeaa <conv_brk+0x3a>
     f2c:	77 20       	and	r7, r7
     f2e:	19 f0       	breq	.+6      	; 0xf36 <conv_brk+0xc6>
     f30:	8e 81       	ldd	r24, Y+6	; 0x06
     f32:	80 62       	ori	r24, 0x20	; 32
     f34:	8e 83       	std	Y+6, r24	; 0x06
     f36:	31 11       	cpse	r19, r1
     f38:	03 c0       	rjmp	.+6      	; 0xf40 <conv_brk+0xd0>
     f3a:	88 24       	eor	r8, r8
     f3c:	83 94       	inc	r8
     f3e:	17 c0       	rjmp	.+46     	; 0xf6e <conv_brk+0xfe>
     f40:	f6 01       	movw	r30, r12
     f42:	9e 01       	movw	r18, r28
     f44:	2f 5d       	subi	r18, 0xDF	; 223
     f46:	3f 4f       	sbci	r19, 0xFF	; 255
     f48:	80 81       	ld	r24, Z
     f4a:	80 95       	com	r24
     f4c:	81 93       	st	Z+, r24
     f4e:	2e 17       	cp	r18, r30
     f50:	3f 07       	cpc	r19, r31
     f52:	d1 f7       	brne	.-12     	; 0xf48 <conv_brk+0xd8>
     f54:	f2 cf       	rjmp	.-28     	; 0xf3a <conv_brk+0xca>
     f56:	e1 14       	cp	r14, r1
     f58:	f1 04       	cpc	r15, r1
     f5a:	29 f0       	breq	.+10     	; 0xf66 <conv_brk+0xf6>
     f5c:	d7 01       	movw	r26, r14
     f5e:	8c 93       	st	X, r24
     f60:	f7 01       	movw	r30, r14
     f62:	31 96       	adiw	r30, 0x01	; 1
     f64:	7f 01       	movw	r14, r30
     f66:	9a 94       	dec	r9
     f68:	81 2c       	mov	r8, r1
     f6a:	99 20       	and	r9, r9
     f6c:	f9 f0       	breq	.+62     	; 0xfac <conv_brk+0x13c>
     f6e:	c5 01       	movw	r24, r10
     f70:	0e 94 31 09 	call	0x1262	; 0x1262 <fgetc>
     f74:	97 fd       	sbrc	r25, 7
     f76:	18 c0       	rjmp	.+48     	; 0xfa8 <conv_brk+0x138>
     f78:	fc 01       	movw	r30, r24
     f7a:	ff 27       	eor	r31, r31
     f7c:	23 e0       	ldi	r18, 0x03	; 3
     f7e:	f5 95       	asr	r31
     f80:	e7 95       	ror	r30
     f82:	2a 95       	dec	r18
     f84:	e1 f7       	brne	.-8      	; 0xf7e <conv_brk+0x10e>
     f86:	ec 0d       	add	r30, r12
     f88:	fd 1d       	adc	r31, r13
     f8a:	20 81       	ld	r18, Z
     f8c:	30 e0       	ldi	r19, 0x00	; 0
     f8e:	ac 01       	movw	r20, r24
     f90:	47 70       	andi	r20, 0x07	; 7
     f92:	55 27       	eor	r21, r21
     f94:	02 c0       	rjmp	.+4      	; 0xf9a <conv_brk+0x12a>
     f96:	35 95       	asr	r19
     f98:	27 95       	ror	r18
     f9a:	4a 95       	dec	r20
     f9c:	e2 f7       	brpl	.-8      	; 0xf96 <conv_brk+0x126>
     f9e:	20 fd       	sbrc	r18, 0
     fa0:	da cf       	rjmp	.-76     	; 0xf56 <conv_brk+0xe6>
     fa2:	b5 01       	movw	r22, r10
     fa4:	0e 94 ab 09 	call	0x1356	; 0x1356 <ungetc>
     fa8:	81 10       	cpse	r8, r1
     faa:	87 cf       	rjmp	.-242    	; 0xeba <conv_brk+0x4a>
     fac:	e1 14       	cp	r14, r1
     fae:	f1 04       	cpc	r15, r1
     fb0:	11 f0       	breq	.+4      	; 0xfb6 <conv_brk+0x146>
     fb2:	d7 01       	movw	r26, r14
     fb4:	1c 92       	st	X, r1
     fb6:	c8 01       	movw	r24, r16
     fb8:	15 c0       	rjmp	.+42     	; 0xfe4 <conv_brk+0x174>
     fba:	42 2f       	mov	r20, r18
     fbc:	46 95       	lsr	r20
     fbe:	46 95       	lsr	r20
     fc0:	46 95       	lsr	r20
     fc2:	d6 01       	movw	r26, r12
     fc4:	a4 0f       	add	r26, r20
     fc6:	b1 1d       	adc	r27, r1
     fc8:	42 2f       	mov	r20, r18
     fca:	47 70       	andi	r20, 0x07	; 7
     fcc:	8b 01       	movw	r16, r22
     fce:	02 c0       	rjmp	.+4      	; 0xfd4 <conv_brk+0x164>
     fd0:	00 0f       	add	r16, r16
     fd2:	11 1f       	adc	r17, r17
     fd4:	4a 95       	dec	r20
     fd6:	e2 f7       	brpl	.-8      	; 0xfd0 <conv_brk+0x160>
     fd8:	a8 01       	movw	r20, r16
     fda:	5c 91       	ld	r21, X
     fdc:	45 2b       	or	r20, r21
     fde:	4c 93       	st	X, r20
     fe0:	62 2e       	mov	r6, r18
     fe2:	a2 cf       	rjmp	.-188    	; 0xf28 <conv_brk+0xb8>
     fe4:	a0 96       	adiw	r28, 0x20	; 32
     fe6:	ef e0       	ldi	r30, 0x0F	; 15
     fe8:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__epilogue_restores__+0x6>

00000fec <vfscanf>:
     fec:	a0 e0       	ldi	r26, 0x00	; 0
     fee:	b0 e0       	ldi	r27, 0x00	; 0
     ff0:	ec ef       	ldi	r30, 0xFC	; 252
     ff2:	f7 e0       	ldi	r31, 0x07	; 7
     ff4:	0c 94 28 0a 	jmp	0x1450	; 0x1450 <__prologue_saves__+0x6>
     ff8:	6c 01       	movw	r12, r24
     ffa:	eb 01       	movw	r28, r22
     ffc:	5a 01       	movw	r10, r20
     ffe:	fc 01       	movw	r30, r24
    1000:	17 82       	std	Z+7, r1	; 0x07
    1002:	16 82       	std	Z+6, r1	; 0x06
    1004:	51 2c       	mov	r5, r1
    1006:	f6 01       	movw	r30, r12
    1008:	e3 80       	ldd	r14, Z+3	; 0x03
    100a:	fe 01       	movw	r30, r28
    100c:	e3 fc       	sbrc	r14, 3
    100e:	85 91       	lpm	r24, Z+
    1010:	e3 fe       	sbrs	r14, 3
    1012:	81 91       	ld	r24, Z+
    1014:	18 2f       	mov	r17, r24
    1016:	ef 01       	movw	r28, r30
    1018:	88 23       	and	r24, r24
    101a:	09 f4       	brne	.+2      	; 0x101e <vfscanf+0x32>
    101c:	ee c0       	rjmp	.+476    	; 0x11fa <vfscanf+0x20e>
    101e:	90 e0       	ldi	r25, 0x00	; 0
    1020:	0e 94 07 09 	call	0x120e	; 0x120e <isspace>
    1024:	89 2b       	or	r24, r25
    1026:	21 f0       	breq	.+8      	; 0x1030 <vfscanf+0x44>
    1028:	c6 01       	movw	r24, r12
    102a:	0e 94 8d 06 	call	0xd1a	; 0xd1a <skip_spaces>
    102e:	eb cf       	rjmp	.-42     	; 0x1006 <vfscanf+0x1a>
    1030:	15 32       	cpi	r17, 0x25	; 37
    1032:	41 f4       	brne	.+16     	; 0x1044 <vfscanf+0x58>
    1034:	fe 01       	movw	r30, r28
    1036:	e3 fc       	sbrc	r14, 3
    1038:	15 91       	lpm	r17, Z+
    103a:	e3 fe       	sbrs	r14, 3
    103c:	11 91       	ld	r17, Z+
    103e:	ef 01       	movw	r28, r30
    1040:	15 32       	cpi	r17, 0x25	; 37
    1042:	81 f4       	brne	.+32     	; 0x1064 <vfscanf+0x78>
    1044:	c6 01       	movw	r24, r12
    1046:	0e 94 31 09 	call	0x1262	; 0x1262 <fgetc>
    104a:	97 fd       	sbrc	r25, 7
    104c:	d4 c0       	rjmp	.+424    	; 0x11f6 <vfscanf+0x20a>
    104e:	41 2f       	mov	r20, r17
    1050:	50 e0       	ldi	r21, 0x00	; 0
    1052:	9c 01       	movw	r18, r24
    1054:	33 27       	eor	r19, r19
    1056:	24 17       	cp	r18, r20
    1058:	35 07       	cpc	r19, r21
    105a:	a9 f2       	breq	.-86     	; 0x1006 <vfscanf+0x1a>
    105c:	b6 01       	movw	r22, r12
    105e:	0e 94 ab 09 	call	0x1356	; 0x1356 <ungetc>
    1062:	cb c0       	rjmp	.+406    	; 0x11fa <vfscanf+0x20e>
    1064:	1a 32       	cpi	r17, 0x2A	; 42
    1066:	39 f4       	brne	.+14     	; 0x1076 <vfscanf+0x8a>
    1068:	e3 fc       	sbrc	r14, 3
    106a:	15 91       	lpm	r17, Z+
    106c:	e3 fe       	sbrs	r14, 3
    106e:	11 91       	ld	r17, Z+
    1070:	ef 01       	movw	r28, r30
    1072:	01 e0       	ldi	r16, 0x01	; 1
    1074:	01 c0       	rjmp	.+2      	; 0x1078 <vfscanf+0x8c>
    1076:	00 e0       	ldi	r16, 0x00	; 0
    1078:	f1 2c       	mov	r15, r1
    107a:	20 ed       	ldi	r18, 0xD0	; 208
    107c:	21 0f       	add	r18, r17
    107e:	2a 30       	cpi	r18, 0x0A	; 10
    1080:	80 f4       	brcc	.+32     	; 0x10a2 <vfscanf+0xb6>
    1082:	02 60       	ori	r16, 0x02	; 2
    1084:	6f 2d       	mov	r22, r15
    1086:	70 e0       	ldi	r23, 0x00	; 0
    1088:	80 e0       	ldi	r24, 0x00	; 0
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	40 e2       	ldi	r20, 0x20	; 32
    108e:	0e 94 66 06 	call	0xccc	; 0xccc <mulacc>
    1092:	f6 2e       	mov	r15, r22
    1094:	fe 01       	movw	r30, r28
    1096:	e3 fc       	sbrc	r14, 3
    1098:	15 91       	lpm	r17, Z+
    109a:	e3 fe       	sbrs	r14, 3
    109c:	11 91       	ld	r17, Z+
    109e:	ef 01       	movw	r28, r30
    10a0:	ec cf       	rjmp	.-40     	; 0x107a <vfscanf+0x8e>
    10a2:	01 ff       	sbrs	r16, 1
    10a4:	03 c0       	rjmp	.+6      	; 0x10ac <vfscanf+0xc0>
    10a6:	f1 10       	cpse	r15, r1
    10a8:	03 c0       	rjmp	.+6      	; 0x10b0 <vfscanf+0xc4>
    10aa:	a7 c0       	rjmp	.+334    	; 0x11fa <vfscanf+0x20e>
    10ac:	ff 24       	eor	r15, r15
    10ae:	fa 94       	dec	r15
    10b0:	18 36       	cpi	r17, 0x68	; 104
    10b2:	19 f0       	breq	.+6      	; 0x10ba <vfscanf+0xce>
    10b4:	1c 36       	cpi	r17, 0x6C	; 108
    10b6:	51 f0       	breq	.+20     	; 0x10cc <vfscanf+0xe0>
    10b8:	10 c0       	rjmp	.+32     	; 0x10da <vfscanf+0xee>
    10ba:	fe 01       	movw	r30, r28
    10bc:	e3 fc       	sbrc	r14, 3
    10be:	15 91       	lpm	r17, Z+
    10c0:	e3 fe       	sbrs	r14, 3
    10c2:	11 91       	ld	r17, Z+
    10c4:	ef 01       	movw	r28, r30
    10c6:	18 36       	cpi	r17, 0x68	; 104
    10c8:	41 f4       	brne	.+16     	; 0x10da <vfscanf+0xee>
    10ca:	08 60       	ori	r16, 0x08	; 8
    10cc:	04 60       	ori	r16, 0x04	; 4
    10ce:	fe 01       	movw	r30, r28
    10d0:	e3 fc       	sbrc	r14, 3
    10d2:	15 91       	lpm	r17, Z+
    10d4:	e3 fe       	sbrs	r14, 3
    10d6:	11 91       	ld	r17, Z+
    10d8:	ef 01       	movw	r28, r30
    10da:	11 23       	and	r17, r17
    10dc:	09 f4       	brne	.+2      	; 0x10e0 <vfscanf+0xf4>
    10de:	8d c0       	rjmp	.+282    	; 0x11fa <vfscanf+0x20e>
    10e0:	61 2f       	mov	r22, r17
    10e2:	70 e0       	ldi	r23, 0x00	; 0
    10e4:	88 e6       	ldi	r24, 0x68	; 104
    10e6:	90 e0       	ldi	r25, 0x00	; 0
    10e8:	0e 94 10 09 	call	0x1220	; 0x1220 <strchr_P>
    10ec:	89 2b       	or	r24, r25
    10ee:	09 f4       	brne	.+2      	; 0x10f2 <vfscanf+0x106>
    10f0:	84 c0       	rjmp	.+264    	; 0x11fa <vfscanf+0x20e>
    10f2:	00 fd       	sbrc	r16, 0
    10f4:	07 c0       	rjmp	.+14     	; 0x1104 <vfscanf+0x118>
    10f6:	f5 01       	movw	r30, r10
    10f8:	80 80       	ld	r8, Z
    10fa:	91 80       	ldd	r9, Z+1	; 0x01
    10fc:	c5 01       	movw	r24, r10
    10fe:	02 96       	adiw	r24, 0x02	; 2
    1100:	5c 01       	movw	r10, r24
    1102:	02 c0       	rjmp	.+4      	; 0x1108 <vfscanf+0x11c>
    1104:	81 2c       	mov	r8, r1
    1106:	91 2c       	mov	r9, r1
    1108:	1e 36       	cpi	r17, 0x6E	; 110
    110a:	51 f4       	brne	.+20     	; 0x1120 <vfscanf+0x134>
    110c:	f6 01       	movw	r30, r12
    110e:	46 81       	ldd	r20, Z+6	; 0x06
    1110:	57 81       	ldd	r21, Z+7	; 0x07
    1112:	60 e0       	ldi	r22, 0x00	; 0
    1114:	70 e0       	ldi	r23, 0x00	; 0
    1116:	20 2f       	mov	r18, r16
    1118:	c4 01       	movw	r24, r8
    111a:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <putval>
    111e:	73 cf       	rjmp	.-282    	; 0x1006 <vfscanf+0x1a>
    1120:	13 36       	cpi	r17, 0x63	; 99
    1122:	a9 f4       	brne	.+42     	; 0x114e <vfscanf+0x162>
    1124:	01 fd       	sbrc	r16, 1
    1126:	02 c0       	rjmp	.+4      	; 0x112c <vfscanf+0x140>
    1128:	ff 24       	eor	r15, r15
    112a:	f3 94       	inc	r15
    112c:	c6 01       	movw	r24, r12
    112e:	0e 94 31 09 	call	0x1262	; 0x1262 <fgetc>
    1132:	97 fd       	sbrc	r25, 7
    1134:	60 c0       	rjmp	.+192    	; 0x11f6 <vfscanf+0x20a>
    1136:	81 14       	cp	r8, r1
    1138:	91 04       	cpc	r9, r1
    113a:	29 f0       	breq	.+10     	; 0x1146 <vfscanf+0x15a>
    113c:	f4 01       	movw	r30, r8
    113e:	80 83       	st	Z, r24
    1140:	c4 01       	movw	r24, r8
    1142:	01 96       	adiw	r24, 0x01	; 1
    1144:	4c 01       	movw	r8, r24
    1146:	fa 94       	dec	r15
    1148:	f1 10       	cpse	r15, r1
    114a:	f0 cf       	rjmp	.-32     	; 0x112c <vfscanf+0x140>
    114c:	50 c0       	rjmp	.+160    	; 0x11ee <vfscanf+0x202>
    114e:	1b 35       	cpi	r17, 0x5B	; 91
    1150:	59 f4       	brne	.+22     	; 0x1168 <vfscanf+0x17c>
    1152:	9e 01       	movw	r18, r28
    1154:	a4 01       	movw	r20, r8
    1156:	6f 2d       	mov	r22, r15
    1158:	c6 01       	movw	r24, r12
    115a:	0e 94 38 07 	call	0xe70	; 0xe70 <conv_brk>
    115e:	ec 01       	movw	r28, r24
    1160:	89 2b       	or	r24, r25
    1162:	09 f0       	breq	.+2      	; 0x1166 <vfscanf+0x17a>
    1164:	44 c0       	rjmp	.+136    	; 0x11ee <vfscanf+0x202>
    1166:	3e c0       	rjmp	.+124    	; 0x11e4 <vfscanf+0x1f8>
    1168:	c6 01       	movw	r24, r12
    116a:	0e 94 8d 06 	call	0xd1a	; 0xd1a <skip_spaces>
    116e:	97 fd       	sbrc	r25, 7
    1170:	42 c0       	rjmp	.+132    	; 0x11f6 <vfscanf+0x20a>
    1172:	1f 36       	cpi	r17, 0x6F	; 111
    1174:	61 f1       	breq	.+88     	; 0x11ce <vfscanf+0x1e2>
    1176:	28 f4       	brcc	.+10     	; 0x1182 <vfscanf+0x196>
    1178:	14 36       	cpi	r17, 0x64	; 100
    117a:	39 f1       	breq	.+78     	; 0x11ca <vfscanf+0x1de>
    117c:	19 36       	cpi	r17, 0x69	; 105
    117e:	51 f1       	breq	.+84     	; 0x11d4 <vfscanf+0x1e8>
    1180:	28 c0       	rjmp	.+80     	; 0x11d2 <vfscanf+0x1e6>
    1182:	13 37       	cpi	r17, 0x73	; 115
    1184:	71 f0       	breq	.+28     	; 0x11a2 <vfscanf+0x1b6>
    1186:	15 37       	cpi	r17, 0x75	; 117
    1188:	01 f1       	breq	.+64     	; 0x11ca <vfscanf+0x1de>
    118a:	23 c0       	rjmp	.+70     	; 0x11d2 <vfscanf+0x1e6>
    118c:	81 14       	cp	r8, r1
    118e:	91 04       	cpc	r9, r1
    1190:	29 f0       	breq	.+10     	; 0x119c <vfscanf+0x1b0>
    1192:	f4 01       	movw	r30, r8
    1194:	60 82       	st	Z, r6
    1196:	c4 01       	movw	r24, r8
    1198:	01 96       	adiw	r24, 0x01	; 1
    119a:	4c 01       	movw	r8, r24
    119c:	fa 94       	dec	r15
    119e:	ff 20       	and	r15, r15
    11a0:	71 f0       	breq	.+28     	; 0x11be <vfscanf+0x1d2>
    11a2:	c6 01       	movw	r24, r12
    11a4:	0e 94 31 09 	call	0x1262	; 0x1262 <fgetc>
    11a8:	3c 01       	movw	r6, r24
    11aa:	97 fd       	sbrc	r25, 7
    11ac:	08 c0       	rjmp	.+16     	; 0x11be <vfscanf+0x1d2>
    11ae:	0e 94 07 09 	call	0x120e	; 0x120e <isspace>
    11b2:	89 2b       	or	r24, r25
    11b4:	59 f3       	breq	.-42     	; 0x118c <vfscanf+0x1a0>
    11b6:	b6 01       	movw	r22, r12
    11b8:	c3 01       	movw	r24, r6
    11ba:	0e 94 ab 09 	call	0x1356	; 0x1356 <ungetc>
    11be:	81 14       	cp	r8, r1
    11c0:	91 04       	cpc	r9, r1
    11c2:	a9 f0       	breq	.+42     	; 0x11ee <vfscanf+0x202>
    11c4:	f4 01       	movw	r30, r8
    11c6:	10 82       	st	Z, r1
    11c8:	12 c0       	rjmp	.+36     	; 0x11ee <vfscanf+0x202>
    11ca:	00 62       	ori	r16, 0x20	; 32
    11cc:	03 c0       	rjmp	.+6      	; 0x11d4 <vfscanf+0x1e8>
    11ce:	00 61       	ori	r16, 0x10	; 16
    11d0:	01 c0       	rjmp	.+2      	; 0x11d4 <vfscanf+0x1e8>
    11d2:	00 64       	ori	r16, 0x40	; 64
    11d4:	20 2f       	mov	r18, r16
    11d6:	a4 01       	movw	r20, r8
    11d8:	6f 2d       	mov	r22, r15
    11da:	c6 01       	movw	r24, r12
    11dc:	0e 94 a6 06 	call	0xd4c	; 0xd4c <conv_int>
    11e0:	81 11       	cpse	r24, r1
    11e2:	05 c0       	rjmp	.+10     	; 0x11ee <vfscanf+0x202>
    11e4:	f6 01       	movw	r30, r12
    11e6:	83 81       	ldd	r24, Z+3	; 0x03
    11e8:	80 73       	andi	r24, 0x30	; 48
    11ea:	29 f4       	brne	.+10     	; 0x11f6 <vfscanf+0x20a>
    11ec:	06 c0       	rjmp	.+12     	; 0x11fa <vfscanf+0x20e>
    11ee:	00 fd       	sbrc	r16, 0
    11f0:	0a cf       	rjmp	.-492    	; 0x1006 <vfscanf+0x1a>
    11f2:	53 94       	inc	r5
    11f4:	08 cf       	rjmp	.-496    	; 0x1006 <vfscanf+0x1a>
    11f6:	55 20       	and	r5, r5
    11f8:	19 f0       	breq	.+6      	; 0x1200 <vfscanf+0x214>
    11fa:	85 2d       	mov	r24, r5
    11fc:	90 e0       	ldi	r25, 0x00	; 0
    11fe:	02 c0       	rjmp	.+4      	; 0x1204 <vfscanf+0x218>
    1200:	8f ef       	ldi	r24, 0xFF	; 255
    1202:	9f ef       	ldi	r25, 0xFF	; 255
    1204:	cd b7       	in	r28, 0x3d	; 61
    1206:	de b7       	in	r29, 0x3e	; 62
    1208:	ef e0       	ldi	r30, 0x0F	; 15
    120a:	0c 94 44 0a 	jmp	0x1488	; 0x1488 <__epilogue_restores__+0x6>

0000120e <isspace>:
    120e:	91 11       	cpse	r25, r1
    1210:	0c 94 22 0a 	jmp	0x1444	; 0x1444 <__ctype_isfalse>
    1214:	80 32       	cpi	r24, 0x20	; 32
    1216:	19 f0       	breq	.+6      	; 0x121e <isspace+0x10>
    1218:	89 50       	subi	r24, 0x09	; 9
    121a:	85 50       	subi	r24, 0x05	; 5
    121c:	c8 f7       	brcc	.-14     	; 0x1210 <isspace+0x2>
    121e:	08 95       	ret

00001220 <strchr_P>:
    1220:	fc 01       	movw	r30, r24
    1222:	05 90       	lpm	r0, Z+
    1224:	06 16       	cp	r0, r22
    1226:	21 f0       	breq	.+8      	; 0x1230 <strchr_P+0x10>
    1228:	00 20       	and	r0, r0
    122a:	d9 f7       	brne	.-10     	; 0x1222 <strchr_P+0x2>
    122c:	c0 01       	movw	r24, r0
    122e:	08 95       	ret
    1230:	31 97       	sbiw	r30, 0x01	; 1
    1232:	cf 01       	movw	r24, r30
    1234:	08 95       	ret

00001236 <strnlen_P>:
    1236:	fc 01       	movw	r30, r24
    1238:	05 90       	lpm	r0, Z+
    123a:	61 50       	subi	r22, 0x01	; 1
    123c:	70 40       	sbci	r23, 0x00	; 0
    123e:	01 10       	cpse	r0, r1
    1240:	d8 f7       	brcc	.-10     	; 0x1238 <strnlen_P+0x2>
    1242:	80 95       	com	r24
    1244:	90 95       	com	r25
    1246:	8e 0f       	add	r24, r30
    1248:	9f 1f       	adc	r25, r31
    124a:	08 95       	ret

0000124c <strnlen>:
    124c:	fc 01       	movw	r30, r24
    124e:	61 50       	subi	r22, 0x01	; 1
    1250:	70 40       	sbci	r23, 0x00	; 0
    1252:	01 90       	ld	r0, Z+
    1254:	01 10       	cpse	r0, r1
    1256:	d8 f7       	brcc	.-10     	; 0x124e <strnlen+0x2>
    1258:	80 95       	com	r24
    125a:	90 95       	com	r25
    125c:	8e 0f       	add	r24, r30
    125e:	9f 1f       	adc	r25, r31
    1260:	08 95       	ret

00001262 <fgetc>:
    1262:	cf 93       	push	r28
    1264:	df 93       	push	r29
    1266:	ec 01       	movw	r28, r24
    1268:	2b 81       	ldd	r18, Y+3	; 0x03
    126a:	20 ff       	sbrs	r18, 0
    126c:	33 c0       	rjmp	.+102    	; 0x12d4 <fgetc+0x72>
    126e:	26 ff       	sbrs	r18, 6
    1270:	0a c0       	rjmp	.+20     	; 0x1286 <fgetc+0x24>
    1272:	2f 7b       	andi	r18, 0xBF	; 191
    1274:	2b 83       	std	Y+3, r18	; 0x03
    1276:	8e 81       	ldd	r24, Y+6	; 0x06
    1278:	9f 81       	ldd	r25, Y+7	; 0x07
    127a:	01 96       	adiw	r24, 0x01	; 1
    127c:	9f 83       	std	Y+7, r25	; 0x07
    127e:	8e 83       	std	Y+6, r24	; 0x06
    1280:	8a 81       	ldd	r24, Y+2	; 0x02
    1282:	90 e0       	ldi	r25, 0x00	; 0
    1284:	29 c0       	rjmp	.+82     	; 0x12d8 <fgetc+0x76>
    1286:	22 ff       	sbrs	r18, 2
    1288:	0f c0       	rjmp	.+30     	; 0x12a8 <fgetc+0x46>
    128a:	e8 81       	ld	r30, Y
    128c:	f9 81       	ldd	r31, Y+1	; 0x01
    128e:	80 81       	ld	r24, Z
    1290:	08 2e       	mov	r0, r24
    1292:	00 0c       	add	r0, r0
    1294:	99 0b       	sbc	r25, r25
    1296:	00 97       	sbiw	r24, 0x00	; 0
    1298:	19 f4       	brne	.+6      	; 0x12a0 <fgetc+0x3e>
    129a:	20 62       	ori	r18, 0x20	; 32
    129c:	2b 83       	std	Y+3, r18	; 0x03
    129e:	1a c0       	rjmp	.+52     	; 0x12d4 <fgetc+0x72>
    12a0:	31 96       	adiw	r30, 0x01	; 1
    12a2:	f9 83       	std	Y+1, r31	; 0x01
    12a4:	e8 83       	st	Y, r30
    12a6:	0e c0       	rjmp	.+28     	; 0x12c4 <fgetc+0x62>
    12a8:	ea 85       	ldd	r30, Y+10	; 0x0a
    12aa:	fb 85       	ldd	r31, Y+11	; 0x0b
    12ac:	09 95       	icall
    12ae:	97 ff       	sbrs	r25, 7
    12b0:	09 c0       	rjmp	.+18     	; 0x12c4 <fgetc+0x62>
    12b2:	2b 81       	ldd	r18, Y+3	; 0x03
    12b4:	01 96       	adiw	r24, 0x01	; 1
    12b6:	11 f0       	breq	.+4      	; 0x12bc <fgetc+0x5a>
    12b8:	80 e2       	ldi	r24, 0x20	; 32
    12ba:	01 c0       	rjmp	.+2      	; 0x12be <fgetc+0x5c>
    12bc:	80 e1       	ldi	r24, 0x10	; 16
    12be:	82 2b       	or	r24, r18
    12c0:	8b 83       	std	Y+3, r24	; 0x03
    12c2:	08 c0       	rjmp	.+16     	; 0x12d4 <fgetc+0x72>
    12c4:	2e 81       	ldd	r18, Y+6	; 0x06
    12c6:	3f 81       	ldd	r19, Y+7	; 0x07
    12c8:	2f 5f       	subi	r18, 0xFF	; 255
    12ca:	3f 4f       	sbci	r19, 0xFF	; 255
    12cc:	3f 83       	std	Y+7, r19	; 0x07
    12ce:	2e 83       	std	Y+6, r18	; 0x06
    12d0:	99 27       	eor	r25, r25
    12d2:	02 c0       	rjmp	.+4      	; 0x12d8 <fgetc+0x76>
    12d4:	8f ef       	ldi	r24, 0xFF	; 255
    12d6:	9f ef       	ldi	r25, 0xFF	; 255
    12d8:	df 91       	pop	r29
    12da:	cf 91       	pop	r28
    12dc:	08 95       	ret

000012de <fputc>:
    12de:	0f 93       	push	r16
    12e0:	1f 93       	push	r17
    12e2:	cf 93       	push	r28
    12e4:	df 93       	push	r29
    12e6:	fb 01       	movw	r30, r22
    12e8:	23 81       	ldd	r18, Z+3	; 0x03
    12ea:	21 fd       	sbrc	r18, 1
    12ec:	03 c0       	rjmp	.+6      	; 0x12f4 <fputc+0x16>
    12ee:	8f ef       	ldi	r24, 0xFF	; 255
    12f0:	9f ef       	ldi	r25, 0xFF	; 255
    12f2:	2c c0       	rjmp	.+88     	; 0x134c <fputc+0x6e>
    12f4:	22 ff       	sbrs	r18, 2
    12f6:	16 c0       	rjmp	.+44     	; 0x1324 <fputc+0x46>
    12f8:	46 81       	ldd	r20, Z+6	; 0x06
    12fa:	57 81       	ldd	r21, Z+7	; 0x07
    12fc:	24 81       	ldd	r18, Z+4	; 0x04
    12fe:	35 81       	ldd	r19, Z+5	; 0x05
    1300:	42 17       	cp	r20, r18
    1302:	53 07       	cpc	r21, r19
    1304:	44 f4       	brge	.+16     	; 0x1316 <fputc+0x38>
    1306:	a0 81       	ld	r26, Z
    1308:	b1 81       	ldd	r27, Z+1	; 0x01
    130a:	9d 01       	movw	r18, r26
    130c:	2f 5f       	subi	r18, 0xFF	; 255
    130e:	3f 4f       	sbci	r19, 0xFF	; 255
    1310:	31 83       	std	Z+1, r19	; 0x01
    1312:	20 83       	st	Z, r18
    1314:	8c 93       	st	X, r24
    1316:	26 81       	ldd	r18, Z+6	; 0x06
    1318:	37 81       	ldd	r19, Z+7	; 0x07
    131a:	2f 5f       	subi	r18, 0xFF	; 255
    131c:	3f 4f       	sbci	r19, 0xFF	; 255
    131e:	37 83       	std	Z+7, r19	; 0x07
    1320:	26 83       	std	Z+6, r18	; 0x06
    1322:	14 c0       	rjmp	.+40     	; 0x134c <fputc+0x6e>
    1324:	8b 01       	movw	r16, r22
    1326:	ec 01       	movw	r28, r24
    1328:	fb 01       	movw	r30, r22
    132a:	00 84       	ldd	r0, Z+8	; 0x08
    132c:	f1 85       	ldd	r31, Z+9	; 0x09
    132e:	e0 2d       	mov	r30, r0
    1330:	09 95       	icall
    1332:	89 2b       	or	r24, r25
    1334:	e1 f6       	brne	.-72     	; 0x12ee <fputc+0x10>
    1336:	d8 01       	movw	r26, r16
    1338:	16 96       	adiw	r26, 0x06	; 6
    133a:	8d 91       	ld	r24, X+
    133c:	9c 91       	ld	r25, X
    133e:	17 97       	sbiw	r26, 0x07	; 7
    1340:	01 96       	adiw	r24, 0x01	; 1
    1342:	17 96       	adiw	r26, 0x07	; 7
    1344:	9c 93       	st	X, r25
    1346:	8e 93       	st	-X, r24
    1348:	16 97       	sbiw	r26, 0x06	; 6
    134a:	ce 01       	movw	r24, r28
    134c:	df 91       	pop	r29
    134e:	cf 91       	pop	r28
    1350:	1f 91       	pop	r17
    1352:	0f 91       	pop	r16
    1354:	08 95       	ret

00001356 <ungetc>:
    1356:	fb 01       	movw	r30, r22
    1358:	23 81       	ldd	r18, Z+3	; 0x03
    135a:	20 ff       	sbrs	r18, 0
    135c:	12 c0       	rjmp	.+36     	; 0x1382 <ungetc+0x2c>
    135e:	26 fd       	sbrc	r18, 6
    1360:	10 c0       	rjmp	.+32     	; 0x1382 <ungetc+0x2c>
    1362:	8f 3f       	cpi	r24, 0xFF	; 255
    1364:	3f ef       	ldi	r19, 0xFF	; 255
    1366:	93 07       	cpc	r25, r19
    1368:	61 f0       	breq	.+24     	; 0x1382 <ungetc+0x2c>
    136a:	82 83       	std	Z+2, r24	; 0x02
    136c:	2f 7d       	andi	r18, 0xDF	; 223
    136e:	20 64       	ori	r18, 0x40	; 64
    1370:	23 83       	std	Z+3, r18	; 0x03
    1372:	26 81       	ldd	r18, Z+6	; 0x06
    1374:	37 81       	ldd	r19, Z+7	; 0x07
    1376:	21 50       	subi	r18, 0x01	; 1
    1378:	31 09       	sbc	r19, r1
    137a:	37 83       	std	Z+7, r19	; 0x07
    137c:	26 83       	std	Z+6, r18	; 0x06
    137e:	99 27       	eor	r25, r25
    1380:	08 95       	ret
    1382:	8f ef       	ldi	r24, 0xFF	; 255
    1384:	9f ef       	ldi	r25, 0xFF	; 255
    1386:	08 95       	ret

00001388 <__ultoa_invert>:
    1388:	fa 01       	movw	r30, r20
    138a:	aa 27       	eor	r26, r26
    138c:	28 30       	cpi	r18, 0x08	; 8
    138e:	51 f1       	breq	.+84     	; 0x13e4 <__ultoa_invert+0x5c>
    1390:	20 31       	cpi	r18, 0x10	; 16
    1392:	81 f1       	breq	.+96     	; 0x13f4 <__ultoa_invert+0x6c>
    1394:	e8 94       	clt
    1396:	6f 93       	push	r22
    1398:	6e 7f       	andi	r22, 0xFE	; 254
    139a:	6e 5f       	subi	r22, 0xFE	; 254
    139c:	7f 4f       	sbci	r23, 0xFF	; 255
    139e:	8f 4f       	sbci	r24, 0xFF	; 255
    13a0:	9f 4f       	sbci	r25, 0xFF	; 255
    13a2:	af 4f       	sbci	r26, 0xFF	; 255
    13a4:	b1 e0       	ldi	r27, 0x01	; 1
    13a6:	3e d0       	rcall	.+124    	; 0x1424 <__ultoa_invert+0x9c>
    13a8:	b4 e0       	ldi	r27, 0x04	; 4
    13aa:	3c d0       	rcall	.+120    	; 0x1424 <__ultoa_invert+0x9c>
    13ac:	67 0f       	add	r22, r23
    13ae:	78 1f       	adc	r23, r24
    13b0:	89 1f       	adc	r24, r25
    13b2:	9a 1f       	adc	r25, r26
    13b4:	a1 1d       	adc	r26, r1
    13b6:	68 0f       	add	r22, r24
    13b8:	79 1f       	adc	r23, r25
    13ba:	8a 1f       	adc	r24, r26
    13bc:	91 1d       	adc	r25, r1
    13be:	a1 1d       	adc	r26, r1
    13c0:	6a 0f       	add	r22, r26
    13c2:	71 1d       	adc	r23, r1
    13c4:	81 1d       	adc	r24, r1
    13c6:	91 1d       	adc	r25, r1
    13c8:	a1 1d       	adc	r26, r1
    13ca:	20 d0       	rcall	.+64     	; 0x140c <__ultoa_invert+0x84>
    13cc:	09 f4       	brne	.+2      	; 0x13d0 <__ultoa_invert+0x48>
    13ce:	68 94       	set
    13d0:	3f 91       	pop	r19
    13d2:	2a e0       	ldi	r18, 0x0A	; 10
    13d4:	26 9f       	mul	r18, r22
    13d6:	11 24       	eor	r1, r1
    13d8:	30 19       	sub	r19, r0
    13da:	30 5d       	subi	r19, 0xD0	; 208
    13dc:	31 93       	st	Z+, r19
    13de:	de f6       	brtc	.-74     	; 0x1396 <__ultoa_invert+0xe>
    13e0:	cf 01       	movw	r24, r30
    13e2:	08 95       	ret
    13e4:	46 2f       	mov	r20, r22
    13e6:	47 70       	andi	r20, 0x07	; 7
    13e8:	40 5d       	subi	r20, 0xD0	; 208
    13ea:	41 93       	st	Z+, r20
    13ec:	b3 e0       	ldi	r27, 0x03	; 3
    13ee:	0f d0       	rcall	.+30     	; 0x140e <__ultoa_invert+0x86>
    13f0:	c9 f7       	brne	.-14     	; 0x13e4 <__ultoa_invert+0x5c>
    13f2:	f6 cf       	rjmp	.-20     	; 0x13e0 <__ultoa_invert+0x58>
    13f4:	46 2f       	mov	r20, r22
    13f6:	4f 70       	andi	r20, 0x0F	; 15
    13f8:	40 5d       	subi	r20, 0xD0	; 208
    13fa:	4a 33       	cpi	r20, 0x3A	; 58
    13fc:	18 f0       	brcs	.+6      	; 0x1404 <__ultoa_invert+0x7c>
    13fe:	49 5d       	subi	r20, 0xD9	; 217
    1400:	31 fd       	sbrc	r19, 1
    1402:	40 52       	subi	r20, 0x20	; 32
    1404:	41 93       	st	Z+, r20
    1406:	02 d0       	rcall	.+4      	; 0x140c <__ultoa_invert+0x84>
    1408:	a9 f7       	brne	.-22     	; 0x13f4 <__ultoa_invert+0x6c>
    140a:	ea cf       	rjmp	.-44     	; 0x13e0 <__ultoa_invert+0x58>
    140c:	b4 e0       	ldi	r27, 0x04	; 4
    140e:	a6 95       	lsr	r26
    1410:	97 95       	ror	r25
    1412:	87 95       	ror	r24
    1414:	77 95       	ror	r23
    1416:	67 95       	ror	r22
    1418:	ba 95       	dec	r27
    141a:	c9 f7       	brne	.-14     	; 0x140e <__ultoa_invert+0x86>
    141c:	00 97       	sbiw	r24, 0x00	; 0
    141e:	61 05       	cpc	r22, r1
    1420:	71 05       	cpc	r23, r1
    1422:	08 95       	ret
    1424:	9b 01       	movw	r18, r22
    1426:	ac 01       	movw	r20, r24
    1428:	0a 2e       	mov	r0, r26
    142a:	06 94       	lsr	r0
    142c:	57 95       	ror	r21
    142e:	47 95       	ror	r20
    1430:	37 95       	ror	r19
    1432:	27 95       	ror	r18
    1434:	ba 95       	dec	r27
    1436:	c9 f7       	brne	.-14     	; 0x142a <__ultoa_invert+0xa2>
    1438:	62 0f       	add	r22, r18
    143a:	73 1f       	adc	r23, r19
    143c:	84 1f       	adc	r24, r20
    143e:	95 1f       	adc	r25, r21
    1440:	a0 1d       	adc	r26, r0
    1442:	08 95       	ret

00001444 <__ctype_isfalse>:
    1444:	99 27       	eor	r25, r25
    1446:	88 27       	eor	r24, r24

00001448 <__ctype_istrue>:
    1448:	08 95       	ret

0000144a <__prologue_saves__>:
    144a:	2f 92       	push	r2
    144c:	3f 92       	push	r3
    144e:	4f 92       	push	r4
    1450:	5f 92       	push	r5
    1452:	6f 92       	push	r6
    1454:	7f 92       	push	r7
    1456:	8f 92       	push	r8
    1458:	9f 92       	push	r9
    145a:	af 92       	push	r10
    145c:	bf 92       	push	r11
    145e:	cf 92       	push	r12
    1460:	df 92       	push	r13
    1462:	ef 92       	push	r14
    1464:	ff 92       	push	r15
    1466:	0f 93       	push	r16
    1468:	1f 93       	push	r17
    146a:	cf 93       	push	r28
    146c:	df 93       	push	r29
    146e:	cd b7       	in	r28, 0x3d	; 61
    1470:	de b7       	in	r29, 0x3e	; 62
    1472:	ca 1b       	sub	r28, r26
    1474:	db 0b       	sbc	r29, r27
    1476:	0f b6       	in	r0, 0x3f	; 63
    1478:	f8 94       	cli
    147a:	de bf       	out	0x3e, r29	; 62
    147c:	0f be       	out	0x3f, r0	; 63
    147e:	cd bf       	out	0x3d, r28	; 61
    1480:	09 94       	ijmp

00001482 <__epilogue_restores__>:
    1482:	2a 88       	ldd	r2, Y+18	; 0x12
    1484:	39 88       	ldd	r3, Y+17	; 0x11
    1486:	48 88       	ldd	r4, Y+16	; 0x10
    1488:	5f 84       	ldd	r5, Y+15	; 0x0f
    148a:	6e 84       	ldd	r6, Y+14	; 0x0e
    148c:	7d 84       	ldd	r7, Y+13	; 0x0d
    148e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1490:	9b 84       	ldd	r9, Y+11	; 0x0b
    1492:	aa 84       	ldd	r10, Y+10	; 0x0a
    1494:	b9 84       	ldd	r11, Y+9	; 0x09
    1496:	c8 84       	ldd	r12, Y+8	; 0x08
    1498:	df 80       	ldd	r13, Y+7	; 0x07
    149a:	ee 80       	ldd	r14, Y+6	; 0x06
    149c:	fd 80       	ldd	r15, Y+5	; 0x05
    149e:	0c 81       	ldd	r16, Y+4	; 0x04
    14a0:	1b 81       	ldd	r17, Y+3	; 0x03
    14a2:	aa 81       	ldd	r26, Y+2	; 0x02
    14a4:	b9 81       	ldd	r27, Y+1	; 0x01
    14a6:	ce 0f       	add	r28, r30
    14a8:	d1 1d       	adc	r29, r1
    14aa:	0f b6       	in	r0, 0x3f	; 63
    14ac:	f8 94       	cli
    14ae:	de bf       	out	0x3e, r29	; 62
    14b0:	0f be       	out	0x3f, r0	; 63
    14b2:	cd bf       	out	0x3d, r28	; 61
    14b4:	ed 01       	movw	r28, r26
    14b6:	08 95       	ret

000014b8 <_exit>:
    14b8:	f8 94       	cli

000014ba <__stop_program>:
    14ba:	ff cf       	rjmp	.-2      	; 0x14ba <__stop_program>
