
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000018  00800100  0000100a  0000109e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000100a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000117  00800118  00800118  000010b6  2**0
                  ALLOC
  3 .stab         00000a80  00000000  00000000  000010b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000fa8  00000000  00000000  00001b38  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  00002ae0  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002af4  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  00002b34  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  00003128  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  000036ca  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  000036e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3a 00 	jmp	0x74	; 0x74 <__ctors_end>
       4:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       8:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
       c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      10:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      14:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      18:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      1c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      20:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      24:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      28:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      2c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      30:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      34:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      38:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      3c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      40:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      44:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      48:	0c 94 a4 00 	jmp	0x148	; 0x148 <__vector_18>
      4c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__vector_19>
      50:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      54:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      58:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      5c:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      60:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>
      64:	0c 94 57 00 	jmp	0xae	; 0xae <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	63 64       	ori	r22, 0x43	; 67
      6a:	69 6e       	ori	r22, 0xE9	; 233
      6c:	6f 70       	andi	r22, 0x0F	; 15
      6e:	73 75       	andi	r23, 0x53	; 83
      70:	78 58       	subi	r23, 0x88	; 136
      72:	5b 00       	.word	0x005b	; ????

00000074 <__ctors_end>:
      74:	11 24       	eor	r1, r1
      76:	1f be       	out	0x3f, r1	; 63
      78:	cf ef       	ldi	r28, 0xFF	; 255
      7a:	d8 e0       	ldi	r29, 0x08	; 8
      7c:	de bf       	out	0x3e, r29	; 62
      7e:	cd bf       	out	0x3d, r28	; 61

00000080 <__do_copy_data>:
      80:	11 e0       	ldi	r17, 0x01	; 1
      82:	a0 e0       	ldi	r26, 0x00	; 0
      84:	b1 e0       	ldi	r27, 0x01	; 1
      86:	ea e0       	ldi	r30, 0x0A	; 10
      88:	f0 e1       	ldi	r31, 0x10	; 16
      8a:	02 c0       	rjmp	.+4      	; 0x90 <__do_copy_data+0x10>
      8c:	05 90       	lpm	r0, Z+
      8e:	0d 92       	st	X+, r0
      90:	a8 31       	cpi	r26, 0x18	; 24
      92:	b1 07       	cpc	r27, r17
      94:	d9 f7       	brne	.-10     	; 0x8c <__do_copy_data+0xc>

00000096 <__do_clear_bss>:
      96:	22 e0       	ldi	r18, 0x02	; 2
      98:	a8 e1       	ldi	r26, 0x18	; 24
      9a:	b1 e0       	ldi	r27, 0x01	; 1
      9c:	01 c0       	rjmp	.+2      	; 0xa0 <.do_clear_bss_start>

0000009e <.do_clear_bss_loop>:
      9e:	1d 92       	st	X+, r1

000000a0 <.do_clear_bss_start>:
      a0:	af 32       	cpi	r26, 0x2F	; 47
      a2:	b2 07       	cpc	r27, r18
      a4:	e1 f7       	brne	.-8      	; 0x9e <.do_clear_bss_loop>
      a6:	0e 94 0f 01 	call	0x21e	; 0x21e <main>
      aa:	0c 94 03 08 	jmp	0x1006	; 0x1006 <_exit>

000000ae <__bad_interrupt>:
      ae:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000b2 <uart_receive>:
    }
}

// Funkcja odbierania danych z bufora
int uart_receive(FILE *stream) {
    uint8_t next_read = (rx_read + 1) % RX_BUFFER_SIZE;
      b2:	20 91 19 01 	lds	r18, 0x0119	; 0x800119 <rx_read>
      b6:	30 e0       	ldi	r19, 0x00	; 0
      b8:	2f 5f       	subi	r18, 0xFF	; 255
      ba:	3f 4f       	sbci	r19, 0xFF	; 255
      bc:	2f 77       	andi	r18, 0x7F	; 127
      be:	33 27       	eor	r19, r19
      c0:	92 2f       	mov	r25, r18
    // czekaj jeśli bufor jest pusty
    while (next_read == rx_write && end == 0);
      c2:	04 c0       	rjmp	.+8      	; 0xcc <uart_receive+0x1a>
      c4:	80 91 28 02 	lds	r24, 0x0228	; 0x800228 <end>
      c8:	81 11       	cpse	r24, r1
      ca:	04 c0       	rjmp	.+8      	; 0xd4 <uart_receive+0x22>
      cc:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <rx_write>
      d0:	98 17       	cp	r25, r24
      d2:	c1 f3       	breq	.-16     	; 0xc4 <uart_receive+0x12>
    uint8_t data = rx_buffer[next_read];
      d4:	f9 01       	movw	r30, r18
      d6:	e8 5d       	subi	r30, 0xD8	; 216
      d8:	fe 4f       	sbci	r31, 0xFE	; 254
      da:	80 81       	ld	r24, Z
    rx_read = next_read;
      dc:	20 93 19 01 	sts	0x0119, r18	; 0x800119 <rx_read>
    end = 0;
      e0:	10 92 28 02 	sts	0x0228, r1	; 0x800228 <end>
    return data;
}
      e4:	90 e0       	ldi	r25, 0x00	; 0
      e6:	08 95       	ret

000000e8 <uart_transmit>:
    }
}

// Funkcja wysyłania danych z bufora cyklicznego
int uart_transmit(char data, FILE *stream) {
    uint8_t next_write = (tx_write + 1) % TX_BUFFER_SIZE;
      e8:	40 91 00 01 	lds	r20, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
      ec:	50 e0       	ldi	r21, 0x00	; 0
      ee:	4f 5f       	subi	r20, 0xFF	; 255
      f0:	5f 4f       	sbci	r21, 0xFF	; 255
      f2:	4f 77       	andi	r20, 0x7F	; 127
      f4:	55 27       	eor	r21, r21
    // jeśli bufor jest pusty to czekaj
    while (tx_read == tx_write); 
      f6:	20 91 18 01 	lds	r18, 0x0118	; 0x800118 <__data_end>
      fa:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
      fe:	29 17       	cp	r18, r25
     100:	d1 f3       	breq	.-12     	; 0xf6 <uart_transmit+0xe>
    tx_buffer[tx_write] = data;
     102:	e0 91 00 01 	lds	r30, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     106:	f0 e0       	ldi	r31, 0x00	; 0
     108:	e8 55       	subi	r30, 0x58	; 88
     10a:	fe 4f       	sbci	r31, 0xFE	; 254
     10c:	80 83       	st	Z, r24
    tx_write = next_write;
     10e:	40 93 00 01 	sts	0x0100, r20	; 0x800100 <__DATA_REGION_ORIGIN__>
    UCSR0B |= _BV(UDRIE0); 
     112:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     116:	80 62       	ori	r24, 0x20	; 32
     118:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    return 0;
}
     11c:	80 e0       	ldi	r24, 0x00	; 0
     11e:	90 e0       	ldi	r25, 0x00	; 0
     120:	08 95       	ret

00000122 <uart_init>:

// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
     122:	87 e6       	ldi	r24, 0x67	; 103
     124:	90 e0       	ldi	r25, 0x00	; 0
     126:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     12a:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
     12e:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
     132:	e1 ec       	ldi	r30, 0xC1	; 193
     134:	f0 e0       	ldi	r31, 0x00	; 0
     136:	88 e1       	ldi	r24, 0x18	; 24
     138:	80 83       	st	Z, r24
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
     13a:	86 e0       	ldi	r24, 0x06	; 6
     13c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  // włącz przerwania
  UCSR0B |= _BV(RXCIE0);
     140:	80 81       	ld	r24, Z
     142:	80 68       	ori	r24, 0x80	; 128
     144:	80 83       	st	Z, r24
     146:	08 95       	ret

00000148 <__vector_18>:
}

// Przerwanie dla odebrania danych
ISR(USART_RX_vect) {
     148:	1f 92       	push	r1
     14a:	0f 92       	push	r0
     14c:	0f b6       	in	r0, 0x3f	; 63
     14e:	0f 92       	push	r0
     150:	11 24       	eor	r1, r1
     152:	2f 93       	push	r18
     154:	3f 93       	push	r19
     156:	4f 93       	push	r20
     158:	8f 93       	push	r24
     15a:	9f 93       	push	r25
     15c:	ef 93       	push	r30
     15e:	ff 93       	push	r31
    uint8_t data = UDR0;
     160:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
    uint8_t next_write = (rx_write + 1) % RX_BUFFER_SIZE;
     164:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <rx_write>
    
    // jeżeli bufor nie jest zapełniony oraz znak nie jest końcem linii
    if (data != 0 && next_write != rx_read) {
     168:	22 23       	and	r18, r18
     16a:	09 f1       	breq	.+66     	; 0x1ae <__vector_18+0x66>
}

// Przerwanie dla odebrania danych
ISR(USART_RX_vect) {
    uint8_t data = UDR0;
    uint8_t next_write = (rx_write + 1) % RX_BUFFER_SIZE;
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	01 96       	adiw	r24, 0x01	; 1
     170:	8f 77       	andi	r24, 0x7F	; 127
     172:	99 27       	eor	r25, r25
     174:	38 2f       	mov	r19, r24
    
    // jeżeli bufor nie jest zapełniony oraz znak nie jest końcem linii
    if (data != 0 && next_write != rx_read) {
     176:	40 91 19 01 	lds	r20, 0x0119	; 0x800119 <rx_read>
     17a:	84 17       	cp	r24, r20
     17c:	41 f0       	breq	.+16     	; 0x18e <__vector_18+0x46>
        rx_buffer[rx_write] = data;
     17e:	e0 91 01 01 	lds	r30, 0x0101	; 0x800101 <rx_write>
     182:	f0 e0       	ldi	r31, 0x00	; 0
     184:	e8 5d       	subi	r30, 0xD8	; 216
     186:	fe 4f       	sbci	r31, 0xFE	; 254
     188:	20 83       	st	Z, r18
        rx_write = next_write;
     18a:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <rx_write>
    }
    // jeżeli kończymy odbieranie danych
    if (data == 0 || next_write == rx_read) {
     18e:	80 91 19 01 	lds	r24, 0x0119	; 0x800119 <rx_read>
     192:	38 17       	cp	r19, r24
     194:	61 f0       	breq	.+24     	; 0x1ae <__vector_18+0x66>
    	rx_buffer[rx_write] = 0;
    	end = 1;
    }
}
     196:	ff 91       	pop	r31
     198:	ef 91       	pop	r30
     19a:	9f 91       	pop	r25
     19c:	8f 91       	pop	r24
     19e:	4f 91       	pop	r20
     1a0:	3f 91       	pop	r19
     1a2:	2f 91       	pop	r18
     1a4:	0f 90       	pop	r0
     1a6:	0f be       	out	0x3f, r0	; 63
     1a8:	0f 90       	pop	r0
     1aa:	1f 90       	pop	r1
     1ac:	18 95       	reti
        rx_buffer[rx_write] = data;
        rx_write = next_write;
    }
    // jeżeli kończymy odbieranie danych
    if (data == 0 || next_write == rx_read) {
    	rx_buffer[rx_write] = 0;
     1ae:	e0 91 01 01 	lds	r30, 0x0101	; 0x800101 <rx_write>
     1b2:	f0 e0       	ldi	r31, 0x00	; 0
     1b4:	e8 5d       	subi	r30, 0xD8	; 216
     1b6:	fe 4f       	sbci	r31, 0xFE	; 254
     1b8:	10 82       	st	Z, r1
    	end = 1;
     1ba:	81 e0       	ldi	r24, 0x01	; 1
     1bc:	80 93 28 02 	sts	0x0228, r24	; 0x800228 <end>
    }
}
     1c0:	ea cf       	rjmp	.-44     	; 0x196 <__vector_18+0x4e>

000001c2 <__vector_19>:
    end = 0;
    return data;
}

// Przerwanie dla gotowości do wysłania danych
ISR(USART_UDRE_vect) {
     1c2:	1f 92       	push	r1
     1c4:	0f 92       	push	r0
     1c6:	0f b6       	in	r0, 0x3f	; 63
     1c8:	0f 92       	push	r0
     1ca:	11 24       	eor	r1, r1
     1cc:	2f 93       	push	r18
     1ce:	8f 93       	push	r24
     1d0:	9f 93       	push	r25
     1d2:	ef 93       	push	r30
     1d4:	ff 93       	push	r31
    uint8_t next_read = (tx_read + 1) % TX_BUFFER_SIZE;
     1d6:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <__data_end>
     1da:	90 e0       	ldi	r25, 0x00	; 0
     1dc:	01 96       	adiw	r24, 0x01	; 1
     1de:	8f 77       	andi	r24, 0x7F	; 127
     1e0:	99 27       	eor	r25, r25
    // jeżeli w buforze nadawczym coś jest, to czytaj
    if (next_read != tx_write) {
     1e2:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     1e6:	28 17       	cp	r18, r24
     1e8:	a1 f0       	breq	.+40     	; 0x212 <__vector_19+0x50>
        UDR0 = tx_buffer[tx_read];
     1ea:	e0 91 18 01 	lds	r30, 0x0118	; 0x800118 <__data_end>
     1ee:	f0 e0       	ldi	r31, 0x00	; 0
     1f0:	e8 55       	subi	r30, 0x58	; 88
     1f2:	fe 4f       	sbci	r31, 0xFE	; 254
     1f4:	90 81       	ld	r25, Z
     1f6:	90 93 c6 00 	sts	0x00C6, r25	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
        tx_read = next_read;
     1fa:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <__data_end>
    } else {
        UCSR0B &= ~_BV(UDRIE0); // Wyłącz przerwanie UDRE, gdy bufor nadawczy jest pusty
    }
}
     1fe:	ff 91       	pop	r31
     200:	ef 91       	pop	r30
     202:	9f 91       	pop	r25
     204:	8f 91       	pop	r24
     206:	2f 91       	pop	r18
     208:	0f 90       	pop	r0
     20a:	0f be       	out	0x3f, r0	; 63
     20c:	0f 90       	pop	r0
     20e:	1f 90       	pop	r1
     210:	18 95       	reti
    // jeżeli w buforze nadawczym coś jest, to czytaj
    if (next_read != tx_write) {
        UDR0 = tx_buffer[tx_read];
        tx_read = next_read;
    } else {
        UCSR0B &= ~_BV(UDRIE0); // Wyłącz przerwanie UDRE, gdy bufor nadawczy jest pusty
     212:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     216:	8f 7d       	andi	r24, 0xDF	; 223
     218:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
    }
}
     21c:	f0 cf       	rjmp	.-32     	; 0x1fe <__vector_19+0x3c>

0000021e <main>:
}

FILE uart_file;

int main()
{
     21e:	cf 93       	push	r28
     220:	df 93       	push	r29
     222:	cd b7       	in	r28, 0x3d	; 61
     224:	de b7       	in	r29, 0x3e	; 62
     226:	c0 58       	subi	r28, 0x80	; 128
     228:	d1 09       	sbc	r29, r1
     22a:	0f b6       	in	r0, 0x3f	; 63
     22c:	f8 94       	cli
     22e:	de bf       	out	0x3e, r29	; 62
     230:	0f be       	out	0x3f, r0	; 63
     232:	cd bf       	out	0x3d, r28	; 61

// inicjalizacja UART
void uart_init()
{
  // ustaw baudrate
  UBRR0 = UBRR_VALUE;
     234:	87 e6       	ldi	r24, 0x67	; 103
     236:	90 e0       	ldi	r25, 0x00	; 0
     238:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     23c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
  // wyczyść rejestr UCSR0A
  UCSR0A = 0;
     240:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
  // włącz odbiornik i nadajnik
  UCSR0B = _BV(RXEN0) | _BV(TXEN0);
     244:	88 e1       	ldi	r24, 0x18	; 24
     246:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
  // ustaw format 8n1
  UCSR0C = _BV(UCSZ00) | _BV(UCSZ01);
     24a:	86 e0       	ldi	r24, 0x06	; 6
     24c:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
  // włącz przerwania
  UCSR0B |= _BV(RXCIE0);
     250:	80 91 c1 00 	lds	r24, 0x00C1	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     254:	80 68       	ori	r24, 0x80	; 128
     256:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
int main()
{
  // zainicjalizuj UART
  uart_init();
  // skonfiguruj strumienie wejścia/wyjścia
  fdev_setup_stream(&uart_file, uart_transmit, uart_receive, _FDEV_SETUP_RW);
     25a:	8a e1       	ldi	r24, 0x1A	; 26
     25c:	91 e0       	ldi	r25, 0x01	; 1
     25e:	24 e7       	ldi	r18, 0x74	; 116
     260:	30 e0       	ldi	r19, 0x00	; 0
     262:	30 93 23 01 	sts	0x0123, r19	; 0x800123 <uart_file+0x9>
     266:	20 93 22 01 	sts	0x0122, r18	; 0x800122 <uart_file+0x8>
     26a:	29 e5       	ldi	r18, 0x59	; 89
     26c:	30 e0       	ldi	r19, 0x00	; 0
     26e:	30 93 25 01 	sts	0x0125, r19	; 0x800125 <uart_file+0xb>
     272:	20 93 24 01 	sts	0x0124, r18	; 0x800124 <uart_file+0xa>
     276:	23 e0       	ldi	r18, 0x03	; 3
     278:	20 93 1d 01 	sts	0x011D, r18	; 0x80011d <uart_file+0x3>
     27c:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <uart_file+0xd>
     280:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <uart_file+0xc>
  stdin = stdout = stderr = &uart_file;
     284:	90 93 2e 02 	sts	0x022E, r25	; 0x80022e <__iob+0x5>
     288:	80 93 2d 02 	sts	0x022D, r24	; 0x80022d <__iob+0x4>
     28c:	90 93 2c 02 	sts	0x022C, r25	; 0x80022c <__iob+0x3>
     290:	80 93 2b 02 	sts	0x022B, r24	; 0x80022b <__iob+0x2>
     294:	90 93 2a 02 	sts	0x022A, r25	; 0x80022a <__iob+0x1>
     298:	80 93 29 02 	sts	0x0229, r24	; 0x800229 <__iob>

  sei();
     29c:	78 94       	sei

  // program testowy
  printf("Hello world!\r\n");
     29e:	82 e0       	ldi	r24, 0x02	; 2
     2a0:	91 e0       	ldi	r25, 0x01	; 1
     2a2:	0e 94 16 02 	call	0x42c	; 0x42c <puts>

  char input[128];
  scanf("%s", &input);
     2a6:	8e 01       	movw	r16, r28
     2a8:	0f 5f       	subi	r16, 0xFF	; 255
     2aa:	1f 4f       	sbci	r17, 0xFF	; 255
     2ac:	1f 93       	push	r17
     2ae:	0f 93       	push	r16
     2b0:	80 e1       	ldi	r24, 0x10	; 16
     2b2:	91 e0       	ldi	r25, 0x01	; 1
     2b4:	9f 93       	push	r25
     2b6:	8f 93       	push	r24
     2b8:	0e 94 46 02 	call	0x48c	; 0x48c <scanf>
     2bc:	78 01       	movw	r14, r16
     2be:	0f 90       	pop	r0
     2c0:	0f 90       	pop	r0
     2c2:	0f 90       	pop	r0
     2c4:	0f 90       	pop	r0
     2c6:	58 01       	movw	r10, r16

  for(int i = 0; i <= strlen(input); i++){
     2c8:	c1 2c       	mov	r12, r1
     2ca:	d1 2c       	mov	r13, r1
    putc(input[i], stdout);
     2cc:	f5 01       	movw	r30, r10
     2ce:	81 91       	ld	r24, Z+
     2d0:	5f 01       	movw	r10, r30
     2d2:	60 91 2b 02 	lds	r22, 0x022B	; 0x80022b <__iob+0x2>
     2d6:	70 91 2c 02 	lds	r23, 0x022C	; 0x80022c <__iob+0x3>
     2da:	08 2e       	mov	r0, r24
     2dc:	00 0c       	add	r0, r0
     2de:	99 0b       	sbc	r25, r25
     2e0:	0e 94 c4 01 	call	0x388	; 0x388 <fputc>
  printf("Hello world!\r\n");

  char input[128];
  scanf("%s", &input);

  for(int i = 0; i <= strlen(input); i++){
     2e4:	ff ef       	ldi	r31, 0xFF	; 255
     2e6:	cf 1a       	sub	r12, r31
     2e8:	df 0a       	sbc	r13, r31
     2ea:	f8 01       	movw	r30, r16
     2ec:	01 90       	ld	r0, Z+
     2ee:	00 20       	and	r0, r0
     2f0:	e9 f7       	brne	.-6      	; 0x2ec <main+0xce>
     2f2:	31 97       	sbiw	r30, 0x01	; 1
     2f4:	e0 1b       	sub	r30, r16
     2f6:	f1 0b       	sbc	r31, r17
     2f8:	ec 15       	cp	r30, r12
     2fa:	fd 05       	cpc	r31, r13
     2fc:	38 f7       	brcc	.-50     	; 0x2cc <main+0xae>
    putc(input[i], stdout);
  }
  printf("\r\n");
     2fe:	8e e0       	ldi	r24, 0x0E	; 14
     300:	91 e0       	ldi	r25, 0x01	; 1
     302:	0e 94 16 02 	call	0x42c	; 0x42c <puts>
  scanf("%s", &input);
     306:	1f 93       	push	r17
     308:	0f 93       	push	r16
     30a:	80 e1       	ldi	r24, 0x10	; 16
     30c:	91 e0       	ldi	r25, 0x01	; 1
     30e:	9f 93       	push	r25
     310:	8f 93       	push	r24
     312:	0e 94 46 02 	call	0x48c	; 0x48c <scanf>
     316:	0f 90       	pop	r0
     318:	0f 90       	pop	r0
     31a:	0f 90       	pop	r0
     31c:	0f 90       	pop	r0

  for(int i = 0; i <= strlen(input); i++){
     31e:	c1 2c       	mov	r12, r1
     320:	d1 2c       	mov	r13, r1
    putc(input[i], stdout);
     322:	f7 01       	movw	r30, r14
     324:	81 91       	ld	r24, Z+
     326:	7f 01       	movw	r14, r30
     328:	60 91 2b 02 	lds	r22, 0x022B	; 0x80022b <__iob+0x2>
     32c:	70 91 2c 02 	lds	r23, 0x022C	; 0x80022c <__iob+0x3>
     330:	08 2e       	mov	r0, r24
     332:	00 0c       	add	r0, r0
     334:	99 0b       	sbc	r25, r25
     336:	0e 94 c4 01 	call	0x388	; 0x388 <fputc>
    putc(input[i], stdout);
  }
  printf("\r\n");
  scanf("%s", &input);

  for(int i = 0; i <= strlen(input); i++){
     33a:	ff ef       	ldi	r31, 0xFF	; 255
     33c:	cf 1a       	sub	r12, r31
     33e:	df 0a       	sbc	r13, r31
     340:	f8 01       	movw	r30, r16
     342:	01 90       	ld	r0, Z+
     344:	00 20       	and	r0, r0
     346:	e9 f7       	brne	.-6      	; 0x342 <main+0x124>
     348:	31 97       	sbiw	r30, 0x01	; 1
     34a:	e0 1b       	sub	r30, r16
     34c:	f1 0b       	sbc	r31, r17
     34e:	ec 15       	cp	r30, r12
     350:	fd 05       	cpc	r31, r13
     352:	38 f7       	brcc	.-50     	; 0x322 <main+0x104>
    putc(input[i], stdout);
  }
  printf("\r\n");
     354:	8e e0       	ldi	r24, 0x0E	; 14
     356:	91 e0       	ldi	r25, 0x01	; 1
     358:	0e 94 16 02 	call	0x42c	; 0x42c <puts>
  scanf("%s", &input);
     35c:	1f 93       	push	r17
     35e:	0f 93       	push	r16
     360:	80 e1       	ldi	r24, 0x10	; 16
     362:	91 e0       	ldi	r25, 0x01	; 1
     364:	9f 93       	push	r25
     366:	8f 93       	push	r24
     368:	0e 94 46 02 	call	0x48c	; 0x48c <scanf>

  printf("%s\r\n",input);
     36c:	1f 93       	push	r17
     36e:	0f 93       	push	r16
     370:	83 e1       	ldi	r24, 0x13	; 19
     372:	91 e0       	ldi	r25, 0x01	; 1
     374:	9f 93       	push	r25
     376:	8f 93       	push	r24
     378:	0e 94 00 02 	call	0x400	; 0x400 <printf>
     37c:	0f b6       	in	r0, 0x3f	; 63
     37e:	f8 94       	cli
     380:	de bf       	out	0x3e, r29	; 62
     382:	0f be       	out	0x3f, r0	; 63
     384:	cd bf       	out	0x3d, r28	; 61
     386:	ff cf       	rjmp	.-2      	; 0x386 <main+0x168>

00000388 <fputc>:
     388:	0f 93       	push	r16
     38a:	1f 93       	push	r17
     38c:	cf 93       	push	r28
     38e:	df 93       	push	r29
     390:	fb 01       	movw	r30, r22
     392:	23 81       	ldd	r18, Z+3	; 0x03
     394:	21 fd       	sbrc	r18, 1
     396:	03 c0       	rjmp	.+6      	; 0x39e <fputc+0x16>
     398:	8f ef       	ldi	r24, 0xFF	; 255
     39a:	9f ef       	ldi	r25, 0xFF	; 255
     39c:	2c c0       	rjmp	.+88     	; 0x3f6 <fputc+0x6e>
     39e:	22 ff       	sbrs	r18, 2
     3a0:	16 c0       	rjmp	.+44     	; 0x3ce <fputc+0x46>
     3a2:	46 81       	ldd	r20, Z+6	; 0x06
     3a4:	57 81       	ldd	r21, Z+7	; 0x07
     3a6:	24 81       	ldd	r18, Z+4	; 0x04
     3a8:	35 81       	ldd	r19, Z+5	; 0x05
     3aa:	42 17       	cp	r20, r18
     3ac:	53 07       	cpc	r21, r19
     3ae:	44 f4       	brge	.+16     	; 0x3c0 <fputc+0x38>
     3b0:	a0 81       	ld	r26, Z
     3b2:	b1 81       	ldd	r27, Z+1	; 0x01
     3b4:	9d 01       	movw	r18, r26
     3b6:	2f 5f       	subi	r18, 0xFF	; 255
     3b8:	3f 4f       	sbci	r19, 0xFF	; 255
     3ba:	31 83       	std	Z+1, r19	; 0x01
     3bc:	20 83       	st	Z, r18
     3be:	8c 93       	st	X, r24
     3c0:	26 81       	ldd	r18, Z+6	; 0x06
     3c2:	37 81       	ldd	r19, Z+7	; 0x07
     3c4:	2f 5f       	subi	r18, 0xFF	; 255
     3c6:	3f 4f       	sbci	r19, 0xFF	; 255
     3c8:	37 83       	std	Z+7, r19	; 0x07
     3ca:	26 83       	std	Z+6, r18	; 0x06
     3cc:	14 c0       	rjmp	.+40     	; 0x3f6 <fputc+0x6e>
     3ce:	8b 01       	movw	r16, r22
     3d0:	ec 01       	movw	r28, r24
     3d2:	fb 01       	movw	r30, r22
     3d4:	00 84       	ldd	r0, Z+8	; 0x08
     3d6:	f1 85       	ldd	r31, Z+9	; 0x09
     3d8:	e0 2d       	mov	r30, r0
     3da:	09 95       	icall
     3dc:	89 2b       	or	r24, r25
     3de:	e1 f6       	brne	.-72     	; 0x398 <fputc+0x10>
     3e0:	d8 01       	movw	r26, r16
     3e2:	16 96       	adiw	r26, 0x06	; 6
     3e4:	8d 91       	ld	r24, X+
     3e6:	9c 91       	ld	r25, X
     3e8:	17 97       	sbiw	r26, 0x07	; 7
     3ea:	01 96       	adiw	r24, 0x01	; 1
     3ec:	17 96       	adiw	r26, 0x07	; 7
     3ee:	9c 93       	st	X, r25
     3f0:	8e 93       	st	-X, r24
     3f2:	16 97       	sbiw	r26, 0x06	; 6
     3f4:	ce 01       	movw	r24, r28
     3f6:	df 91       	pop	r29
     3f8:	cf 91       	pop	r28
     3fa:	1f 91       	pop	r17
     3fc:	0f 91       	pop	r16
     3fe:	08 95       	ret

00000400 <printf>:
     400:	a0 e0       	ldi	r26, 0x00	; 0
     402:	b0 e0       	ldi	r27, 0x00	; 0
     404:	e6 e0       	ldi	r30, 0x06	; 6
     406:	f2 e0       	ldi	r31, 0x02	; 2
     408:	0c 94 dc 07 	jmp	0xfb8	; 0xfb8 <__prologue_saves__+0x20>
     40c:	ae 01       	movw	r20, r28
     40e:	4b 5f       	subi	r20, 0xFB	; 251
     410:	5f 4f       	sbci	r21, 0xFF	; 255
     412:	fa 01       	movw	r30, r20
     414:	61 91       	ld	r22, Z+
     416:	71 91       	ld	r23, Z+
     418:	af 01       	movw	r20, r30
     41a:	80 91 2b 02 	lds	r24, 0x022B	; 0x80022b <__iob+0x2>
     41e:	90 91 2c 02 	lds	r25, 0x022C	; 0x80022c <__iob+0x3>
     422:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <vfprintf>
     426:	e2 e0       	ldi	r30, 0x02	; 2
     428:	0c 94 f8 07 	jmp	0xff0	; 0xff0 <__epilogue_restores__+0x20>

0000042c <puts>:
     42c:	0f 93       	push	r16
     42e:	1f 93       	push	r17
     430:	cf 93       	push	r28
     432:	df 93       	push	r29
     434:	e0 91 2b 02 	lds	r30, 0x022B	; 0x80022b <__iob+0x2>
     438:	f0 91 2c 02 	lds	r31, 0x022C	; 0x80022c <__iob+0x3>
     43c:	23 81       	ldd	r18, Z+3	; 0x03
     43e:	21 ff       	sbrs	r18, 1
     440:	1b c0       	rjmp	.+54     	; 0x478 <puts+0x4c>
     442:	8c 01       	movw	r16, r24
     444:	d0 e0       	ldi	r29, 0x00	; 0
     446:	c0 e0       	ldi	r28, 0x00	; 0
     448:	f8 01       	movw	r30, r16
     44a:	81 91       	ld	r24, Z+
     44c:	8f 01       	movw	r16, r30
     44e:	60 91 2b 02 	lds	r22, 0x022B	; 0x80022b <__iob+0x2>
     452:	70 91 2c 02 	lds	r23, 0x022C	; 0x80022c <__iob+0x3>
     456:	db 01       	movw	r26, r22
     458:	18 96       	adiw	r26, 0x08	; 8
     45a:	ed 91       	ld	r30, X+
     45c:	fc 91       	ld	r31, X
     45e:	19 97       	sbiw	r26, 0x09	; 9
     460:	88 23       	and	r24, r24
     462:	31 f0       	breq	.+12     	; 0x470 <puts+0x44>
     464:	09 95       	icall
     466:	89 2b       	or	r24, r25
     468:	79 f3       	breq	.-34     	; 0x448 <puts+0x1c>
     46a:	df ef       	ldi	r29, 0xFF	; 255
     46c:	cf ef       	ldi	r28, 0xFF	; 255
     46e:	ec cf       	rjmp	.-40     	; 0x448 <puts+0x1c>
     470:	8a e0       	ldi	r24, 0x0A	; 10
     472:	09 95       	icall
     474:	89 2b       	or	r24, r25
     476:	19 f0       	breq	.+6      	; 0x47e <puts+0x52>
     478:	8f ef       	ldi	r24, 0xFF	; 255
     47a:	9f ef       	ldi	r25, 0xFF	; 255
     47c:	02 c0       	rjmp	.+4      	; 0x482 <puts+0x56>
     47e:	8d 2f       	mov	r24, r29
     480:	9c 2f       	mov	r25, r28
     482:	df 91       	pop	r29
     484:	cf 91       	pop	r28
     486:	1f 91       	pop	r17
     488:	0f 91       	pop	r16
     48a:	08 95       	ret

0000048c <scanf>:
     48c:	a0 e0       	ldi	r26, 0x00	; 0
     48e:	b0 e0       	ldi	r27, 0x00	; 0
     490:	ec e4       	ldi	r30, 0x4C	; 76
     492:	f2 e0       	ldi	r31, 0x02	; 2
     494:	0c 94 dc 07 	jmp	0xfb8	; 0xfb8 <__prologue_saves__+0x20>
     498:	ae 01       	movw	r20, r28
     49a:	4b 5f       	subi	r20, 0xFB	; 251
     49c:	5f 4f       	sbci	r21, 0xFF	; 255
     49e:	fa 01       	movw	r30, r20
     4a0:	61 91       	ld	r22, Z+
     4a2:	71 91       	ld	r23, Z+
     4a4:	af 01       	movw	r20, r30
     4a6:	80 91 29 02 	lds	r24, 0x0229	; 0x800229 <__iob>
     4aa:	90 91 2a 02 	lds	r25, 0x022A	; 0x80022a <__iob+0x1>
     4ae:	0e 94 d9 05 	call	0xbb2	; 0xbb2 <vfscanf>
     4b2:	e2 e0       	ldi	r30, 0x02	; 2
     4b4:	0c 94 f8 07 	jmp	0xff0	; 0xff0 <__epilogue_restores__+0x20>

000004b8 <vfprintf>:
     4b8:	ab e0       	ldi	r26, 0x0B	; 11
     4ba:	b0 e0       	ldi	r27, 0x00	; 0
     4bc:	e2 e6       	ldi	r30, 0x62	; 98
     4be:	f2 e0       	ldi	r31, 0x02	; 2
     4c0:	0c 94 cc 07 	jmp	0xf98	; 0xf98 <__prologue_saves__>
     4c4:	6c 01       	movw	r12, r24
     4c6:	7b 01       	movw	r14, r22
     4c8:	8a 01       	movw	r16, r20
     4ca:	fc 01       	movw	r30, r24
     4cc:	17 82       	std	Z+7, r1	; 0x07
     4ce:	16 82       	std	Z+6, r1	; 0x06
     4d0:	83 81       	ldd	r24, Z+3	; 0x03
     4d2:	81 ff       	sbrs	r24, 1
     4d4:	cc c1       	rjmp	.+920    	; 0x86e <__DATA_REGION_LENGTH__+0x6e>
     4d6:	ce 01       	movw	r24, r28
     4d8:	01 96       	adiw	r24, 0x01	; 1
     4da:	3c 01       	movw	r6, r24
     4dc:	f6 01       	movw	r30, r12
     4de:	93 81       	ldd	r25, Z+3	; 0x03
     4e0:	f7 01       	movw	r30, r14
     4e2:	93 fd       	sbrc	r25, 3
     4e4:	85 91       	lpm	r24, Z+
     4e6:	93 ff       	sbrs	r25, 3
     4e8:	81 91       	ld	r24, Z+
     4ea:	7f 01       	movw	r14, r30
     4ec:	88 23       	and	r24, r24
     4ee:	09 f4       	brne	.+2      	; 0x4f2 <vfprintf+0x3a>
     4f0:	ba c1       	rjmp	.+884    	; 0x866 <__DATA_REGION_LENGTH__+0x66>
     4f2:	85 32       	cpi	r24, 0x25	; 37
     4f4:	39 f4       	brne	.+14     	; 0x504 <vfprintf+0x4c>
     4f6:	93 fd       	sbrc	r25, 3
     4f8:	85 91       	lpm	r24, Z+
     4fa:	93 ff       	sbrs	r25, 3
     4fc:	81 91       	ld	r24, Z+
     4fe:	7f 01       	movw	r14, r30
     500:	85 32       	cpi	r24, 0x25	; 37
     502:	29 f4       	brne	.+10     	; 0x50e <vfprintf+0x56>
     504:	b6 01       	movw	r22, r12
     506:	90 e0       	ldi	r25, 0x00	; 0
     508:	0e 94 c4 01 	call	0x388	; 0x388 <fputc>
     50c:	e7 cf       	rjmp	.-50     	; 0x4dc <vfprintf+0x24>
     50e:	91 2c       	mov	r9, r1
     510:	21 2c       	mov	r2, r1
     512:	31 2c       	mov	r3, r1
     514:	ff e1       	ldi	r31, 0x1F	; 31
     516:	f3 15       	cp	r31, r3
     518:	d8 f0       	brcs	.+54     	; 0x550 <vfprintf+0x98>
     51a:	8b 32       	cpi	r24, 0x2B	; 43
     51c:	79 f0       	breq	.+30     	; 0x53c <vfprintf+0x84>
     51e:	38 f4       	brcc	.+14     	; 0x52e <vfprintf+0x76>
     520:	80 32       	cpi	r24, 0x20	; 32
     522:	79 f0       	breq	.+30     	; 0x542 <vfprintf+0x8a>
     524:	83 32       	cpi	r24, 0x23	; 35
     526:	a1 f4       	brne	.+40     	; 0x550 <vfprintf+0x98>
     528:	23 2d       	mov	r18, r3
     52a:	20 61       	ori	r18, 0x10	; 16
     52c:	1d c0       	rjmp	.+58     	; 0x568 <vfprintf+0xb0>
     52e:	8d 32       	cpi	r24, 0x2D	; 45
     530:	61 f0       	breq	.+24     	; 0x54a <vfprintf+0x92>
     532:	80 33       	cpi	r24, 0x30	; 48
     534:	69 f4       	brne	.+26     	; 0x550 <vfprintf+0x98>
     536:	23 2d       	mov	r18, r3
     538:	21 60       	ori	r18, 0x01	; 1
     53a:	16 c0       	rjmp	.+44     	; 0x568 <vfprintf+0xb0>
     53c:	83 2d       	mov	r24, r3
     53e:	82 60       	ori	r24, 0x02	; 2
     540:	38 2e       	mov	r3, r24
     542:	e3 2d       	mov	r30, r3
     544:	e4 60       	ori	r30, 0x04	; 4
     546:	3e 2e       	mov	r3, r30
     548:	2a c0       	rjmp	.+84     	; 0x59e <vfprintf+0xe6>
     54a:	f3 2d       	mov	r31, r3
     54c:	f8 60       	ori	r31, 0x08	; 8
     54e:	1d c0       	rjmp	.+58     	; 0x58a <vfprintf+0xd2>
     550:	37 fc       	sbrc	r3, 7
     552:	2d c0       	rjmp	.+90     	; 0x5ae <vfprintf+0xf6>
     554:	20 ed       	ldi	r18, 0xD0	; 208
     556:	28 0f       	add	r18, r24
     558:	2a 30       	cpi	r18, 0x0A	; 10
     55a:	40 f0       	brcs	.+16     	; 0x56c <vfprintf+0xb4>
     55c:	8e 32       	cpi	r24, 0x2E	; 46
     55e:	b9 f4       	brne	.+46     	; 0x58e <vfprintf+0xd6>
     560:	36 fc       	sbrc	r3, 6
     562:	81 c1       	rjmp	.+770    	; 0x866 <__DATA_REGION_LENGTH__+0x66>
     564:	23 2d       	mov	r18, r3
     566:	20 64       	ori	r18, 0x40	; 64
     568:	32 2e       	mov	r3, r18
     56a:	19 c0       	rjmp	.+50     	; 0x59e <vfprintf+0xe6>
     56c:	36 fe       	sbrs	r3, 6
     56e:	06 c0       	rjmp	.+12     	; 0x57c <vfprintf+0xc4>
     570:	8a e0       	ldi	r24, 0x0A	; 10
     572:	98 9e       	mul	r9, r24
     574:	20 0d       	add	r18, r0
     576:	11 24       	eor	r1, r1
     578:	92 2e       	mov	r9, r18
     57a:	11 c0       	rjmp	.+34     	; 0x59e <vfprintf+0xe6>
     57c:	ea e0       	ldi	r30, 0x0A	; 10
     57e:	2e 9e       	mul	r2, r30
     580:	20 0d       	add	r18, r0
     582:	11 24       	eor	r1, r1
     584:	22 2e       	mov	r2, r18
     586:	f3 2d       	mov	r31, r3
     588:	f0 62       	ori	r31, 0x20	; 32
     58a:	3f 2e       	mov	r3, r31
     58c:	08 c0       	rjmp	.+16     	; 0x59e <vfprintf+0xe6>
     58e:	8c 36       	cpi	r24, 0x6C	; 108
     590:	21 f4       	brne	.+8      	; 0x59a <vfprintf+0xe2>
     592:	83 2d       	mov	r24, r3
     594:	80 68       	ori	r24, 0x80	; 128
     596:	38 2e       	mov	r3, r24
     598:	02 c0       	rjmp	.+4      	; 0x59e <vfprintf+0xe6>
     59a:	88 36       	cpi	r24, 0x68	; 104
     59c:	41 f4       	brne	.+16     	; 0x5ae <vfprintf+0xf6>
     59e:	f7 01       	movw	r30, r14
     5a0:	93 fd       	sbrc	r25, 3
     5a2:	85 91       	lpm	r24, Z+
     5a4:	93 ff       	sbrs	r25, 3
     5a6:	81 91       	ld	r24, Z+
     5a8:	7f 01       	movw	r14, r30
     5aa:	81 11       	cpse	r24, r1
     5ac:	b3 cf       	rjmp	.-154    	; 0x514 <vfprintf+0x5c>
     5ae:	98 2f       	mov	r25, r24
     5b0:	9f 7d       	andi	r25, 0xDF	; 223
     5b2:	95 54       	subi	r25, 0x45	; 69
     5b4:	93 30       	cpi	r25, 0x03	; 3
     5b6:	28 f4       	brcc	.+10     	; 0x5c2 <vfprintf+0x10a>
     5b8:	0c 5f       	subi	r16, 0xFC	; 252
     5ba:	1f 4f       	sbci	r17, 0xFF	; 255
     5bc:	9f e3       	ldi	r25, 0x3F	; 63
     5be:	99 83       	std	Y+1, r25	; 0x01
     5c0:	0d c0       	rjmp	.+26     	; 0x5dc <vfprintf+0x124>
     5c2:	83 36       	cpi	r24, 0x63	; 99
     5c4:	31 f0       	breq	.+12     	; 0x5d2 <vfprintf+0x11a>
     5c6:	83 37       	cpi	r24, 0x73	; 115
     5c8:	71 f0       	breq	.+28     	; 0x5e6 <vfprintf+0x12e>
     5ca:	83 35       	cpi	r24, 0x53	; 83
     5cc:	09 f0       	breq	.+2      	; 0x5d0 <vfprintf+0x118>
     5ce:	59 c0       	rjmp	.+178    	; 0x682 <vfprintf+0x1ca>
     5d0:	21 c0       	rjmp	.+66     	; 0x614 <vfprintf+0x15c>
     5d2:	f8 01       	movw	r30, r16
     5d4:	80 81       	ld	r24, Z
     5d6:	89 83       	std	Y+1, r24	; 0x01
     5d8:	0e 5f       	subi	r16, 0xFE	; 254
     5da:	1f 4f       	sbci	r17, 0xFF	; 255
     5dc:	88 24       	eor	r8, r8
     5de:	83 94       	inc	r8
     5e0:	91 2c       	mov	r9, r1
     5e2:	53 01       	movw	r10, r6
     5e4:	13 c0       	rjmp	.+38     	; 0x60c <vfprintf+0x154>
     5e6:	28 01       	movw	r4, r16
     5e8:	f2 e0       	ldi	r31, 0x02	; 2
     5ea:	4f 0e       	add	r4, r31
     5ec:	51 1c       	adc	r5, r1
     5ee:	f8 01       	movw	r30, r16
     5f0:	a0 80       	ld	r10, Z
     5f2:	b1 80       	ldd	r11, Z+1	; 0x01
     5f4:	36 fe       	sbrs	r3, 6
     5f6:	03 c0       	rjmp	.+6      	; 0x5fe <vfprintf+0x146>
     5f8:	69 2d       	mov	r22, r9
     5fa:	70 e0       	ldi	r23, 0x00	; 0
     5fc:	02 c0       	rjmp	.+4      	; 0x602 <vfprintf+0x14a>
     5fe:	6f ef       	ldi	r22, 0xFF	; 255
     600:	7f ef       	ldi	r23, 0xFF	; 255
     602:	c5 01       	movw	r24, r10
     604:	0e 94 09 07 	call	0xe12	; 0xe12 <strnlen>
     608:	4c 01       	movw	r8, r24
     60a:	82 01       	movw	r16, r4
     60c:	f3 2d       	mov	r31, r3
     60e:	ff 77       	andi	r31, 0x7F	; 127
     610:	3f 2e       	mov	r3, r31
     612:	16 c0       	rjmp	.+44     	; 0x640 <vfprintf+0x188>
     614:	28 01       	movw	r4, r16
     616:	22 e0       	ldi	r18, 0x02	; 2
     618:	42 0e       	add	r4, r18
     61a:	51 1c       	adc	r5, r1
     61c:	f8 01       	movw	r30, r16
     61e:	a0 80       	ld	r10, Z
     620:	b1 80       	ldd	r11, Z+1	; 0x01
     622:	36 fe       	sbrs	r3, 6
     624:	03 c0       	rjmp	.+6      	; 0x62c <vfprintf+0x174>
     626:	69 2d       	mov	r22, r9
     628:	70 e0       	ldi	r23, 0x00	; 0
     62a:	02 c0       	rjmp	.+4      	; 0x630 <vfprintf+0x178>
     62c:	6f ef       	ldi	r22, 0xFF	; 255
     62e:	7f ef       	ldi	r23, 0xFF	; 255
     630:	c5 01       	movw	r24, r10
     632:	0e 94 fe 06 	call	0xdfc	; 0xdfc <strnlen_P>
     636:	4c 01       	movw	r8, r24
     638:	f3 2d       	mov	r31, r3
     63a:	f0 68       	ori	r31, 0x80	; 128
     63c:	3f 2e       	mov	r3, r31
     63e:	82 01       	movw	r16, r4
     640:	33 fc       	sbrc	r3, 3
     642:	1b c0       	rjmp	.+54     	; 0x67a <vfprintf+0x1c2>
     644:	82 2d       	mov	r24, r2
     646:	90 e0       	ldi	r25, 0x00	; 0
     648:	88 16       	cp	r8, r24
     64a:	99 06       	cpc	r9, r25
     64c:	b0 f4       	brcc	.+44     	; 0x67a <vfprintf+0x1c2>
     64e:	b6 01       	movw	r22, r12
     650:	80 e2       	ldi	r24, 0x20	; 32
     652:	90 e0       	ldi	r25, 0x00	; 0
     654:	0e 94 c4 01 	call	0x388	; 0x388 <fputc>
     658:	2a 94       	dec	r2
     65a:	f4 cf       	rjmp	.-24     	; 0x644 <vfprintf+0x18c>
     65c:	f5 01       	movw	r30, r10
     65e:	37 fc       	sbrc	r3, 7
     660:	85 91       	lpm	r24, Z+
     662:	37 fe       	sbrs	r3, 7
     664:	81 91       	ld	r24, Z+
     666:	5f 01       	movw	r10, r30
     668:	b6 01       	movw	r22, r12
     66a:	90 e0       	ldi	r25, 0x00	; 0
     66c:	0e 94 c4 01 	call	0x388	; 0x388 <fputc>
     670:	21 10       	cpse	r2, r1
     672:	2a 94       	dec	r2
     674:	21 e0       	ldi	r18, 0x01	; 1
     676:	82 1a       	sub	r8, r18
     678:	91 08       	sbc	r9, r1
     67a:	81 14       	cp	r8, r1
     67c:	91 04       	cpc	r9, r1
     67e:	71 f7       	brne	.-36     	; 0x65c <vfprintf+0x1a4>
     680:	e8 c0       	rjmp	.+464    	; 0x852 <__DATA_REGION_LENGTH__+0x52>
     682:	84 36       	cpi	r24, 0x64	; 100
     684:	11 f0       	breq	.+4      	; 0x68a <vfprintf+0x1d2>
     686:	89 36       	cpi	r24, 0x69	; 105
     688:	41 f5       	brne	.+80     	; 0x6da <vfprintf+0x222>
     68a:	f8 01       	movw	r30, r16
     68c:	37 fe       	sbrs	r3, 7
     68e:	07 c0       	rjmp	.+14     	; 0x69e <vfprintf+0x1e6>
     690:	60 81       	ld	r22, Z
     692:	71 81       	ldd	r23, Z+1	; 0x01
     694:	82 81       	ldd	r24, Z+2	; 0x02
     696:	93 81       	ldd	r25, Z+3	; 0x03
     698:	0c 5f       	subi	r16, 0xFC	; 252
     69a:	1f 4f       	sbci	r17, 0xFF	; 255
     69c:	08 c0       	rjmp	.+16     	; 0x6ae <vfprintf+0x1f6>
     69e:	60 81       	ld	r22, Z
     6a0:	71 81       	ldd	r23, Z+1	; 0x01
     6a2:	07 2e       	mov	r0, r23
     6a4:	00 0c       	add	r0, r0
     6a6:	88 0b       	sbc	r24, r24
     6a8:	99 0b       	sbc	r25, r25
     6aa:	0e 5f       	subi	r16, 0xFE	; 254
     6ac:	1f 4f       	sbci	r17, 0xFF	; 255
     6ae:	f3 2d       	mov	r31, r3
     6b0:	ff 76       	andi	r31, 0x6F	; 111
     6b2:	3f 2e       	mov	r3, r31
     6b4:	97 ff       	sbrs	r25, 7
     6b6:	09 c0       	rjmp	.+18     	; 0x6ca <vfprintf+0x212>
     6b8:	90 95       	com	r25
     6ba:	80 95       	com	r24
     6bc:	70 95       	com	r23
     6be:	61 95       	neg	r22
     6c0:	7f 4f       	sbci	r23, 0xFF	; 255
     6c2:	8f 4f       	sbci	r24, 0xFF	; 255
     6c4:	9f 4f       	sbci	r25, 0xFF	; 255
     6c6:	f0 68       	ori	r31, 0x80	; 128
     6c8:	3f 2e       	mov	r3, r31
     6ca:	2a e0       	ldi	r18, 0x0A	; 10
     6cc:	30 e0       	ldi	r19, 0x00	; 0
     6ce:	a3 01       	movw	r20, r6
     6d0:	0e 94 6b 07 	call	0xed6	; 0xed6 <__ultoa_invert>
     6d4:	88 2e       	mov	r8, r24
     6d6:	86 18       	sub	r8, r6
     6d8:	45 c0       	rjmp	.+138    	; 0x764 <vfprintf+0x2ac>
     6da:	85 37       	cpi	r24, 0x75	; 117
     6dc:	31 f4       	brne	.+12     	; 0x6ea <vfprintf+0x232>
     6de:	23 2d       	mov	r18, r3
     6e0:	2f 7e       	andi	r18, 0xEF	; 239
     6e2:	b2 2e       	mov	r11, r18
     6e4:	2a e0       	ldi	r18, 0x0A	; 10
     6e6:	30 e0       	ldi	r19, 0x00	; 0
     6e8:	25 c0       	rjmp	.+74     	; 0x734 <vfprintf+0x27c>
     6ea:	93 2d       	mov	r25, r3
     6ec:	99 7f       	andi	r25, 0xF9	; 249
     6ee:	b9 2e       	mov	r11, r25
     6f0:	8f 36       	cpi	r24, 0x6F	; 111
     6f2:	c1 f0       	breq	.+48     	; 0x724 <vfprintf+0x26c>
     6f4:	18 f4       	brcc	.+6      	; 0x6fc <vfprintf+0x244>
     6f6:	88 35       	cpi	r24, 0x58	; 88
     6f8:	79 f0       	breq	.+30     	; 0x718 <vfprintf+0x260>
     6fa:	b5 c0       	rjmp	.+362    	; 0x866 <__DATA_REGION_LENGTH__+0x66>
     6fc:	80 37       	cpi	r24, 0x70	; 112
     6fe:	19 f0       	breq	.+6      	; 0x706 <vfprintf+0x24e>
     700:	88 37       	cpi	r24, 0x78	; 120
     702:	21 f0       	breq	.+8      	; 0x70c <vfprintf+0x254>
     704:	b0 c0       	rjmp	.+352    	; 0x866 <__DATA_REGION_LENGTH__+0x66>
     706:	e9 2f       	mov	r30, r25
     708:	e0 61       	ori	r30, 0x10	; 16
     70a:	be 2e       	mov	r11, r30
     70c:	b4 fe       	sbrs	r11, 4
     70e:	0d c0       	rjmp	.+26     	; 0x72a <vfprintf+0x272>
     710:	fb 2d       	mov	r31, r11
     712:	f4 60       	ori	r31, 0x04	; 4
     714:	bf 2e       	mov	r11, r31
     716:	09 c0       	rjmp	.+18     	; 0x72a <vfprintf+0x272>
     718:	34 fe       	sbrs	r3, 4
     71a:	0a c0       	rjmp	.+20     	; 0x730 <vfprintf+0x278>
     71c:	29 2f       	mov	r18, r25
     71e:	26 60       	ori	r18, 0x06	; 6
     720:	b2 2e       	mov	r11, r18
     722:	06 c0       	rjmp	.+12     	; 0x730 <vfprintf+0x278>
     724:	28 e0       	ldi	r18, 0x08	; 8
     726:	30 e0       	ldi	r19, 0x00	; 0
     728:	05 c0       	rjmp	.+10     	; 0x734 <vfprintf+0x27c>
     72a:	20 e1       	ldi	r18, 0x10	; 16
     72c:	30 e0       	ldi	r19, 0x00	; 0
     72e:	02 c0       	rjmp	.+4      	; 0x734 <vfprintf+0x27c>
     730:	20 e1       	ldi	r18, 0x10	; 16
     732:	32 e0       	ldi	r19, 0x02	; 2
     734:	f8 01       	movw	r30, r16
     736:	b7 fe       	sbrs	r11, 7
     738:	07 c0       	rjmp	.+14     	; 0x748 <vfprintf+0x290>
     73a:	60 81       	ld	r22, Z
     73c:	71 81       	ldd	r23, Z+1	; 0x01
     73e:	82 81       	ldd	r24, Z+2	; 0x02
     740:	93 81       	ldd	r25, Z+3	; 0x03
     742:	0c 5f       	subi	r16, 0xFC	; 252
     744:	1f 4f       	sbci	r17, 0xFF	; 255
     746:	06 c0       	rjmp	.+12     	; 0x754 <vfprintf+0x29c>
     748:	60 81       	ld	r22, Z
     74a:	71 81       	ldd	r23, Z+1	; 0x01
     74c:	80 e0       	ldi	r24, 0x00	; 0
     74e:	90 e0       	ldi	r25, 0x00	; 0
     750:	0e 5f       	subi	r16, 0xFE	; 254
     752:	1f 4f       	sbci	r17, 0xFF	; 255
     754:	a3 01       	movw	r20, r6
     756:	0e 94 6b 07 	call	0xed6	; 0xed6 <__ultoa_invert>
     75a:	88 2e       	mov	r8, r24
     75c:	86 18       	sub	r8, r6
     75e:	fb 2d       	mov	r31, r11
     760:	ff 77       	andi	r31, 0x7F	; 127
     762:	3f 2e       	mov	r3, r31
     764:	36 fe       	sbrs	r3, 6
     766:	0d c0       	rjmp	.+26     	; 0x782 <vfprintf+0x2ca>
     768:	23 2d       	mov	r18, r3
     76a:	2e 7f       	andi	r18, 0xFE	; 254
     76c:	a2 2e       	mov	r10, r18
     76e:	89 14       	cp	r8, r9
     770:	58 f4       	brcc	.+22     	; 0x788 <vfprintf+0x2d0>
     772:	34 fe       	sbrs	r3, 4
     774:	0b c0       	rjmp	.+22     	; 0x78c <vfprintf+0x2d4>
     776:	32 fc       	sbrc	r3, 2
     778:	09 c0       	rjmp	.+18     	; 0x78c <vfprintf+0x2d4>
     77a:	83 2d       	mov	r24, r3
     77c:	8e 7e       	andi	r24, 0xEE	; 238
     77e:	a8 2e       	mov	r10, r24
     780:	05 c0       	rjmp	.+10     	; 0x78c <vfprintf+0x2d4>
     782:	b8 2c       	mov	r11, r8
     784:	a3 2c       	mov	r10, r3
     786:	03 c0       	rjmp	.+6      	; 0x78e <vfprintf+0x2d6>
     788:	b8 2c       	mov	r11, r8
     78a:	01 c0       	rjmp	.+2      	; 0x78e <vfprintf+0x2d6>
     78c:	b9 2c       	mov	r11, r9
     78e:	a4 fe       	sbrs	r10, 4
     790:	0f c0       	rjmp	.+30     	; 0x7b0 <vfprintf+0x2f8>
     792:	fe 01       	movw	r30, r28
     794:	e8 0d       	add	r30, r8
     796:	f1 1d       	adc	r31, r1
     798:	80 81       	ld	r24, Z
     79a:	80 33       	cpi	r24, 0x30	; 48
     79c:	21 f4       	brne	.+8      	; 0x7a6 <vfprintf+0x2ee>
     79e:	9a 2d       	mov	r25, r10
     7a0:	99 7e       	andi	r25, 0xE9	; 233
     7a2:	a9 2e       	mov	r10, r25
     7a4:	09 c0       	rjmp	.+18     	; 0x7b8 <vfprintf+0x300>
     7a6:	a2 fe       	sbrs	r10, 2
     7a8:	06 c0       	rjmp	.+12     	; 0x7b6 <vfprintf+0x2fe>
     7aa:	b3 94       	inc	r11
     7ac:	b3 94       	inc	r11
     7ae:	04 c0       	rjmp	.+8      	; 0x7b8 <vfprintf+0x300>
     7b0:	8a 2d       	mov	r24, r10
     7b2:	86 78       	andi	r24, 0x86	; 134
     7b4:	09 f0       	breq	.+2      	; 0x7b8 <vfprintf+0x300>
     7b6:	b3 94       	inc	r11
     7b8:	a3 fc       	sbrc	r10, 3
     7ba:	11 c0       	rjmp	.+34     	; 0x7de <vfprintf+0x326>
     7bc:	a0 fe       	sbrs	r10, 0
     7be:	06 c0       	rjmp	.+12     	; 0x7cc <vfprintf+0x314>
     7c0:	b2 14       	cp	r11, r2
     7c2:	88 f4       	brcc	.+34     	; 0x7e6 <vfprintf+0x32e>
     7c4:	28 0c       	add	r2, r8
     7c6:	92 2c       	mov	r9, r2
     7c8:	9b 18       	sub	r9, r11
     7ca:	0e c0       	rjmp	.+28     	; 0x7e8 <vfprintf+0x330>
     7cc:	b2 14       	cp	r11, r2
     7ce:	60 f4       	brcc	.+24     	; 0x7e8 <vfprintf+0x330>
     7d0:	b6 01       	movw	r22, r12
     7d2:	80 e2       	ldi	r24, 0x20	; 32
     7d4:	90 e0       	ldi	r25, 0x00	; 0
     7d6:	0e 94 c4 01 	call	0x388	; 0x388 <fputc>
     7da:	b3 94       	inc	r11
     7dc:	f7 cf       	rjmp	.-18     	; 0x7cc <vfprintf+0x314>
     7de:	b2 14       	cp	r11, r2
     7e0:	18 f4       	brcc	.+6      	; 0x7e8 <vfprintf+0x330>
     7e2:	2b 18       	sub	r2, r11
     7e4:	02 c0       	rjmp	.+4      	; 0x7ea <vfprintf+0x332>
     7e6:	98 2c       	mov	r9, r8
     7e8:	21 2c       	mov	r2, r1
     7ea:	a4 fe       	sbrs	r10, 4
     7ec:	10 c0       	rjmp	.+32     	; 0x80e <__DATA_REGION_LENGTH__+0xe>
     7ee:	b6 01       	movw	r22, r12
     7f0:	80 e3       	ldi	r24, 0x30	; 48
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	0e 94 c4 01 	call	0x388	; 0x388 <fputc>
     7f8:	a2 fe       	sbrs	r10, 2
     7fa:	17 c0       	rjmp	.+46     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     7fc:	a1 fc       	sbrc	r10, 1
     7fe:	03 c0       	rjmp	.+6      	; 0x806 <__DATA_REGION_LENGTH__+0x6>
     800:	88 e7       	ldi	r24, 0x78	; 120
     802:	90 e0       	ldi	r25, 0x00	; 0
     804:	02 c0       	rjmp	.+4      	; 0x80a <__DATA_REGION_LENGTH__+0xa>
     806:	88 e5       	ldi	r24, 0x58	; 88
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	b6 01       	movw	r22, r12
     80c:	0c c0       	rjmp	.+24     	; 0x826 <__DATA_REGION_LENGTH__+0x26>
     80e:	8a 2d       	mov	r24, r10
     810:	86 78       	andi	r24, 0x86	; 134
     812:	59 f0       	breq	.+22     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     814:	a1 fe       	sbrs	r10, 1
     816:	02 c0       	rjmp	.+4      	; 0x81c <__DATA_REGION_LENGTH__+0x1c>
     818:	8b e2       	ldi	r24, 0x2B	; 43
     81a:	01 c0       	rjmp	.+2      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
     81c:	80 e2       	ldi	r24, 0x20	; 32
     81e:	a7 fc       	sbrc	r10, 7
     820:	8d e2       	ldi	r24, 0x2D	; 45
     822:	b6 01       	movw	r22, r12
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	0e 94 c4 01 	call	0x388	; 0x388 <fputc>
     82a:	89 14       	cp	r8, r9
     82c:	38 f4       	brcc	.+14     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
     82e:	b6 01       	movw	r22, r12
     830:	80 e3       	ldi	r24, 0x30	; 48
     832:	90 e0       	ldi	r25, 0x00	; 0
     834:	0e 94 c4 01 	call	0x388	; 0x388 <fputc>
     838:	9a 94       	dec	r9
     83a:	f7 cf       	rjmp	.-18     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
     83c:	8a 94       	dec	r8
     83e:	f3 01       	movw	r30, r6
     840:	e8 0d       	add	r30, r8
     842:	f1 1d       	adc	r31, r1
     844:	80 81       	ld	r24, Z
     846:	b6 01       	movw	r22, r12
     848:	90 e0       	ldi	r25, 0x00	; 0
     84a:	0e 94 c4 01 	call	0x388	; 0x388 <fputc>
     84e:	81 10       	cpse	r8, r1
     850:	f5 cf       	rjmp	.-22     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
     852:	22 20       	and	r2, r2
     854:	09 f4       	brne	.+2      	; 0x858 <__DATA_REGION_LENGTH__+0x58>
     856:	42 ce       	rjmp	.-892    	; 0x4dc <vfprintf+0x24>
     858:	b6 01       	movw	r22, r12
     85a:	80 e2       	ldi	r24, 0x20	; 32
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	0e 94 c4 01 	call	0x388	; 0x388 <fputc>
     862:	2a 94       	dec	r2
     864:	f6 cf       	rjmp	.-20     	; 0x852 <__DATA_REGION_LENGTH__+0x52>
     866:	f6 01       	movw	r30, r12
     868:	86 81       	ldd	r24, Z+6	; 0x06
     86a:	97 81       	ldd	r25, Z+7	; 0x07
     86c:	02 c0       	rjmp	.+4      	; 0x872 <__DATA_REGION_LENGTH__+0x72>
     86e:	8f ef       	ldi	r24, 0xFF	; 255
     870:	9f ef       	ldi	r25, 0xFF	; 255
     872:	2b 96       	adiw	r28, 0x0b	; 11
     874:	e2 e1       	ldi	r30, 0x12	; 18
     876:	0c 94 e8 07 	jmp	0xfd0	; 0xfd0 <__epilogue_restores__>

0000087a <putval>:
     87a:	20 fd       	sbrc	r18, 0
     87c:	09 c0       	rjmp	.+18     	; 0x890 <putval+0x16>
     87e:	fc 01       	movw	r30, r24
     880:	23 fd       	sbrc	r18, 3
     882:	05 c0       	rjmp	.+10     	; 0x88e <putval+0x14>
     884:	22 ff       	sbrs	r18, 2
     886:	02 c0       	rjmp	.+4      	; 0x88c <putval+0x12>
     888:	73 83       	std	Z+3, r23	; 0x03
     88a:	62 83       	std	Z+2, r22	; 0x02
     88c:	51 83       	std	Z+1, r21	; 0x01
     88e:	40 83       	st	Z, r20
     890:	08 95       	ret

00000892 <mulacc>:
     892:	44 fd       	sbrc	r20, 4
     894:	17 c0       	rjmp	.+46     	; 0x8c4 <mulacc+0x32>
     896:	46 fd       	sbrc	r20, 6
     898:	17 c0       	rjmp	.+46     	; 0x8c8 <mulacc+0x36>
     89a:	ab 01       	movw	r20, r22
     89c:	bc 01       	movw	r22, r24
     89e:	da 01       	movw	r26, r20
     8a0:	fb 01       	movw	r30, r22
     8a2:	aa 0f       	add	r26, r26
     8a4:	bb 1f       	adc	r27, r27
     8a6:	ee 1f       	adc	r30, r30
     8a8:	ff 1f       	adc	r31, r31
     8aa:	10 94       	com	r1
     8ac:	d1 f7       	brne	.-12     	; 0x8a2 <mulacc+0x10>
     8ae:	4a 0f       	add	r20, r26
     8b0:	5b 1f       	adc	r21, r27
     8b2:	6e 1f       	adc	r22, r30
     8b4:	7f 1f       	adc	r23, r31
     8b6:	cb 01       	movw	r24, r22
     8b8:	ba 01       	movw	r22, r20
     8ba:	66 0f       	add	r22, r22
     8bc:	77 1f       	adc	r23, r23
     8be:	88 1f       	adc	r24, r24
     8c0:	99 1f       	adc	r25, r25
     8c2:	09 c0       	rjmp	.+18     	; 0x8d6 <mulacc+0x44>
     8c4:	33 e0       	ldi	r19, 0x03	; 3
     8c6:	01 c0       	rjmp	.+2      	; 0x8ca <mulacc+0x38>
     8c8:	34 e0       	ldi	r19, 0x04	; 4
     8ca:	66 0f       	add	r22, r22
     8cc:	77 1f       	adc	r23, r23
     8ce:	88 1f       	adc	r24, r24
     8d0:	99 1f       	adc	r25, r25
     8d2:	31 50       	subi	r19, 0x01	; 1
     8d4:	d1 f7       	brne	.-12     	; 0x8ca <mulacc+0x38>
     8d6:	62 0f       	add	r22, r18
     8d8:	71 1d       	adc	r23, r1
     8da:	81 1d       	adc	r24, r1
     8dc:	91 1d       	adc	r25, r1
     8de:	08 95       	ret

000008e0 <skip_spaces>:
     8e0:	0f 93       	push	r16
     8e2:	1f 93       	push	r17
     8e4:	cf 93       	push	r28
     8e6:	df 93       	push	r29
     8e8:	8c 01       	movw	r16, r24
     8ea:	c8 01       	movw	r24, r16
     8ec:	0e 94 14 07 	call	0xe28	; 0xe28 <fgetc>
     8f0:	ec 01       	movw	r28, r24
     8f2:	97 fd       	sbrc	r25, 7
     8f4:	08 c0       	rjmp	.+16     	; 0x906 <__stack+0x7>
     8f6:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <isspace>
     8fa:	89 2b       	or	r24, r25
     8fc:	b1 f7       	brne	.-20     	; 0x8ea <skip_spaces+0xa>
     8fe:	b8 01       	movw	r22, r16
     900:	ce 01       	movw	r24, r28
     902:	0e 94 52 07 	call	0xea4	; 0xea4 <ungetc>
     906:	ce 01       	movw	r24, r28
     908:	df 91       	pop	r29
     90a:	cf 91       	pop	r28
     90c:	1f 91       	pop	r17
     90e:	0f 91       	pop	r16
     910:	08 95       	ret

00000912 <conv_int>:
     912:	8f 92       	push	r8
     914:	9f 92       	push	r9
     916:	af 92       	push	r10
     918:	bf 92       	push	r11
     91a:	ef 92       	push	r14
     91c:	ff 92       	push	r15
     91e:	0f 93       	push	r16
     920:	1f 93       	push	r17
     922:	cf 93       	push	r28
     924:	df 93       	push	r29
     926:	8c 01       	movw	r16, r24
     928:	d6 2f       	mov	r29, r22
     92a:	7a 01       	movw	r14, r20
     92c:	b2 2e       	mov	r11, r18
     92e:	0e 94 14 07 	call	0xe28	; 0xe28 <fgetc>
     932:	9c 01       	movw	r18, r24
     934:	33 27       	eor	r19, r19
     936:	2b 32       	cpi	r18, 0x2B	; 43
     938:	31 05       	cpc	r19, r1
     93a:	31 f0       	breq	.+12     	; 0x948 <conv_int+0x36>
     93c:	2d 32       	cpi	r18, 0x2D	; 45
     93e:	31 05       	cpc	r19, r1
     940:	61 f4       	brne	.+24     	; 0x95a <conv_int+0x48>
     942:	8b 2d       	mov	r24, r11
     944:	80 68       	ori	r24, 0x80	; 128
     946:	b8 2e       	mov	r11, r24
     948:	d1 50       	subi	r29, 0x01	; 1
     94a:	11 f4       	brne	.+4      	; 0x950 <conv_int+0x3e>
     94c:	80 e0       	ldi	r24, 0x00	; 0
     94e:	68 c0       	rjmp	.+208    	; 0xa20 <conv_int+0x10e>
     950:	c8 01       	movw	r24, r16
     952:	0e 94 14 07 	call	0xe28	; 0xe28 <fgetc>
     956:	97 fd       	sbrc	r25, 7
     958:	f9 cf       	rjmp	.-14     	; 0x94c <conv_int+0x3a>
     95a:	cb 2d       	mov	r28, r11
     95c:	cd 7f       	andi	r28, 0xFD	; 253
     95e:	2b 2d       	mov	r18, r11
     960:	20 73       	andi	r18, 0x30	; 48
     962:	09 f5       	brne	.+66     	; 0x9a6 <conv_int+0x94>
     964:	80 33       	cpi	r24, 0x30	; 48
     966:	f9 f4       	brne	.+62     	; 0x9a6 <conv_int+0x94>
     968:	aa 24       	eor	r10, r10
     96a:	aa 94       	dec	r10
     96c:	ad 0e       	add	r10, r29
     96e:	09 f4       	brne	.+2      	; 0x972 <conv_int+0x60>
     970:	43 c0       	rjmp	.+134    	; 0x9f8 <conv_int+0xe6>
     972:	c8 01       	movw	r24, r16
     974:	0e 94 14 07 	call	0xe28	; 0xe28 <fgetc>
     978:	97 fd       	sbrc	r25, 7
     97a:	3e c0       	rjmp	.+124    	; 0x9f8 <conv_int+0xe6>
     97c:	9c 01       	movw	r18, r24
     97e:	2f 7d       	andi	r18, 0xDF	; 223
     980:	33 27       	eor	r19, r19
     982:	28 35       	cpi	r18, 0x58	; 88
     984:	31 05       	cpc	r19, r1
     986:	49 f4       	brne	.+18     	; 0x99a <conv_int+0x88>
     988:	c2 64       	ori	r28, 0x42	; 66
     98a:	d2 50       	subi	r29, 0x02	; 2
     98c:	a9 f1       	breq	.+106    	; 0x9f8 <conv_int+0xe6>
     98e:	c8 01       	movw	r24, r16
     990:	0e 94 14 07 	call	0xe28	; 0xe28 <fgetc>
     994:	97 ff       	sbrs	r25, 7
     996:	07 c0       	rjmp	.+14     	; 0x9a6 <conv_int+0x94>
     998:	2f c0       	rjmp	.+94     	; 0x9f8 <conv_int+0xe6>
     99a:	b6 fe       	sbrs	r11, 6
     99c:	02 c0       	rjmp	.+4      	; 0x9a2 <conv_int+0x90>
     99e:	c2 60       	ori	r28, 0x02	; 2
     9a0:	01 c0       	rjmp	.+2      	; 0x9a4 <conv_int+0x92>
     9a2:	c2 61       	ori	r28, 0x12	; 18
     9a4:	da 2d       	mov	r29, r10
     9a6:	81 2c       	mov	r8, r1
     9a8:	91 2c       	mov	r9, r1
     9aa:	54 01       	movw	r10, r8
     9ac:	20 ed       	ldi	r18, 0xD0	; 208
     9ae:	28 0f       	add	r18, r24
     9b0:	28 30       	cpi	r18, 0x08	; 8
     9b2:	80 f0       	brcs	.+32     	; 0x9d4 <conv_int+0xc2>
     9b4:	c4 ff       	sbrs	r28, 4
     9b6:	04 c0       	rjmp	.+8      	; 0x9c0 <conv_int+0xae>
     9b8:	b8 01       	movw	r22, r16
     9ba:	0e 94 52 07 	call	0xea4	; 0xea4 <ungetc>
     9be:	19 c0       	rjmp	.+50     	; 0x9f2 <conv_int+0xe0>
     9c0:	2a 30       	cpi	r18, 0x0A	; 10
     9c2:	40 f0       	brcs	.+16     	; 0x9d4 <conv_int+0xc2>
     9c4:	c6 ff       	sbrs	r28, 6
     9c6:	f8 cf       	rjmp	.-16     	; 0x9b8 <conv_int+0xa6>
     9c8:	2f 7d       	andi	r18, 0xDF	; 223
     9ca:	3f ee       	ldi	r19, 0xEF	; 239
     9cc:	32 0f       	add	r19, r18
     9ce:	36 30       	cpi	r19, 0x06	; 6
     9d0:	98 f7       	brcc	.-26     	; 0x9b8 <conv_int+0xa6>
     9d2:	27 50       	subi	r18, 0x07	; 7
     9d4:	4c 2f       	mov	r20, r28
     9d6:	c5 01       	movw	r24, r10
     9d8:	b4 01       	movw	r22, r8
     9da:	0e 94 49 04 	call	0x892	; 0x892 <mulacc>
     9de:	4b 01       	movw	r8, r22
     9e0:	5c 01       	movw	r10, r24
     9e2:	c2 60       	ori	r28, 0x02	; 2
     9e4:	d1 50       	subi	r29, 0x01	; 1
     9e6:	59 f0       	breq	.+22     	; 0x9fe <conv_int+0xec>
     9e8:	c8 01       	movw	r24, r16
     9ea:	0e 94 14 07 	call	0xe28	; 0xe28 <fgetc>
     9ee:	97 ff       	sbrs	r25, 7
     9f0:	dd cf       	rjmp	.-70     	; 0x9ac <conv_int+0x9a>
     9f2:	c1 fd       	sbrc	r28, 1
     9f4:	04 c0       	rjmp	.+8      	; 0x9fe <conv_int+0xec>
     9f6:	aa cf       	rjmp	.-172    	; 0x94c <conv_int+0x3a>
     9f8:	81 2c       	mov	r8, r1
     9fa:	91 2c       	mov	r9, r1
     9fc:	54 01       	movw	r10, r8
     9fe:	c7 ff       	sbrs	r28, 7
     a00:	08 c0       	rjmp	.+16     	; 0xa12 <conv_int+0x100>
     a02:	b0 94       	com	r11
     a04:	a0 94       	com	r10
     a06:	90 94       	com	r9
     a08:	80 94       	com	r8
     a0a:	81 1c       	adc	r8, r1
     a0c:	91 1c       	adc	r9, r1
     a0e:	a1 1c       	adc	r10, r1
     a10:	b1 1c       	adc	r11, r1
     a12:	2c 2f       	mov	r18, r28
     a14:	b5 01       	movw	r22, r10
     a16:	a4 01       	movw	r20, r8
     a18:	c7 01       	movw	r24, r14
     a1a:	0e 94 3d 04 	call	0x87a	; 0x87a <putval>
     a1e:	81 e0       	ldi	r24, 0x01	; 1
     a20:	df 91       	pop	r29
     a22:	cf 91       	pop	r28
     a24:	1f 91       	pop	r17
     a26:	0f 91       	pop	r16
     a28:	ff 90       	pop	r15
     a2a:	ef 90       	pop	r14
     a2c:	bf 90       	pop	r11
     a2e:	af 90       	pop	r10
     a30:	9f 90       	pop	r9
     a32:	8f 90       	pop	r8
     a34:	08 95       	ret

00000a36 <conv_brk>:
     a36:	a0 e2       	ldi	r26, 0x20	; 32
     a38:	b0 e0       	ldi	r27, 0x00	; 0
     a3a:	e1 e2       	ldi	r30, 0x21	; 33
     a3c:	f5 e0       	ldi	r31, 0x05	; 5
     a3e:	0c 94 cf 07 	jmp	0xf9e	; 0xf9e <__prologue_saves__+0x6>
     a42:	5c 01       	movw	r10, r24
     a44:	96 2e       	mov	r9, r22
     a46:	7a 01       	movw	r14, r20
     a48:	f9 01       	movw	r30, r18
     a4a:	8e 01       	movw	r16, r28
     a4c:	0f 5f       	subi	r16, 0xFF	; 255
     a4e:	1f 4f       	sbci	r17, 0xFF	; 255
     a50:	68 01       	movw	r12, r16
     a52:	80 e2       	ldi	r24, 0x20	; 32
     a54:	d8 01       	movw	r26, r16
     a56:	1d 92       	st	X+, r1
     a58:	8a 95       	dec	r24
     a5a:	e9 f7       	brne	.-6      	; 0xa56 <conv_brk+0x20>
     a5c:	d5 01       	movw	r26, r10
     a5e:	13 96       	adiw	r26, 0x03	; 3
     a60:	8c 90       	ld	r8, X
     a62:	80 e0       	ldi	r24, 0x00	; 0
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	61 2c       	mov	r6, r1
     a68:	71 2c       	mov	r7, r1
     a6a:	30 e0       	ldi	r19, 0x00	; 0
     a6c:	61 e0       	ldi	r22, 0x01	; 1
     a6e:	70 e0       	ldi	r23, 0x00	; 0
     a70:	83 fc       	sbrc	r8, 3
     a72:	25 91       	lpm	r18, Z+
     a74:	83 fe       	sbrs	r8, 3
     a76:	21 91       	ld	r18, Z+
     a78:	8f 01       	movw	r16, r30
     a7a:	52 2e       	mov	r5, r18
     a7c:	21 11       	cpse	r18, r1
     a7e:	03 c0       	rjmp	.+6      	; 0xa86 <conv_brk+0x50>
     a80:	80 e0       	ldi	r24, 0x00	; 0
     a82:	90 e0       	ldi	r25, 0x00	; 0
     a84:	92 c0       	rjmp	.+292    	; 0xbaa <conv_brk+0x174>
     a86:	2e 35       	cpi	r18, 0x5E	; 94
     a88:	11 f4       	brne	.+4      	; 0xa8e <conv_brk+0x58>
     a8a:	00 97       	sbiw	r24, 0x00	; 0
     a8c:	51 f1       	breq	.+84     	; 0xae2 <conv_brk+0xac>
     a8e:	43 2f       	mov	r20, r19
     a90:	50 e0       	ldi	r21, 0x00	; 0
     a92:	48 17       	cp	r20, r24
     a94:	59 07       	cpc	r21, r25
     a96:	3c f4       	brge	.+14     	; 0xaa6 <conv_brk+0x70>
     a98:	2d 35       	cpi	r18, 0x5D	; 93
     a9a:	59 f1       	breq	.+86     	; 0xaf2 <conv_brk+0xbc>
     a9c:	2d 32       	cpi	r18, 0x2D	; 45
     a9e:	19 f4       	brne	.+6      	; 0xaa6 <conv_brk+0x70>
     aa0:	77 20       	and	r7, r7
     aa2:	09 f1       	breq	.+66     	; 0xae6 <conv_brk+0xb0>
     aa4:	03 c0       	rjmp	.+6      	; 0xaac <conv_brk+0x76>
     aa6:	77 20       	and	r7, r7
     aa8:	09 f4       	brne	.+2      	; 0xaac <conv_brk+0x76>
     aaa:	6a c0       	rjmp	.+212    	; 0xb80 <conv_brk+0x14a>
     aac:	45 2d       	mov	r20, r5
     aae:	46 95       	lsr	r20
     ab0:	46 95       	lsr	r20
     ab2:	46 95       	lsr	r20
     ab4:	d6 01       	movw	r26, r12
     ab6:	a4 0f       	add	r26, r20
     ab8:	b1 1d       	adc	r27, r1
     aba:	45 2d       	mov	r20, r5
     abc:	47 70       	andi	r20, 0x07	; 7
     abe:	8b 01       	movw	r16, r22
     ac0:	02 c0       	rjmp	.+4      	; 0xac6 <conv_brk+0x90>
     ac2:	00 0f       	add	r16, r16
     ac4:	11 1f       	adc	r17, r17
     ac6:	4a 95       	dec	r20
     ac8:	e2 f7       	brpl	.-8      	; 0xac2 <conv_brk+0x8c>
     aca:	a8 01       	movw	r20, r16
     acc:	5c 91       	ld	r21, X
     ace:	45 2b       	or	r20, r21
     ad0:	4c 93       	st	X, r20
     ad2:	65 14       	cp	r6, r5
     ad4:	59 f0       	breq	.+22     	; 0xaec <conv_brk+0xb6>
     ad6:	56 14       	cp	r5, r6
     ad8:	10 f4       	brcc	.+4      	; 0xade <conv_brk+0xa8>
     ada:	53 94       	inc	r5
     adc:	e7 cf       	rjmp	.-50     	; 0xaac <conv_brk+0x76>
     ade:	5a 94       	dec	r5
     ae0:	e5 cf       	rjmp	.-54     	; 0xaac <conv_brk+0x76>
     ae2:	31 e0       	ldi	r19, 0x01	; 1
     ae4:	04 c0       	rjmp	.+8      	; 0xaee <conv_brk+0xb8>
     ae6:	77 24       	eor	r7, r7
     ae8:	73 94       	inc	r7
     aea:	01 c0       	rjmp	.+2      	; 0xaee <conv_brk+0xb8>
     aec:	71 2c       	mov	r7, r1
     aee:	01 96       	adiw	r24, 0x01	; 1
     af0:	bf cf       	rjmp	.-130    	; 0xa70 <conv_brk+0x3a>
     af2:	77 20       	and	r7, r7
     af4:	19 f0       	breq	.+6      	; 0xafc <conv_brk+0xc6>
     af6:	8e 81       	ldd	r24, Y+6	; 0x06
     af8:	80 62       	ori	r24, 0x20	; 32
     afa:	8e 83       	std	Y+6, r24	; 0x06
     afc:	31 11       	cpse	r19, r1
     afe:	03 c0       	rjmp	.+6      	; 0xb06 <conv_brk+0xd0>
     b00:	88 24       	eor	r8, r8
     b02:	83 94       	inc	r8
     b04:	17 c0       	rjmp	.+46     	; 0xb34 <conv_brk+0xfe>
     b06:	f6 01       	movw	r30, r12
     b08:	9e 01       	movw	r18, r28
     b0a:	2f 5d       	subi	r18, 0xDF	; 223
     b0c:	3f 4f       	sbci	r19, 0xFF	; 255
     b0e:	80 81       	ld	r24, Z
     b10:	80 95       	com	r24
     b12:	81 93       	st	Z+, r24
     b14:	2e 17       	cp	r18, r30
     b16:	3f 07       	cpc	r19, r31
     b18:	d1 f7       	brne	.-12     	; 0xb0e <conv_brk+0xd8>
     b1a:	f2 cf       	rjmp	.-28     	; 0xb00 <conv_brk+0xca>
     b1c:	e1 14       	cp	r14, r1
     b1e:	f1 04       	cpc	r15, r1
     b20:	29 f0       	breq	.+10     	; 0xb2c <conv_brk+0xf6>
     b22:	d7 01       	movw	r26, r14
     b24:	8c 93       	st	X, r24
     b26:	f7 01       	movw	r30, r14
     b28:	31 96       	adiw	r30, 0x01	; 1
     b2a:	7f 01       	movw	r14, r30
     b2c:	9a 94       	dec	r9
     b2e:	81 2c       	mov	r8, r1
     b30:	99 20       	and	r9, r9
     b32:	f9 f0       	breq	.+62     	; 0xb72 <conv_brk+0x13c>
     b34:	c5 01       	movw	r24, r10
     b36:	0e 94 14 07 	call	0xe28	; 0xe28 <fgetc>
     b3a:	97 fd       	sbrc	r25, 7
     b3c:	18 c0       	rjmp	.+48     	; 0xb6e <conv_brk+0x138>
     b3e:	fc 01       	movw	r30, r24
     b40:	ff 27       	eor	r31, r31
     b42:	23 e0       	ldi	r18, 0x03	; 3
     b44:	f5 95       	asr	r31
     b46:	e7 95       	ror	r30
     b48:	2a 95       	dec	r18
     b4a:	e1 f7       	brne	.-8      	; 0xb44 <conv_brk+0x10e>
     b4c:	ec 0d       	add	r30, r12
     b4e:	fd 1d       	adc	r31, r13
     b50:	20 81       	ld	r18, Z
     b52:	30 e0       	ldi	r19, 0x00	; 0
     b54:	ac 01       	movw	r20, r24
     b56:	47 70       	andi	r20, 0x07	; 7
     b58:	55 27       	eor	r21, r21
     b5a:	02 c0       	rjmp	.+4      	; 0xb60 <conv_brk+0x12a>
     b5c:	35 95       	asr	r19
     b5e:	27 95       	ror	r18
     b60:	4a 95       	dec	r20
     b62:	e2 f7       	brpl	.-8      	; 0xb5c <conv_brk+0x126>
     b64:	20 fd       	sbrc	r18, 0
     b66:	da cf       	rjmp	.-76     	; 0xb1c <conv_brk+0xe6>
     b68:	b5 01       	movw	r22, r10
     b6a:	0e 94 52 07 	call	0xea4	; 0xea4 <ungetc>
     b6e:	81 10       	cpse	r8, r1
     b70:	87 cf       	rjmp	.-242    	; 0xa80 <conv_brk+0x4a>
     b72:	e1 14       	cp	r14, r1
     b74:	f1 04       	cpc	r15, r1
     b76:	11 f0       	breq	.+4      	; 0xb7c <conv_brk+0x146>
     b78:	d7 01       	movw	r26, r14
     b7a:	1c 92       	st	X, r1
     b7c:	c8 01       	movw	r24, r16
     b7e:	15 c0       	rjmp	.+42     	; 0xbaa <conv_brk+0x174>
     b80:	42 2f       	mov	r20, r18
     b82:	46 95       	lsr	r20
     b84:	46 95       	lsr	r20
     b86:	46 95       	lsr	r20
     b88:	d6 01       	movw	r26, r12
     b8a:	a4 0f       	add	r26, r20
     b8c:	b1 1d       	adc	r27, r1
     b8e:	42 2f       	mov	r20, r18
     b90:	47 70       	andi	r20, 0x07	; 7
     b92:	8b 01       	movw	r16, r22
     b94:	02 c0       	rjmp	.+4      	; 0xb9a <conv_brk+0x164>
     b96:	00 0f       	add	r16, r16
     b98:	11 1f       	adc	r17, r17
     b9a:	4a 95       	dec	r20
     b9c:	e2 f7       	brpl	.-8      	; 0xb96 <conv_brk+0x160>
     b9e:	a8 01       	movw	r20, r16
     ba0:	5c 91       	ld	r21, X
     ba2:	45 2b       	or	r20, r21
     ba4:	4c 93       	st	X, r20
     ba6:	62 2e       	mov	r6, r18
     ba8:	a2 cf       	rjmp	.-188    	; 0xaee <conv_brk+0xb8>
     baa:	a0 96       	adiw	r28, 0x20	; 32
     bac:	ef e0       	ldi	r30, 0x0F	; 15
     bae:	0c 94 eb 07 	jmp	0xfd6	; 0xfd6 <__epilogue_restores__+0x6>

00000bb2 <vfscanf>:
     bb2:	a0 e0       	ldi	r26, 0x00	; 0
     bb4:	b0 e0       	ldi	r27, 0x00	; 0
     bb6:	ef ed       	ldi	r30, 0xDF	; 223
     bb8:	f5 e0       	ldi	r31, 0x05	; 5
     bba:	0c 94 cf 07 	jmp	0xf9e	; 0xf9e <__prologue_saves__+0x6>
     bbe:	6c 01       	movw	r12, r24
     bc0:	eb 01       	movw	r28, r22
     bc2:	5a 01       	movw	r10, r20
     bc4:	fc 01       	movw	r30, r24
     bc6:	17 82       	std	Z+7, r1	; 0x07
     bc8:	16 82       	std	Z+6, r1	; 0x06
     bca:	51 2c       	mov	r5, r1
     bcc:	f6 01       	movw	r30, r12
     bce:	e3 80       	ldd	r14, Z+3	; 0x03
     bd0:	fe 01       	movw	r30, r28
     bd2:	e3 fc       	sbrc	r14, 3
     bd4:	85 91       	lpm	r24, Z+
     bd6:	e3 fe       	sbrs	r14, 3
     bd8:	81 91       	ld	r24, Z+
     bda:	18 2f       	mov	r17, r24
     bdc:	ef 01       	movw	r28, r30
     bde:	88 23       	and	r24, r24
     be0:	09 f4       	brne	.+2      	; 0xbe4 <vfscanf+0x32>
     be2:	ee c0       	rjmp	.+476    	; 0xdc0 <vfscanf+0x20e>
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <isspace>
     bea:	89 2b       	or	r24, r25
     bec:	21 f0       	breq	.+8      	; 0xbf6 <vfscanf+0x44>
     bee:	c6 01       	movw	r24, r12
     bf0:	0e 94 70 04 	call	0x8e0	; 0x8e0 <skip_spaces>
     bf4:	eb cf       	rjmp	.-42     	; 0xbcc <vfscanf+0x1a>
     bf6:	15 32       	cpi	r17, 0x25	; 37
     bf8:	41 f4       	brne	.+16     	; 0xc0a <vfscanf+0x58>
     bfa:	fe 01       	movw	r30, r28
     bfc:	e3 fc       	sbrc	r14, 3
     bfe:	15 91       	lpm	r17, Z+
     c00:	e3 fe       	sbrs	r14, 3
     c02:	11 91       	ld	r17, Z+
     c04:	ef 01       	movw	r28, r30
     c06:	15 32       	cpi	r17, 0x25	; 37
     c08:	81 f4       	brne	.+32     	; 0xc2a <vfscanf+0x78>
     c0a:	c6 01       	movw	r24, r12
     c0c:	0e 94 14 07 	call	0xe28	; 0xe28 <fgetc>
     c10:	97 fd       	sbrc	r25, 7
     c12:	d4 c0       	rjmp	.+424    	; 0xdbc <vfscanf+0x20a>
     c14:	41 2f       	mov	r20, r17
     c16:	50 e0       	ldi	r21, 0x00	; 0
     c18:	9c 01       	movw	r18, r24
     c1a:	33 27       	eor	r19, r19
     c1c:	24 17       	cp	r18, r20
     c1e:	35 07       	cpc	r19, r21
     c20:	a9 f2       	breq	.-86     	; 0xbcc <vfscanf+0x1a>
     c22:	b6 01       	movw	r22, r12
     c24:	0e 94 52 07 	call	0xea4	; 0xea4 <ungetc>
     c28:	cb c0       	rjmp	.+406    	; 0xdc0 <vfscanf+0x20e>
     c2a:	1a 32       	cpi	r17, 0x2A	; 42
     c2c:	39 f4       	brne	.+14     	; 0xc3c <vfscanf+0x8a>
     c2e:	e3 fc       	sbrc	r14, 3
     c30:	15 91       	lpm	r17, Z+
     c32:	e3 fe       	sbrs	r14, 3
     c34:	11 91       	ld	r17, Z+
     c36:	ef 01       	movw	r28, r30
     c38:	01 e0       	ldi	r16, 0x01	; 1
     c3a:	01 c0       	rjmp	.+2      	; 0xc3e <vfscanf+0x8c>
     c3c:	00 e0       	ldi	r16, 0x00	; 0
     c3e:	f1 2c       	mov	r15, r1
     c40:	20 ed       	ldi	r18, 0xD0	; 208
     c42:	21 0f       	add	r18, r17
     c44:	2a 30       	cpi	r18, 0x0A	; 10
     c46:	80 f4       	brcc	.+32     	; 0xc68 <vfscanf+0xb6>
     c48:	02 60       	ori	r16, 0x02	; 2
     c4a:	6f 2d       	mov	r22, r15
     c4c:	70 e0       	ldi	r23, 0x00	; 0
     c4e:	80 e0       	ldi	r24, 0x00	; 0
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	40 e2       	ldi	r20, 0x20	; 32
     c54:	0e 94 49 04 	call	0x892	; 0x892 <mulacc>
     c58:	f6 2e       	mov	r15, r22
     c5a:	fe 01       	movw	r30, r28
     c5c:	e3 fc       	sbrc	r14, 3
     c5e:	15 91       	lpm	r17, Z+
     c60:	e3 fe       	sbrs	r14, 3
     c62:	11 91       	ld	r17, Z+
     c64:	ef 01       	movw	r28, r30
     c66:	ec cf       	rjmp	.-40     	; 0xc40 <vfscanf+0x8e>
     c68:	01 ff       	sbrs	r16, 1
     c6a:	03 c0       	rjmp	.+6      	; 0xc72 <vfscanf+0xc0>
     c6c:	f1 10       	cpse	r15, r1
     c6e:	03 c0       	rjmp	.+6      	; 0xc76 <vfscanf+0xc4>
     c70:	a7 c0       	rjmp	.+334    	; 0xdc0 <vfscanf+0x20e>
     c72:	ff 24       	eor	r15, r15
     c74:	fa 94       	dec	r15
     c76:	18 36       	cpi	r17, 0x68	; 104
     c78:	19 f0       	breq	.+6      	; 0xc80 <vfscanf+0xce>
     c7a:	1c 36       	cpi	r17, 0x6C	; 108
     c7c:	51 f0       	breq	.+20     	; 0xc92 <vfscanf+0xe0>
     c7e:	10 c0       	rjmp	.+32     	; 0xca0 <vfscanf+0xee>
     c80:	fe 01       	movw	r30, r28
     c82:	e3 fc       	sbrc	r14, 3
     c84:	15 91       	lpm	r17, Z+
     c86:	e3 fe       	sbrs	r14, 3
     c88:	11 91       	ld	r17, Z+
     c8a:	ef 01       	movw	r28, r30
     c8c:	18 36       	cpi	r17, 0x68	; 104
     c8e:	41 f4       	brne	.+16     	; 0xca0 <vfscanf+0xee>
     c90:	08 60       	ori	r16, 0x08	; 8
     c92:	04 60       	ori	r16, 0x04	; 4
     c94:	fe 01       	movw	r30, r28
     c96:	e3 fc       	sbrc	r14, 3
     c98:	15 91       	lpm	r17, Z+
     c9a:	e3 fe       	sbrs	r14, 3
     c9c:	11 91       	ld	r17, Z+
     c9e:	ef 01       	movw	r28, r30
     ca0:	11 23       	and	r17, r17
     ca2:	09 f4       	brne	.+2      	; 0xca6 <vfscanf+0xf4>
     ca4:	8d c0       	rjmp	.+282    	; 0xdc0 <vfscanf+0x20e>
     ca6:	61 2f       	mov	r22, r17
     ca8:	70 e0       	ldi	r23, 0x00	; 0
     caa:	88 e6       	ldi	r24, 0x68	; 104
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	0e 94 f3 06 	call	0xde6	; 0xde6 <strchr_P>
     cb2:	89 2b       	or	r24, r25
     cb4:	09 f4       	brne	.+2      	; 0xcb8 <vfscanf+0x106>
     cb6:	84 c0       	rjmp	.+264    	; 0xdc0 <vfscanf+0x20e>
     cb8:	00 fd       	sbrc	r16, 0
     cba:	07 c0       	rjmp	.+14     	; 0xcca <vfscanf+0x118>
     cbc:	f5 01       	movw	r30, r10
     cbe:	80 80       	ld	r8, Z
     cc0:	91 80       	ldd	r9, Z+1	; 0x01
     cc2:	c5 01       	movw	r24, r10
     cc4:	02 96       	adiw	r24, 0x02	; 2
     cc6:	5c 01       	movw	r10, r24
     cc8:	02 c0       	rjmp	.+4      	; 0xcce <vfscanf+0x11c>
     cca:	81 2c       	mov	r8, r1
     ccc:	91 2c       	mov	r9, r1
     cce:	1e 36       	cpi	r17, 0x6E	; 110
     cd0:	51 f4       	brne	.+20     	; 0xce6 <vfscanf+0x134>
     cd2:	f6 01       	movw	r30, r12
     cd4:	46 81       	ldd	r20, Z+6	; 0x06
     cd6:	57 81       	ldd	r21, Z+7	; 0x07
     cd8:	60 e0       	ldi	r22, 0x00	; 0
     cda:	70 e0       	ldi	r23, 0x00	; 0
     cdc:	20 2f       	mov	r18, r16
     cde:	c4 01       	movw	r24, r8
     ce0:	0e 94 3d 04 	call	0x87a	; 0x87a <putval>
     ce4:	73 cf       	rjmp	.-282    	; 0xbcc <vfscanf+0x1a>
     ce6:	13 36       	cpi	r17, 0x63	; 99
     ce8:	a9 f4       	brne	.+42     	; 0xd14 <vfscanf+0x162>
     cea:	01 fd       	sbrc	r16, 1
     cec:	02 c0       	rjmp	.+4      	; 0xcf2 <vfscanf+0x140>
     cee:	ff 24       	eor	r15, r15
     cf0:	f3 94       	inc	r15
     cf2:	c6 01       	movw	r24, r12
     cf4:	0e 94 14 07 	call	0xe28	; 0xe28 <fgetc>
     cf8:	97 fd       	sbrc	r25, 7
     cfa:	60 c0       	rjmp	.+192    	; 0xdbc <vfscanf+0x20a>
     cfc:	81 14       	cp	r8, r1
     cfe:	91 04       	cpc	r9, r1
     d00:	29 f0       	breq	.+10     	; 0xd0c <vfscanf+0x15a>
     d02:	f4 01       	movw	r30, r8
     d04:	80 83       	st	Z, r24
     d06:	c4 01       	movw	r24, r8
     d08:	01 96       	adiw	r24, 0x01	; 1
     d0a:	4c 01       	movw	r8, r24
     d0c:	fa 94       	dec	r15
     d0e:	f1 10       	cpse	r15, r1
     d10:	f0 cf       	rjmp	.-32     	; 0xcf2 <vfscanf+0x140>
     d12:	50 c0       	rjmp	.+160    	; 0xdb4 <vfscanf+0x202>
     d14:	1b 35       	cpi	r17, 0x5B	; 91
     d16:	59 f4       	brne	.+22     	; 0xd2e <vfscanf+0x17c>
     d18:	9e 01       	movw	r18, r28
     d1a:	a4 01       	movw	r20, r8
     d1c:	6f 2d       	mov	r22, r15
     d1e:	c6 01       	movw	r24, r12
     d20:	0e 94 1b 05 	call	0xa36	; 0xa36 <conv_brk>
     d24:	ec 01       	movw	r28, r24
     d26:	89 2b       	or	r24, r25
     d28:	09 f0       	breq	.+2      	; 0xd2c <vfscanf+0x17a>
     d2a:	44 c0       	rjmp	.+136    	; 0xdb4 <vfscanf+0x202>
     d2c:	3e c0       	rjmp	.+124    	; 0xdaa <vfscanf+0x1f8>
     d2e:	c6 01       	movw	r24, r12
     d30:	0e 94 70 04 	call	0x8e0	; 0x8e0 <skip_spaces>
     d34:	97 fd       	sbrc	r25, 7
     d36:	42 c0       	rjmp	.+132    	; 0xdbc <vfscanf+0x20a>
     d38:	1f 36       	cpi	r17, 0x6F	; 111
     d3a:	61 f1       	breq	.+88     	; 0xd94 <vfscanf+0x1e2>
     d3c:	28 f4       	brcc	.+10     	; 0xd48 <vfscanf+0x196>
     d3e:	14 36       	cpi	r17, 0x64	; 100
     d40:	39 f1       	breq	.+78     	; 0xd90 <vfscanf+0x1de>
     d42:	19 36       	cpi	r17, 0x69	; 105
     d44:	51 f1       	breq	.+84     	; 0xd9a <vfscanf+0x1e8>
     d46:	28 c0       	rjmp	.+80     	; 0xd98 <vfscanf+0x1e6>
     d48:	13 37       	cpi	r17, 0x73	; 115
     d4a:	71 f0       	breq	.+28     	; 0xd68 <vfscanf+0x1b6>
     d4c:	15 37       	cpi	r17, 0x75	; 117
     d4e:	01 f1       	breq	.+64     	; 0xd90 <vfscanf+0x1de>
     d50:	23 c0       	rjmp	.+70     	; 0xd98 <vfscanf+0x1e6>
     d52:	81 14       	cp	r8, r1
     d54:	91 04       	cpc	r9, r1
     d56:	29 f0       	breq	.+10     	; 0xd62 <vfscanf+0x1b0>
     d58:	f4 01       	movw	r30, r8
     d5a:	60 82       	st	Z, r6
     d5c:	c4 01       	movw	r24, r8
     d5e:	01 96       	adiw	r24, 0x01	; 1
     d60:	4c 01       	movw	r8, r24
     d62:	fa 94       	dec	r15
     d64:	ff 20       	and	r15, r15
     d66:	71 f0       	breq	.+28     	; 0xd84 <vfscanf+0x1d2>
     d68:	c6 01       	movw	r24, r12
     d6a:	0e 94 14 07 	call	0xe28	; 0xe28 <fgetc>
     d6e:	3c 01       	movw	r6, r24
     d70:	97 fd       	sbrc	r25, 7
     d72:	08 c0       	rjmp	.+16     	; 0xd84 <vfscanf+0x1d2>
     d74:	0e 94 ea 06 	call	0xdd4	; 0xdd4 <isspace>
     d78:	89 2b       	or	r24, r25
     d7a:	59 f3       	breq	.-42     	; 0xd52 <vfscanf+0x1a0>
     d7c:	b6 01       	movw	r22, r12
     d7e:	c3 01       	movw	r24, r6
     d80:	0e 94 52 07 	call	0xea4	; 0xea4 <ungetc>
     d84:	81 14       	cp	r8, r1
     d86:	91 04       	cpc	r9, r1
     d88:	a9 f0       	breq	.+42     	; 0xdb4 <vfscanf+0x202>
     d8a:	f4 01       	movw	r30, r8
     d8c:	10 82       	st	Z, r1
     d8e:	12 c0       	rjmp	.+36     	; 0xdb4 <vfscanf+0x202>
     d90:	00 62       	ori	r16, 0x20	; 32
     d92:	03 c0       	rjmp	.+6      	; 0xd9a <vfscanf+0x1e8>
     d94:	00 61       	ori	r16, 0x10	; 16
     d96:	01 c0       	rjmp	.+2      	; 0xd9a <vfscanf+0x1e8>
     d98:	00 64       	ori	r16, 0x40	; 64
     d9a:	20 2f       	mov	r18, r16
     d9c:	a4 01       	movw	r20, r8
     d9e:	6f 2d       	mov	r22, r15
     da0:	c6 01       	movw	r24, r12
     da2:	0e 94 89 04 	call	0x912	; 0x912 <conv_int>
     da6:	81 11       	cpse	r24, r1
     da8:	05 c0       	rjmp	.+10     	; 0xdb4 <vfscanf+0x202>
     daa:	f6 01       	movw	r30, r12
     dac:	83 81       	ldd	r24, Z+3	; 0x03
     dae:	80 73       	andi	r24, 0x30	; 48
     db0:	29 f4       	brne	.+10     	; 0xdbc <vfscanf+0x20a>
     db2:	06 c0       	rjmp	.+12     	; 0xdc0 <vfscanf+0x20e>
     db4:	00 fd       	sbrc	r16, 0
     db6:	0a cf       	rjmp	.-492    	; 0xbcc <vfscanf+0x1a>
     db8:	53 94       	inc	r5
     dba:	08 cf       	rjmp	.-496    	; 0xbcc <vfscanf+0x1a>
     dbc:	55 20       	and	r5, r5
     dbe:	19 f0       	breq	.+6      	; 0xdc6 <vfscanf+0x214>
     dc0:	85 2d       	mov	r24, r5
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	02 c0       	rjmp	.+4      	; 0xdca <vfscanf+0x218>
     dc6:	8f ef       	ldi	r24, 0xFF	; 255
     dc8:	9f ef       	ldi	r25, 0xFF	; 255
     dca:	cd b7       	in	r28, 0x3d	; 61
     dcc:	de b7       	in	r29, 0x3e	; 62
     dce:	ef e0       	ldi	r30, 0x0F	; 15
     dd0:	0c 94 eb 07 	jmp	0xfd6	; 0xfd6 <__epilogue_restores__+0x6>

00000dd4 <isspace>:
     dd4:	91 11       	cpse	r25, r1
     dd6:	0c 94 c9 07 	jmp	0xf92	; 0xf92 <__ctype_isfalse>
     dda:	80 32       	cpi	r24, 0x20	; 32
     ddc:	19 f0       	breq	.+6      	; 0xde4 <isspace+0x10>
     dde:	89 50       	subi	r24, 0x09	; 9
     de0:	85 50       	subi	r24, 0x05	; 5
     de2:	c8 f7       	brcc	.-14     	; 0xdd6 <isspace+0x2>
     de4:	08 95       	ret

00000de6 <strchr_P>:
     de6:	fc 01       	movw	r30, r24
     de8:	05 90       	lpm	r0, Z+
     dea:	06 16       	cp	r0, r22
     dec:	21 f0       	breq	.+8      	; 0xdf6 <strchr_P+0x10>
     dee:	00 20       	and	r0, r0
     df0:	d9 f7       	brne	.-10     	; 0xde8 <strchr_P+0x2>
     df2:	c0 01       	movw	r24, r0
     df4:	08 95       	ret
     df6:	31 97       	sbiw	r30, 0x01	; 1
     df8:	cf 01       	movw	r24, r30
     dfa:	08 95       	ret

00000dfc <strnlen_P>:
     dfc:	fc 01       	movw	r30, r24
     dfe:	05 90       	lpm	r0, Z+
     e00:	61 50       	subi	r22, 0x01	; 1
     e02:	70 40       	sbci	r23, 0x00	; 0
     e04:	01 10       	cpse	r0, r1
     e06:	d8 f7       	brcc	.-10     	; 0xdfe <strnlen_P+0x2>
     e08:	80 95       	com	r24
     e0a:	90 95       	com	r25
     e0c:	8e 0f       	add	r24, r30
     e0e:	9f 1f       	adc	r25, r31
     e10:	08 95       	ret

00000e12 <strnlen>:
     e12:	fc 01       	movw	r30, r24
     e14:	61 50       	subi	r22, 0x01	; 1
     e16:	70 40       	sbci	r23, 0x00	; 0
     e18:	01 90       	ld	r0, Z+
     e1a:	01 10       	cpse	r0, r1
     e1c:	d8 f7       	brcc	.-10     	; 0xe14 <strnlen+0x2>
     e1e:	80 95       	com	r24
     e20:	90 95       	com	r25
     e22:	8e 0f       	add	r24, r30
     e24:	9f 1f       	adc	r25, r31
     e26:	08 95       	ret

00000e28 <fgetc>:
     e28:	cf 93       	push	r28
     e2a:	df 93       	push	r29
     e2c:	ec 01       	movw	r28, r24
     e2e:	2b 81       	ldd	r18, Y+3	; 0x03
     e30:	20 ff       	sbrs	r18, 0
     e32:	33 c0       	rjmp	.+102    	; 0xe9a <fgetc+0x72>
     e34:	26 ff       	sbrs	r18, 6
     e36:	0a c0       	rjmp	.+20     	; 0xe4c <fgetc+0x24>
     e38:	2f 7b       	andi	r18, 0xBF	; 191
     e3a:	2b 83       	std	Y+3, r18	; 0x03
     e3c:	8e 81       	ldd	r24, Y+6	; 0x06
     e3e:	9f 81       	ldd	r25, Y+7	; 0x07
     e40:	01 96       	adiw	r24, 0x01	; 1
     e42:	9f 83       	std	Y+7, r25	; 0x07
     e44:	8e 83       	std	Y+6, r24	; 0x06
     e46:	8a 81       	ldd	r24, Y+2	; 0x02
     e48:	90 e0       	ldi	r25, 0x00	; 0
     e4a:	29 c0       	rjmp	.+82     	; 0xe9e <fgetc+0x76>
     e4c:	22 ff       	sbrs	r18, 2
     e4e:	0f c0       	rjmp	.+30     	; 0xe6e <fgetc+0x46>
     e50:	e8 81       	ld	r30, Y
     e52:	f9 81       	ldd	r31, Y+1	; 0x01
     e54:	80 81       	ld	r24, Z
     e56:	08 2e       	mov	r0, r24
     e58:	00 0c       	add	r0, r0
     e5a:	99 0b       	sbc	r25, r25
     e5c:	00 97       	sbiw	r24, 0x00	; 0
     e5e:	19 f4       	brne	.+6      	; 0xe66 <fgetc+0x3e>
     e60:	20 62       	ori	r18, 0x20	; 32
     e62:	2b 83       	std	Y+3, r18	; 0x03
     e64:	1a c0       	rjmp	.+52     	; 0xe9a <fgetc+0x72>
     e66:	31 96       	adiw	r30, 0x01	; 1
     e68:	f9 83       	std	Y+1, r31	; 0x01
     e6a:	e8 83       	st	Y, r30
     e6c:	0e c0       	rjmp	.+28     	; 0xe8a <fgetc+0x62>
     e6e:	ea 85       	ldd	r30, Y+10	; 0x0a
     e70:	fb 85       	ldd	r31, Y+11	; 0x0b
     e72:	09 95       	icall
     e74:	97 ff       	sbrs	r25, 7
     e76:	09 c0       	rjmp	.+18     	; 0xe8a <fgetc+0x62>
     e78:	2b 81       	ldd	r18, Y+3	; 0x03
     e7a:	01 96       	adiw	r24, 0x01	; 1
     e7c:	11 f0       	breq	.+4      	; 0xe82 <fgetc+0x5a>
     e7e:	80 e2       	ldi	r24, 0x20	; 32
     e80:	01 c0       	rjmp	.+2      	; 0xe84 <fgetc+0x5c>
     e82:	80 e1       	ldi	r24, 0x10	; 16
     e84:	82 2b       	or	r24, r18
     e86:	8b 83       	std	Y+3, r24	; 0x03
     e88:	08 c0       	rjmp	.+16     	; 0xe9a <fgetc+0x72>
     e8a:	2e 81       	ldd	r18, Y+6	; 0x06
     e8c:	3f 81       	ldd	r19, Y+7	; 0x07
     e8e:	2f 5f       	subi	r18, 0xFF	; 255
     e90:	3f 4f       	sbci	r19, 0xFF	; 255
     e92:	3f 83       	std	Y+7, r19	; 0x07
     e94:	2e 83       	std	Y+6, r18	; 0x06
     e96:	99 27       	eor	r25, r25
     e98:	02 c0       	rjmp	.+4      	; 0xe9e <fgetc+0x76>
     e9a:	8f ef       	ldi	r24, 0xFF	; 255
     e9c:	9f ef       	ldi	r25, 0xFF	; 255
     e9e:	df 91       	pop	r29
     ea0:	cf 91       	pop	r28
     ea2:	08 95       	ret

00000ea4 <ungetc>:
     ea4:	fb 01       	movw	r30, r22
     ea6:	23 81       	ldd	r18, Z+3	; 0x03
     ea8:	20 ff       	sbrs	r18, 0
     eaa:	12 c0       	rjmp	.+36     	; 0xed0 <ungetc+0x2c>
     eac:	26 fd       	sbrc	r18, 6
     eae:	10 c0       	rjmp	.+32     	; 0xed0 <ungetc+0x2c>
     eb0:	8f 3f       	cpi	r24, 0xFF	; 255
     eb2:	3f ef       	ldi	r19, 0xFF	; 255
     eb4:	93 07       	cpc	r25, r19
     eb6:	61 f0       	breq	.+24     	; 0xed0 <ungetc+0x2c>
     eb8:	82 83       	std	Z+2, r24	; 0x02
     eba:	2f 7d       	andi	r18, 0xDF	; 223
     ebc:	20 64       	ori	r18, 0x40	; 64
     ebe:	23 83       	std	Z+3, r18	; 0x03
     ec0:	26 81       	ldd	r18, Z+6	; 0x06
     ec2:	37 81       	ldd	r19, Z+7	; 0x07
     ec4:	21 50       	subi	r18, 0x01	; 1
     ec6:	31 09       	sbc	r19, r1
     ec8:	37 83       	std	Z+7, r19	; 0x07
     eca:	26 83       	std	Z+6, r18	; 0x06
     ecc:	99 27       	eor	r25, r25
     ece:	08 95       	ret
     ed0:	8f ef       	ldi	r24, 0xFF	; 255
     ed2:	9f ef       	ldi	r25, 0xFF	; 255
     ed4:	08 95       	ret

00000ed6 <__ultoa_invert>:
     ed6:	fa 01       	movw	r30, r20
     ed8:	aa 27       	eor	r26, r26
     eda:	28 30       	cpi	r18, 0x08	; 8
     edc:	51 f1       	breq	.+84     	; 0xf32 <__ultoa_invert+0x5c>
     ede:	20 31       	cpi	r18, 0x10	; 16
     ee0:	81 f1       	breq	.+96     	; 0xf42 <__ultoa_invert+0x6c>
     ee2:	e8 94       	clt
     ee4:	6f 93       	push	r22
     ee6:	6e 7f       	andi	r22, 0xFE	; 254
     ee8:	6e 5f       	subi	r22, 0xFE	; 254
     eea:	7f 4f       	sbci	r23, 0xFF	; 255
     eec:	8f 4f       	sbci	r24, 0xFF	; 255
     eee:	9f 4f       	sbci	r25, 0xFF	; 255
     ef0:	af 4f       	sbci	r26, 0xFF	; 255
     ef2:	b1 e0       	ldi	r27, 0x01	; 1
     ef4:	3e d0       	rcall	.+124    	; 0xf72 <__ultoa_invert+0x9c>
     ef6:	b4 e0       	ldi	r27, 0x04	; 4
     ef8:	3c d0       	rcall	.+120    	; 0xf72 <__ultoa_invert+0x9c>
     efa:	67 0f       	add	r22, r23
     efc:	78 1f       	adc	r23, r24
     efe:	89 1f       	adc	r24, r25
     f00:	9a 1f       	adc	r25, r26
     f02:	a1 1d       	adc	r26, r1
     f04:	68 0f       	add	r22, r24
     f06:	79 1f       	adc	r23, r25
     f08:	8a 1f       	adc	r24, r26
     f0a:	91 1d       	adc	r25, r1
     f0c:	a1 1d       	adc	r26, r1
     f0e:	6a 0f       	add	r22, r26
     f10:	71 1d       	adc	r23, r1
     f12:	81 1d       	adc	r24, r1
     f14:	91 1d       	adc	r25, r1
     f16:	a1 1d       	adc	r26, r1
     f18:	20 d0       	rcall	.+64     	; 0xf5a <__ultoa_invert+0x84>
     f1a:	09 f4       	brne	.+2      	; 0xf1e <__ultoa_invert+0x48>
     f1c:	68 94       	set
     f1e:	3f 91       	pop	r19
     f20:	2a e0       	ldi	r18, 0x0A	; 10
     f22:	26 9f       	mul	r18, r22
     f24:	11 24       	eor	r1, r1
     f26:	30 19       	sub	r19, r0
     f28:	30 5d       	subi	r19, 0xD0	; 208
     f2a:	31 93       	st	Z+, r19
     f2c:	de f6       	brtc	.-74     	; 0xee4 <__ultoa_invert+0xe>
     f2e:	cf 01       	movw	r24, r30
     f30:	08 95       	ret
     f32:	46 2f       	mov	r20, r22
     f34:	47 70       	andi	r20, 0x07	; 7
     f36:	40 5d       	subi	r20, 0xD0	; 208
     f38:	41 93       	st	Z+, r20
     f3a:	b3 e0       	ldi	r27, 0x03	; 3
     f3c:	0f d0       	rcall	.+30     	; 0xf5c <__ultoa_invert+0x86>
     f3e:	c9 f7       	brne	.-14     	; 0xf32 <__ultoa_invert+0x5c>
     f40:	f6 cf       	rjmp	.-20     	; 0xf2e <__ultoa_invert+0x58>
     f42:	46 2f       	mov	r20, r22
     f44:	4f 70       	andi	r20, 0x0F	; 15
     f46:	40 5d       	subi	r20, 0xD0	; 208
     f48:	4a 33       	cpi	r20, 0x3A	; 58
     f4a:	18 f0       	brcs	.+6      	; 0xf52 <__ultoa_invert+0x7c>
     f4c:	49 5d       	subi	r20, 0xD9	; 217
     f4e:	31 fd       	sbrc	r19, 1
     f50:	40 52       	subi	r20, 0x20	; 32
     f52:	41 93       	st	Z+, r20
     f54:	02 d0       	rcall	.+4      	; 0xf5a <__ultoa_invert+0x84>
     f56:	a9 f7       	brne	.-22     	; 0xf42 <__ultoa_invert+0x6c>
     f58:	ea cf       	rjmp	.-44     	; 0xf2e <__ultoa_invert+0x58>
     f5a:	b4 e0       	ldi	r27, 0x04	; 4
     f5c:	a6 95       	lsr	r26
     f5e:	97 95       	ror	r25
     f60:	87 95       	ror	r24
     f62:	77 95       	ror	r23
     f64:	67 95       	ror	r22
     f66:	ba 95       	dec	r27
     f68:	c9 f7       	brne	.-14     	; 0xf5c <__ultoa_invert+0x86>
     f6a:	00 97       	sbiw	r24, 0x00	; 0
     f6c:	61 05       	cpc	r22, r1
     f6e:	71 05       	cpc	r23, r1
     f70:	08 95       	ret
     f72:	9b 01       	movw	r18, r22
     f74:	ac 01       	movw	r20, r24
     f76:	0a 2e       	mov	r0, r26
     f78:	06 94       	lsr	r0
     f7a:	57 95       	ror	r21
     f7c:	47 95       	ror	r20
     f7e:	37 95       	ror	r19
     f80:	27 95       	ror	r18
     f82:	ba 95       	dec	r27
     f84:	c9 f7       	brne	.-14     	; 0xf78 <__ultoa_invert+0xa2>
     f86:	62 0f       	add	r22, r18
     f88:	73 1f       	adc	r23, r19
     f8a:	84 1f       	adc	r24, r20
     f8c:	95 1f       	adc	r25, r21
     f8e:	a0 1d       	adc	r26, r0
     f90:	08 95       	ret

00000f92 <__ctype_isfalse>:
     f92:	99 27       	eor	r25, r25
     f94:	88 27       	eor	r24, r24

00000f96 <__ctype_istrue>:
     f96:	08 95       	ret

00000f98 <__prologue_saves__>:
     f98:	2f 92       	push	r2
     f9a:	3f 92       	push	r3
     f9c:	4f 92       	push	r4
     f9e:	5f 92       	push	r5
     fa0:	6f 92       	push	r6
     fa2:	7f 92       	push	r7
     fa4:	8f 92       	push	r8
     fa6:	9f 92       	push	r9
     fa8:	af 92       	push	r10
     faa:	bf 92       	push	r11
     fac:	cf 92       	push	r12
     fae:	df 92       	push	r13
     fb0:	ef 92       	push	r14
     fb2:	ff 92       	push	r15
     fb4:	0f 93       	push	r16
     fb6:	1f 93       	push	r17
     fb8:	cf 93       	push	r28
     fba:	df 93       	push	r29
     fbc:	cd b7       	in	r28, 0x3d	; 61
     fbe:	de b7       	in	r29, 0x3e	; 62
     fc0:	ca 1b       	sub	r28, r26
     fc2:	db 0b       	sbc	r29, r27
     fc4:	0f b6       	in	r0, 0x3f	; 63
     fc6:	f8 94       	cli
     fc8:	de bf       	out	0x3e, r29	; 62
     fca:	0f be       	out	0x3f, r0	; 63
     fcc:	cd bf       	out	0x3d, r28	; 61
     fce:	09 94       	ijmp

00000fd0 <__epilogue_restores__>:
     fd0:	2a 88       	ldd	r2, Y+18	; 0x12
     fd2:	39 88       	ldd	r3, Y+17	; 0x11
     fd4:	48 88       	ldd	r4, Y+16	; 0x10
     fd6:	5f 84       	ldd	r5, Y+15	; 0x0f
     fd8:	6e 84       	ldd	r6, Y+14	; 0x0e
     fda:	7d 84       	ldd	r7, Y+13	; 0x0d
     fdc:	8c 84       	ldd	r8, Y+12	; 0x0c
     fde:	9b 84       	ldd	r9, Y+11	; 0x0b
     fe0:	aa 84       	ldd	r10, Y+10	; 0x0a
     fe2:	b9 84       	ldd	r11, Y+9	; 0x09
     fe4:	c8 84       	ldd	r12, Y+8	; 0x08
     fe6:	df 80       	ldd	r13, Y+7	; 0x07
     fe8:	ee 80       	ldd	r14, Y+6	; 0x06
     fea:	fd 80       	ldd	r15, Y+5	; 0x05
     fec:	0c 81       	ldd	r16, Y+4	; 0x04
     fee:	1b 81       	ldd	r17, Y+3	; 0x03
     ff0:	aa 81       	ldd	r26, Y+2	; 0x02
     ff2:	b9 81       	ldd	r27, Y+1	; 0x01
     ff4:	ce 0f       	add	r28, r30
     ff6:	d1 1d       	adc	r29, r1
     ff8:	0f b6       	in	r0, 0x3f	; 63
     ffa:	f8 94       	cli
     ffc:	de bf       	out	0x3e, r29	; 62
     ffe:	0f be       	out	0x3f, r0	; 63
    1000:	cd bf       	out	0x3d, r28	; 61
    1002:	ed 01       	movw	r28, r26
    1004:	08 95       	ret

00001006 <_exit>:
    1006:	f8 94       	cli

00001008 <__stop_program>:
    1008:	ff cf       	rjmp	.-2      	; 0x1008 <__stop_program>
